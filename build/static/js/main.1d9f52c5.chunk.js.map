{"version":3,"sources":["assets/img/eye.svg","redux/modules/users/index.js","components/Login.js","components/SidebarMenu.js","redux/modules/library/index.js","components/library/Info.js","components/library/InfoPanel.js","components/library/Library.js","redux/modules/scouting/index.js","components/scouting/Info.js","components/scouting/InfoPanel.js","components/scouting/ScoutingInfo.js","redux/modules/masterclass/index.js","components/masterclass/Info.js","components/masterclass/InfoPanel.js","components/masterclass/Masterclass.js","components/UserPanel.js","redux/modules/operation/index.js","components/operation/Info.js","components/operation/InfoPanel.js","components/operation/ViewCard.js","components/operation/View.js","components/operation/Operation.js","components/App.js","configs/environment.js","redux/rootSagas.js","redux/modules/library/saga.js","redux/modules/users/saga.js","redux/modules/masterclass/saga.js","redux/modules/operation/saga.js","redux/modules/scouting/saga.js","redux/initSagas.js","redux/configureStore.js","index.js"],"names":["module","exports","ActionTypesUsers","initialUserState","loggedIn","user","reducer","state","action","type","payload","accessToken","localStorage","setItem","JSON","stringify","error","clear","page","connect","signInUserRequest","userInfo","isOpen","setOpen","useState","username","setUsername","password","setPassword","Modal","open","onClose","onOpen","trigger","Menu","Item","Icon","name","Header","Content","Form","size","Field","placeholder","onChange","e","target","value","Actions","Button","content","color","onClick","preventDefault","labelPosition","icon","positive","SidebarMenu","isOpenLogin","setOpenLogin","useSelector","users","console","log","Sidebar","as","animation","direction","inverted","vertical","visible","width","className","id","Link","to","photo","Image","src","photoUrl","avatar","ActionTypesLibrary","initialLibraryState","list","info","fetchInfoSuccess","fetchInfoFailure","Info","infoRows","Object","entries","data","map","key","card","Card","eye","style","marginBottom","Meta","category","Description","List","filter","item","index","image","wrapped","InfoPanel","dispatch","useDispatch","library","useEffect","cards","Loader","active","length","Group","stackable","Library","attached","exact","path","ActionTypesScouting","initialScoutingState","scouting","ScoutingInfo","ActionTypesMasterclass","initialMasterclassState","message","failure","text","masterclass","isButtonDisabled","students","max_students","findIndex","stud","messageBlock","Message","negative","student","Table","Row","Cell","Subheader","group","date","HeaderCell","Body","disabled","params","_id","Masterclass","UserPanel","history","useHistory","userId","exams","operations","examsRows","ex","success","indexOf","Label","operationsRows","op","all_points","points","Grid","columns","Column","computer","mobile","rounded","floated","Segment","Rating","rating","lives","maxRating","level","Progress","experience","total","progress","indicating","celled","stretched","push","ActionTypesOperation","initialOperationState","view","fetchOperationViewRequest","operation","usr","max_users","ViewCard","userCards","alive","gifUrl","ui","itemsPerRow","View","shallowEqual","interval","setInterval","clearInterval","divided","Operation","App","token","getItem","Pushable","Pusher","minHeight","API_HTTP","process","api","options","this","instance","axios","create","headers","interceptors","response","use","getInstance","createRequest","fetchLibraryWorker","watchLibraryActionsSaga","url","concat","request","method","call","put","all","takeEvery","singUpUserWorker","singInUserWorker","autoupdateUserWorker","fetchUserPageWorker","watchUsersActionsSaga","examRequest","operationsRequest","fetchMasterclassWorker","registerMasterclassWorker","watchMasterclassActionsSaga","fetchOperationWorker","registerOperationWorker","fetchOperationViewWorker","watchOperationActionsSaga","gif","fetchScoutingWorker","watchScoutingActionsSaga","sagaMiddleware","createSagaMiddleware","middleWares","enhancer","composeWithDevTools","applyMiddleware","store","rootReducer","combineReducers","compose","createStore","values","sagas","forEach","run","bind","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d9f52c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eye.fe2c1e75.svg\";","export const ActionTypesUsers = {\r\n    SIGN_UP_USER_REQUEST: 'users/SIGN_UP_USER_REQUEST',\r\n    SIGN_UP_USER_SUCCESS: 'users/SIGN_UP_USER_SUCCESS',\r\n    SIGN_UP_USER_FAILURE: 'users/SIGN_UP_USER_FAILURE',\r\n\r\n    SIGN_IN_USER_REQUEST: 'users/SIGN_IN_USER_REQUEST',\r\n    SIGN_IN_USER_SUCCESS: 'users/SIGN_IN_USER_SUCCESS',\r\n    SIGN_IN_USER_FAILURE: 'users/SIGN_IN_USER_FAILURE',\r\n//autoupdate\r\n    AUTOUPDATE_USER_REQUEST: 'users/AUTOUPDATE_USER_REQUEST',\r\n    AUTOUPDATE_USER_SUCCESS: 'users/AUTOUPDATE_USER_SUCCESS',\r\n    AUTOUPDATE_USER_FAILURE: 'users/AUTOUPDATE_USER_FAILURE',\r\n\r\n    SIGN_OUT_USER_REQUEST: 'users/SIGN_OUT_USER_REQUEST',\r\n\r\n    FETCH_USER_PAGE_REQUEST: 'users/FETCH_USER_PAGE_REQUEST',\r\n    FETCH_USER_PAGE_SUCCESS: 'users/FETCH_USER_PAGE_SUCCESS',\r\n    FETCH_USER_PAGE_FAILURE: 'users/FETCH_USER_PAGE_FAILURE',\r\n};\r\n\r\nexport const initialUserState = {\r\n    loggedIn: false,\r\n    user: {}\r\n};\r\n\r\nexport default function reducer(\r\n    state = initialUserState,\r\n    action\r\n) {\r\n    switch (action.type) {\r\n        //TODO: add sign_up with msg or err\r\n        case ActionTypesUsers.SIGN_IN_USER_SUCCESS:\r\n          const {accessToken, ...user} = action.payload;\r\n          localStorage.setItem(\"user\", JSON.stringify(user))\r\n          localStorage.setItem(\"token\", accessToken)\r\n          return {\r\n            loggedIn: true,\r\n            user\r\n          }\r\n        case ActionTypesUsers.SIGN_IN_USER_FAILURE: \r\n          return {\r\n            loggedIn: false,\r\n            error: action.error\r\n        }\r\n        case ActionTypesUsers.SIGN_OUT_USER_REQUEST:\r\n          localStorage.clear()\r\n          return {\r\n            loggedIn: false,\r\n            user: {}\r\n        }\r\n        case ActionTypesUsers.AUTOUPDATE_USER_SUCCESS:\r\n          return {\r\n            loggedIn: false,\r\n            user: action.payload\r\n          }\r\n        case ActionTypesUsers.AUTOUPDATE_USER_FAILURE:\r\n          return {\r\n            loggedIn: false,\r\n            user: {}\r\n          }\r\n\r\n        case ActionTypesUsers.FETCH_USER_PAGE_SUCCESS:\r\n          return {\r\n            ...state,\r\n            page: action.payload\r\n          }\r\n        case ActionTypesUsers.FETCH_USER_PAGE_FAILURE:\r\n          return {\r\n            ...state,\r\n            error: action.error\r\n          }\r\n        \r\n        default: \r\n          return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const signUpUserRequest = (userInfo) => ({\r\n  type: ActionTypesUsers.SIGN_UP_USER_REQUEST,\r\n  userInfo\r\n})\r\nexport const signUpUserSuccess = (payload) => ({\r\n  type: ActionTypesUsers.SIGN_UP_USER_SUCCESS,\r\n  payload\r\n})\r\nexport const signUpUserFailure = (error) => ({\r\n  type: ActionTypesUsers.SIGN_UP_USER_FAILURE,\r\n  error\r\n})\r\n\r\nexport const signInUserRequest = (userInfo) => ({\r\n  type: ActionTypesUsers.SIGN_IN_USER_REQUEST,\r\n  userInfo\r\n})\r\nexport const signInUserSuccess = (payload) => ({\r\n  type: ActionTypesUsers.SIGN_IN_USER_SUCCESS,\r\n  payload\r\n})\r\nexport const signInUserFailure = (error) => ({\r\n  type: ActionTypesUsers.SIGN_IN_USER_FAILURE,\r\n  error\r\n})\r\n\r\nexport const autoupdateUserRequest = () => ({\r\n  type: ActionTypesUsers.AUTOUPDATE_USER_REQUEST\r\n})\r\nexport const autoupdateUserSuccess = (payload) => ({\r\n  type: ActionTypesUsers.AUTOUPDATE_USER_SUCCESS,\r\n  payload\r\n})\r\nexport const autoupdateUserFailure = (error) => ({\r\n  type: ActionTypesUsers.AUTOUPDATE_USER_FAILURE,\r\n  error\r\n})\r\n\r\nexport const signOutUserRequest = () => ({\r\n  type: ActionTypesUsers.SIGN_OUT_USER_REQUEST\r\n})\r\n\r\nexport const fetchUserPageRequest = (userId) => ({\r\n  type: ActionTypesUsers.FETCH_USER_PAGE_REQUEST,\r\n  userId\r\n})\r\nexport const fetchUserPageSuccess = (payload) => ({\r\n  type: ActionTypesUsers.FETCH_USER_PAGE_SUCCESS,\r\n  payload\r\n})\r\nexport const fetchUserPageFailure = (error) => ({\r\n  type: ActionTypesUsers.FETCH_USER_PAGE_FAILURE,\r\n  error\r\n})","import React, {useState} from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport {signInUserRequest, signOutUserRequest} from '../redux/modules/users';\r\nimport { Header, Button, Form, Modal, Menu, Icon } from 'semantic-ui-react'\r\n\r\nfunction Login({signInUserRequest, isOpen, setOpen}) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const login = () => {\r\n        signInUserRequest({ username, password });\r\n    }\r\n\r\n    return (\r\n        <Modal \r\n          open={isOpen}\r\n          onClose={() => setOpen(false)}\r\n          onOpen={() => setOpen(true)}\r\n          trigger={\r\n            <Menu.Item>\r\n              <Icon name='user circle' />\r\n              Войти в базу\r\n            </Menu.Item>\r\n          }\r\n        >\r\n            <Modal.Header>\r\n                Вход в Базу\r\n            </Modal.Header>\r\n            <Modal.Content>\r\n                <Form\r\n                  size=\"small\"\r\n                >\r\n                    <Form.Field>\r\n                        <label>Имя пользователя</label>\r\n                        <input \r\n                        placeholder='username'\r\n                        onChange={(e) => {setUsername(e.target.value)}}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Пароль</label>\r\n                        <input \r\n                        placeholder='password'\r\n                        type=\"password\"\r\n                        onChange={(e) => {setPassword(e.target.value)}}/>\r\n                    </Form.Field>\r\n                </Form>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                  content=\"Отмена\"\r\n                  color='black'\r\n                  onClick={(e) => {e.preventDefault(); setOpen(false)}}\r\n                />\r\n                <Button \r\n                  content=\"Войти\"\r\n                  labelPosition='right'\r\n                  icon='checkmark'\r\n                  onClick={(e) => {e.preventDefault(); login(); setOpen(false)}}\r\n                  positive\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default connect(null, {\r\n    signInUserRequest\r\n})(Login)","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Sidebar, Menu, Icon, Image } from 'semantic-ui-react'\r\nimport Login from './Login'\r\n\r\nexport default function SidebarMenu () {\r\n  const [isOpenLogin, setOpenLogin] = useState(false);\r\n  //const user = JSON.parse(localStorage.getItem('user'));\r\n  const user = useSelector(state => state.users.user)\r\n  console.log('user :>> ', user);\r\n    return ( \r\n      <Sidebar\r\n          as={Menu}\r\n          animation='push'\r\n          direction='left'\r\n          icon='labeled'\r\n          inverted\r\n          vertical\r\n          visible={true}\r\n          width='thin'\r\n          className=\"leftSidebar\"\r\n      >\r\n        { user.id ? <Menu.Item as={Link} to=\"/user\">\r\n            {user.photo !== '' ? <Image src={user.photoUrl} avatar size=\"mini\"/> : <Icon name=\"user\"/>}\r\n            <p> {user.name}</p>\r\n          </Menu.Item> : <Login\r\n          isOpen={isOpenLogin}\r\n          setOpen={setOpenLogin}\r\n        />}\r\n          <Menu.Item as={Link} to=\"/library\">\r\n              <Icon name='book' />\r\n              База знаний\r\n          </Menu.Item>\r\n          <Menu.Item as={Link} to=\"/scouting\">\r\n              <Icon name='user secret'/>\r\n              Разведка\r\n          </Menu.Item>\r\n          <Menu.Item as={Link} to=\"/masterclass\">\r\n              <Icon name='graduation cap' /> \r\n              Мастерклассы\r\n          </Menu.Item> \r\n          <Menu.Item as={Link} to=\"/operation\">\r\n              <Icon name='crosshairs' />\r\n              Высадки\r\n          </Menu.Item>\r\n          <Menu.Item as={Link} to=\"/operation/view\">\r\n              <Icon name='shield alternate' />\r\n              Боевой интерфейс\r\n          </Menu.Item>\r\n      </Sidebar>\r\n    )\r\n}","import {ActionTypesUsers} from '../users'\r\n\r\nexport const ActionTypesLibrary = {\r\n    FETCH_LIBRARY_REQUEST: 'library/FETCH_LIBRARY_REQUEST',\r\n    FETCH_LIBRARY_SUCCESS: 'library/FETCH_LIBRARY_SUCCESS',\r\n    FETCH_LIBRARY_FAILURE: 'library/FETCH_LIBRARY_FAILURE',\r\n    FETCH_INFO_REQUEST: 'library/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'library/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'library/FETCH_INFO_FAILURE'\r\n  };\r\n  \r\n  export const initialLibraryState = {\r\n    list: [],\r\n    info: {}\r\n  };\r\n  \r\n  export default function reducer(\r\n    state = initialLibraryState,\r\n    action\r\n  ) {\r\n    switch (action.type) {\r\n  \r\n      case ActionTypesLibrary.FETCH_LIBRARY_SUCCESS:\r\n        return {\r\n          ...state,\r\n          list: action.payload\r\n        };\r\n  \r\n      case ActionTypesLibrary.FETCH_LIBRARY_FAILURE:\r\n        return {\r\n          ...state,\r\n          error: action.error\r\n        };\r\n\r\n      case ActionTypesLibrary.FETCH_INFO_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload\r\n        };\r\n\r\n      case ActionTypesLibrary.FETCH_INFO_FAILURE:\r\n        return {\r\n          ...state,\r\n          error: action.error\r\n        };\r\n\r\n      case ActionTypesUsers.SIGN_OUT_USER_REQUEST:\r\n        return {\r\n          ...initialLibraryState\r\n        }\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  // Action Creators\r\n  export const fetchLibraryRequest = () => ({\r\n    type: ActionTypesLibrary.FETCH_LIBRARY_REQUEST\r\n  });\r\n  \r\n  export const fetchLibrarySuccess = (payload) => ({\r\n    type: ActionTypesLibrary.FETCH_LIBRARY_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchLibraryFailure = (error) => ({\r\n    type: ActionTypesLibrary.FETCH_LIBRARY_FAILURE,\r\n    error\r\n  });\r\n\r\n  export const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesLibrary.FETCH_INFO_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesLibrary.FETCH_INFO_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesLibrary.FETCH_INFO_FAILURE,\r\n    error\r\n  });","import React, {useState} from 'react'\r\nimport { Button, Image, Modal, Card, List } from 'semantic-ui-react'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function Info ({info}) {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const infoRows = Object.entries(info.data || {}).map(([key, value]) => <p key={key}>{`${key}: ${value}`}</p>);\r\n    \r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={info.photo ? `${info.photoUrl}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{info.name}</Card.Header>\r\n                <Card.Meta>{info.category}</Card.Meta>\r\n                <Card.Description>\r\n                  <List>\r\n                    {infoRows.filter((item, index) => index < 3)}\r\n                  </List>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n\r\n    return (\r\n        <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={card}\r\n        >\r\n            <Modal.Header>{info.name}</Modal.Header>\r\n            <Modal.Content image>\r\n                <Image size='medium' src={info.photo ? `${info.photoUrl}` : eye} wrapped />\r\n                <Modal.Description>\r\n                    {infoRows}\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    \r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport {fetchLibraryRequest} from '../../redux/modules/library'\r\nimport {Card, Loader} from 'semantic-ui-react'\r\nimport Info from './Info'\r\n\r\nexport default function InfoPanel () {\r\n    const dispatch = useDispatch()\r\n    const library = useSelector(state => state.library.list) || []\r\n    const error = useSelector(state => state.library.error)\r\n    \r\n    useEffect(\r\n        () => {dispatch(fetchLibraryRequest())},\r\n        []\r\n    )\r\n    console.log('library :', library);\r\n    console.log('error :', error);\r\n\r\n    const cards = library.map(info => {\r\n        return (\r\n            <Info info={info}/>\r\n        )\r\n    });\r\n    return (\r\n        <>\r\n            <Loader active={library.length === 0}/>\r\n            <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                {cards}\r\n            </Card.Group>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Route } from \"react-router-dom\";\r\nimport { Header } from 'semantic-ui-react'\r\nimport InfoPanel from './InfoPanel'\r\nimport './Library.scss'\r\n\r\nexport default function Library() {\r\n    //TODO: make header dynamic (should show path using breadcrumbs)\r\n    return (\r\n        <div className=\"container\">\r\n            <Header as='h2' attached='top'>\r\n                База знаний\r\n            </Header>\r\n            <Route exact path=\"/library\">\r\n                <InfoPanel/>\r\n            </Route>\r\n        </div>\r\n    )\r\n}","export const ActionTypesScouting = {\r\n    FETCH_SCOUTING_REQUEST: 'scouting/FETCH_scouting_REQUEST',\r\n    FETCH_SCOUTING_SUCCESS: 'scouting/FETCH_scouting_SUCCESS',\r\n    FETCH_SCOUTING_FAILURE: 'scouting/FETCH_scouting_FAILURE',\r\n    FETCH_INFO_REQUEST: 'scouting/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'scouting/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'scouting/FETCH_INFO_FAILURE'\r\n};\r\n\r\nexport const initialScoutingState = {\r\n    list: [],\r\n    info: {}\r\n};\r\n\r\nexport default function reducer(\r\n    state = initialScoutingState,\r\n    action\r\n) {\r\n    switch (action.type) {\r\n\r\n        case ActionTypesScouting.FETCH_SCOUTING_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list: action.payload\r\n            };\r\n\r\n        case ActionTypesScouting.FETCH_SCOUTING_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n\r\n        case ActionTypesScouting.FETCH_INFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                info: action.payload\r\n            };\r\n\r\n        case ActionTypesScouting.FETCH_INFO_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const fetchScoutingRequest = () => ({\r\n    type: ActionTypesScouting.FETCH_SCOUTING_REQUEST\r\n});\r\n\r\nexport const fetchScoutingSuccess = (payload) => ({\r\n    type: ActionTypesScouting.FETCH_SCOUTING_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const fetchScoutingFailure = (error) => ({\r\n    type: ActionTypesScouting.FETCH_SCOUTING_FAILURE,\r\n    error\r\n});\r\n\r\nexport const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesScouting.FETCH_INFO_REQUEST,\r\n    params\r\n});\r\n\r\nexport const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesScouting.FETCH_INFO_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesScouting.FETCH_INFO_FAILURE,\r\n    error\r\n});","import React, {useState} from 'react'\r\nimport { Button, Image, Modal, Card, List } from 'semantic-ui-react'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function Info ({info}) {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const infoRows = Object.entries(info.data || {}).map(([key, value]) => <p key={key}>{`${key}: ${value}`}</p>);\r\n    \r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={info.photo ? `${info.photoUrl}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{info.name}</Card.Header>\r\n                <Card.Meta>{info.category}</Card.Meta>\r\n                <Card.Description>\r\n                  <List>\r\n                    {infoRows.filter((item, index) => index < 3)}\r\n                  </List>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n\r\n    return (\r\n        <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={card}\r\n        >\r\n            <Modal.Header>{info.name}</Modal.Header>\r\n            <Modal.Content image>\r\n                <Image size='medium' src={info.photo ? `${info.photoUrl}` : eye} wrapped />\r\n                <Modal.Description>\r\n                    {infoRows}\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    \r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport {fetchScoutingRequest} from '../../redux/modules/scouting'\r\nimport {Card, Loader} from 'semantic-ui-react'\r\nimport Info from './Info'\r\n\r\nexport default function InfoPanel () {\r\n    const dispatch = useDispatch()\r\n    const scouting = useSelector(state => state.scouting.list) || []\r\n    const error = useSelector(state => state.scouting.error)\r\n    \r\n    useEffect(\r\n        () => {dispatch(fetchScoutingRequest())},\r\n        []\r\n    )\r\n    console.log('scouting :', scouting);\r\n    console.log('error :', error);\r\n\r\n    const cards = scouting.map(info => {\r\n        return (\r\n            <Info info={info}/>\r\n        )\r\n    });\r\n    return (\r\n        <>\r\n            <Loader active={scouting.length === 0}/>\r\n            <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                {cards}\r\n            </Card.Group>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Route } from \"react-router-dom\";\r\nimport { Header } from 'semantic-ui-react'\r\nimport InfoPanel from './InfoPanel'\r\nimport './Scouting.scss'\r\n\r\nexport default function ScoutingInfo() {\r\n    //TODO: make header dynamic (should show path using breadcrumbs)\r\n    return (\r\n        <div className=\"container\">\r\n            <Header as='h2' attached='top'>\r\n                Информация\r\n            </Header>\r\n            <Route exact path=\"/scouting\">\r\n                <InfoPanel/>\r\n            </Route>\r\n        </div>\r\n    )\r\n}","import {ActionTypesUsers} from '../users'\r\n\r\nexport const ActionTypesMasterclass = {\r\n    FETCH_MASTERCLASS_REQUEST: 'masterclass/FETCH_MASTERCLASS_REQUEST',\r\n    FETCH_MASTERCLASS_SUCCESS: 'masterclass/FETCH_MASTERCLASS_SUCCESS',\r\n    FETCH_MASTERCLASS_FAILURE: 'masterclass/FETCH_MASTERCLASS_FAILURE',\r\n    FETCH_INFO_REQUEST: 'masterclass/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'masterclass/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'masterclass/FETCH_INFO_FAILURE',\r\n    REGISTER_MASTERCLASS_REQUEST: 'masterclass/REGISTER_MASTERCLASS_REQUEST',\r\n    REGISTER_MASTERCLASS_SUCCESS: 'masterclass/REGISTER_MASTERCLASS_SUCCESS',\r\n    REGISTER_MASTERCLASS_FAILURE: 'masterclass/REGISTER_MASTERCLASS_FAILURE'\r\n\r\n  };\r\n  \r\n  export const initialMasterclassState = {\r\n    list: [],\r\n    info: {},\r\n    message: {}\r\n  };\r\n  \r\n  export default function reducer(\r\n    state = initialMasterclassState,\r\n    action\r\n  ) {\r\n    switch (action.type) {\r\n  \r\n      case ActionTypesMasterclass.FETCH_MASTERCLASS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          list: action.payload,\r\n          message: {}\r\n        };\r\n      case ActionTypesMasterclass.FETCH_MASTERCLASS_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        };\r\n\r\n      case ActionTypesMasterclass.FETCH_INFO_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload,\r\n          message: {}\r\n        };\r\n      case ActionTypesMasterclass.FETCH_INFO_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        };\r\n\r\n      case ActionTypesMasterclass.REGISTER_MASTERCLASS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload,\r\n          message: { failure: false, text: 'Вы успешно записисались на мастеркласс!' }\r\n        }\r\n      case ActionTypesMasterclass.REGISTER_MASTERCLASS_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n\r\n      case ActionTypesUsers.SIGN_OUT_USER_REQUEST:\r\n        return {\r\n          ...initialMasterclassState\r\n        }\r\n    \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  // Action Creators\r\n  export const fetchMasterclassRequest = () => ({\r\n    type: ActionTypesMasterclass.FETCH_MASTERCLASS_REQUEST\r\n  });\r\n  \r\n  export const fetchMasterclassSuccess = (payload) => ({\r\n    type: ActionTypesMasterclass.FETCH_MASTERCLASS_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchMasterclassFailure = (error) => ({\r\n    type: ActionTypesMasterclass.FETCH_MASTERCLASS_FAILURE,\r\n    error\r\n  });\r\n\r\n  export const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesMasterclass.FETCH_INFO_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesMasterclass.FETCH_INFO_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesMasterclass.FETCH_INFO_FAILURE,\r\n    error\r\n  });\r\n  \r\n  export const registerMasterclassRequest = (params) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const registerMasterclassSuccess = (payload) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const registerMasterclassFailure = (error) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_FAILURE,\r\n    error\r\n  });","import React, {useState} from 'react'\r\nimport { Button, Header, Image, Modal, Container, Table, Icon, Message, Card, List } from 'semantic-ui-react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {registerMasterclassRequest} from '../../redux/modules/masterclass'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function Info ({info}) {\r\n    const [open, setOpen] = useState(false)\r\n    const message = useSelector(state => state.masterclass.message)\r\n    const user = useSelector(state => state.users.user)\r\n    const dispatch = useDispatch()\r\n\r\n    const isButtonDisabled = info.students && ((info.students.length >= info.max_students) || (info.students.findIndex(stud => stud.id === user.id) !== -1));\r\n    const messageBlock = <Message positive={!message.failure} negative={message.failure}><Message.Header>{message.text}</Message.Header></Message>\r\n    const infoRows = Object.entries(info.data || {}).map(([key, value]) => <p key={key}>{`${key}: ${value}`}</p>);\r\n    const students = info.students ? info.students.map(\r\n        student => (\r\n          <Table.Row key={student.username}>\r\n            <Table.Cell>\r\n              <Header as='h4' image>\r\n                {student.photo && student.photo !== '' ?\r\n                  <Image src={student.photoUrl} avatar size='mini' /> :\r\n                  <Icon name=\"user\" size=\"mini\"/>\r\n                }\r\n                <Header.Content>\r\n                  {student.name}\r\n                  <Header.Subheader>{student.group}</Header.Subheader>\r\n                </Header.Content>\r\n              </Header>\r\n            </Table.Cell>\r\n          </Table.Row>)\r\n    ) : [];\r\n    \r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={info.photo ? `${info.photoUrl}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{info.name}</Card.Header>\r\n                <Card.Meta>{info.category}</Card.Meta>\r\n                <Card.Description>\r\n                  <List>\r\n                    <List.Item>\r\n                      <List.Icon name=\"users\"/>\r\n                      <List.Content>\r\n                          Количество человек: {info.students.length}/{info.max_students}\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <List.Icon name=\"clock\" />\r\n                        <List.Content>\r\n                          Дата: {info.date}\r\n                        </List.Content>\r\n                    </List.Item>\r\n                    {infoRows.filter((item, index) => index < 2)}\r\n                  </List>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n\r\n    return (\r\n        <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={card}\r\n        >\r\n            <Modal.Header>{info.name}</Modal.Header>\r\n            <Modal.Content image>\r\n                <Image size='medium' src={info.photo ? `${info.photoUrl}` : eye} wrapped />\r\n                <Modal.Description>\r\n                    <p>Количество человек: {(info.students && info.students.length) || 0}/{info.max_students}</p>\r\n                    <p>Дата: {info.date}</p>\r\n                    {infoRows}\r\n                    <Table size=\"large\">\r\n                      <Table.Header>\r\n                          <Table.Row>\r\n                              <Table.HeaderCell>Записавшиеся наблюдатели</Table.HeaderCell>\r\n                          </Table.Row>\r\n                      </Table.Header>\r\n                      <Table.Body>\r\n                          {students}\r\n                      </Table.Body>\r\n                    </Table>\r\n                    {message && message.text && message.text !== '' ? messageBlock : <></>}\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n                <Button \r\n                    content=\"Записаться\" \r\n                    labelPosition='right'\r\n                    icon='checkmark'\r\n                    positive\r\n                    disabled={isButtonDisabled}\r\n                    onClick={() => dispatch(registerMasterclassRequest({_id: info._id}))}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    \r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport {fetchMasterclassRequest} from '../../redux/modules/masterclass'\r\nimport { Card, Loader } from 'semantic-ui-react'\r\nimport Info from './Info'\r\n\r\nfunction InfoPanel() {\r\n    const dispatch = useDispatch()\r\n    const masterclass = useSelector(state => state.masterclass.list) || []\r\n    const error = useSelector(state => state.masterclass.error)\r\n    \r\n    useEffect(\r\n        () => {dispatch(fetchMasterclassRequest())},\r\n        []\r\n    )\r\n    console.log('masterclass :', masterclass);\r\n    console.log('error :', error);\r\n\r\n    const cards = masterclass.map(info => {\r\n        return (\r\n            <Info info={info}/>\r\n        )\r\n    });\r\n    return (\r\n        <>\r\n            <Loader active={masterclass.length === 0}/>\r\n            <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                {cards}\r\n            </Card.Group>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoPanel\r\n","import React from 'react'\r\nimport { Route } from \"react-router-dom\"\r\nimport { Header } from 'semantic-ui-react'\r\nimport InfoPanel from './InfoPanel'\r\nimport './Masterclass.scss'\r\n\r\nexport default function Masterclass() {\r\n    //TODO: make header dynamic (should show path using breadcrumbs)\r\n    return (\r\n        <div className=\"container\">\r\n            <Header as='h2' attached='top'>\r\n                Мастерклассы\r\n            </Header>\r\n            <Route exact path=\"/masterclass\">\r\n                <InfoPanel/>\r\n            </Route>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport eye from '../assets/img/eye.svg'\r\nimport { signOutUserRequest, fetchUserPageRequest } from '../redux/modules/users'\r\nimport { useHistory  } from 'react-router-dom';\r\nimport { \r\n    Header, Image, Button, \r\n    Progress, Grid, Segment, \r\n    Rating, Table, Label,\r\n    Icon\r\n} from 'semantic-ui-react'\r\n\r\nexport default function UserPanel() {\r\n    const dispatch = useDispatch()\r\n    let history = useHistory();\r\n    const user = useSelector(state => state.users.user)\r\n    console.log('user :>> ', user);\r\n    useEffect(\r\n        () => {dispatch(fetchUserPageRequest(user.id))},\r\n        [user]\r\n    )\r\n    const {exams = [], operations = []} = useSelector(state => state.users.page) || {}\r\n    console.log('exams :>> ', exams);\r\n    const examsRows = exams.map(ex => {\r\n        const success = ex.students && ex.students.indexOf(user.id) !== -1\r\n        return (\r\n            <Table.Row key={ex._id} negative={!success} positive={success}>\r\n                <Table.Cell>\r\n                    <Label >{ex.name}</Label>\r\n                </Table.Cell>\r\n                <Table.Cell>{success ? (<Icon name='checkmark'/>) : (<Icon name='close'/>)}</Table.Cell>\r\n            </Table.Row>\r\n        )\r\n    })\r\n    console.log('operations :>> ', operations);\r\n    const operationsRows = operations.map(op => (\r\n        <Table.Row key={op._id} negative={!op.success} positive={op.success}>\r\n            <Table.Cell>\r\n                <Label >{op.name}</Label>\r\n            </Table.Cell>\r\n            <Table.Cell>{op.success ? (<Icon name='checkmark'/>) : (<Icon name='close'/>)}</Table.Cell>\r\n            <Table.Cell>{op.all_points}</Table.Cell>\r\n            <Table.Cell>\r\n                {op.points && op.points[user.id] ? op.points[user.id] : 0}\r\n            </Table.Cell>\r\n        </Table.Row>\r\n    ))\r\n    return (\r\n        <Grid>\r\n            <Grid.Row columns={2}>\r\n                <Grid.Column computer={6} mobile={16}>\r\n                    <Image\r\n                        rounded={true}\r\n                        size=\"medium\"\r\n                        floated=\"left\"\r\n                        src={user.photo && user.photo !== '' ? user.photoUrl : eye}\r\n                    />\r\n                </Grid.Column>\r\n                <Grid.Column computer={10} mobile={16}>\r\n                    <Segment size=\"massive\">\r\n                        <Header>Имя : {user.name}</Header>\r\n                        <p>Боевая группа: {user.group}</p>\r\n                        <p>Жизни: <Rating icon='heart' rating={user.lives || 0} maxRating={10} disabled={true}/></p>\r\n                        <p>Уровень: <Rating icon='star' rating={user.level} maxRating={5} disabled={true}/></p>\r\n                        <Progress \r\n                            value={user.experience} \r\n                            total={user.level * 50} \r\n                            progress='ratio' \r\n                            indicating\r\n                        />\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <Segment >\r\n                        <Header>Высадки</Header>\r\n                        <Table celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Успех</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Всего баллов</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Получено баллов</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>\r\n                                {operationsRows}\r\n                            </Table.Body>\r\n                        </Table>\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <Segment>\r\n                    <Header>Экзамены</Header>\r\n                        <Table celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Успех</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>\r\n                                {examsRows}\r\n                            </Table.Body>\r\n                        </Table>\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column floated=\"right\" stretched={false} width={2}>\r\n                    <Button\r\n                        content=\"Выйти\"\r\n                        color='black'\r\n                        onClick={(e) => {\r\n                            e.preventDefault()\r\n                            dispatch(signOutUserRequest())\r\n                            history.push('/')\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>)\r\n}","import {ActionTypesUsers} from '../users'\r\n\r\nexport const ActionTypesOperation = {\r\n    FETCH_OPERATION_REQUEST: 'masterclass/FETCH_OPERATION_REQUEST',\r\n    FETCH_OPERATION_SUCCESS: 'masterclass/FETCH_OPERATION_SUCCESS',\r\n    FETCH_OPERATION_FAILURE: 'masterclass/FETCH_OPERATION_FAILURE',\r\n    FETCH_INFO_REQUEST: 'masterclass/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'masterclass/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'masterclass/FETCH_INFO_FAILURE',\r\n    REGISTER_OPERATION_REQUEST: 'masterclass/REGISTER_OPERATION_REQUEST',\r\n    REGISTER_OPERATION_SUCCESS: 'masterclass/REGISTER_OPERATION_SUCCESS',\r\n    REGISTER_OPERATION_FAILURE: 'masterclass/REGISTER_OPERATION_FAILURE',\r\n    FETCH_OPERATION_VIEW_REQUEST: 'masterclass/FETCH_OPERATION_VIEW_REQUEST',\r\n    FETCH_OPERATION_VIEW_SUCCESS: 'masterclass/FETCH_OPERATION_VIEW_SUCCESS',\r\n    FETCH_OPERATION_VIEW_FAILURE: 'masterclass/FETCH_OPERATION_VIEW_FAILURE',\r\n\r\n  };\r\n  \r\n  export const initialOperationState = {\r\n    list: [],\r\n    info: {},\r\n    message: {},\r\n    view: []\r\n  };\r\n  \r\n  export default function reducer(\r\n    state = initialOperationState,\r\n    action\r\n  ) {\r\n    console.log('action :>> ', action);\r\n    switch (action.type) {\r\n  \r\n      case ActionTypesOperation.FETCH_OPERATION_SUCCESS:\r\n        return {\r\n          ...state,\r\n          list: action.payload,\r\n          message: {}\r\n        }\r\n      case ActionTypesOperation.FETCH_OPERATION_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n\r\n      case ActionTypesOperation.FETCH_INFO_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload,\r\n          message: {}\r\n        }\r\n      case ActionTypesOperation.FETCH_INFO_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n\r\n      case ActionTypesOperation.REGISTER_OPERATION_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload,\r\n          message: { failure: false, text: 'Вы успешно записисались на высадку!' }\r\n        }\r\n      case ActionTypesOperation.REGISTER_OPERATION_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n  \r\n      case ActionTypesOperation.FETCH_OPERATION_VIEW_SUCCESS:\r\n        return {\r\n          ...state,\r\n          view: action.payload,\r\n          message: {}\r\n        }\r\n      case ActionTypesOperation.FETCH_OPERATION_VIEW_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n      \r\n      case ActionTypesUsers.SIGN_OUT_USER_REQUEST:\r\n        return {\r\n          ...initialOperationState\r\n        }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  // Action Creators\r\n  export const fetchOperationRequest = () => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_REQUEST\r\n  });\r\n  \r\n  export const fetchOperationSuccess = (payload) => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchOperationFailure = (error) => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_FAILURE,\r\n    error\r\n  });\r\n\r\n  export const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesOperation.FETCH_INFO_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesOperation.FETCH_INFO_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesOperation.FETCH_INFO_FAILURE,\r\n    error\r\n  });\r\n  \r\n  export const registerOperationRequest = (params) => ({\r\n    type: ActionTypesOperation.REGISTER_OPERATION_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const registerOperationSuccess = (payload) => ({\r\n    type: ActionTypesOperation.REGISTER_OPERATION_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const registerOperationFailure = (error) => ({\r\n    type: ActionTypesOperation.REGISTER_OPERATION_FAILURE,\r\n    error\r\n  });\r\n\r\n  \r\n  export const fetchOperationViewRequest = () => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_VIEW_REQUEST\r\n  });\r\n  \r\n  export const fetchOperationViewSuccess = (payload) => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_VIEW_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchOperationViewFailure = (error) => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_VIEW_FAILURE,\r\n    error\r\n  });","import React, {useState} from 'react'\r\nimport { Button, Header, Image, Modal, Container, Table, Icon, Message, Card, List } from 'semantic-ui-react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {registerOperationRequest} from '../../redux/modules/operation'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function Info ({info}) {\r\n    const [open, setOpen] = useState(false)\r\n    const message = useSelector(state => state.operation.message)\r\n    const user = useSelector(state => state.users.user)\r\n    const dispatch = useDispatch()\r\n\r\n    const isButtonDisabled = info.users && info.users.findIndex(usr => usr._id === user.id) !== -1;\r\n    const messageBlock = <Message positive={!message.failure} negative={message.failure}><Message.Header>{message.text}</Message.Header></Message>\r\n    const infoRows = Object.entries(info.data || {}).map(([key, value]) => <p key={key}>{`${key}: ${value}`}</p>);\r\n    const users = info.users ? info.users.map(\r\n        user => (\r\n          <Table.Row key={user.username}>\r\n            <Table.Cell>\r\n              <Header as='h4' image>\r\n                {user.photo && user.photo !== '' ?\r\n                  <Image src={user.photoUrl} avatar size='mini' /> :\r\n                  <Icon name=\"user\" size=\"mini\"/>\r\n                }\r\n                <Header.Content>\r\n                  {user.name}\r\n                  <Header.Subheader>{user.group}</Header.Subheader>\r\n                </Header.Content>\r\n              </Header>\r\n            </Table.Cell>\r\n          </Table.Row>)\r\n    ) : [];\r\n    \r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={info.photo ? `${info.photoUrl}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{info.name}</Card.Header>\r\n                <Card.Meta>{info.category}</Card.Meta>\r\n                <Card.Description>\r\n                  <List>\r\n                    <List.Item>\r\n                      <List.Icon name=\"users\"/>\r\n                      <List.Content>\r\n                          Количество заявок: {info.users.length}/{info.max_users}\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <List.Icon name=\"clock\" />\r\n                        <List.Content>\r\n                          Дата: {info.date}\r\n                        </List.Content>\r\n                    </List.Item>\r\n                    {infoRows.filter((item, index) => index < 2)}\r\n                  </List>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n\r\n    return (\r\n        <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={card}\r\n        >\r\n            <Modal.Header>{info.name}</Modal.Header>\r\n            <Modal.Content image>\r\n                <Image size='medium' src={info.photo ? `${info.photoUrl}` : eye} wrapped />\r\n                <Modal.Description>\r\n                    <p>Количество заявок: {(info.users && info.users.length) || 0}/{info.max_users}</p>\r\n                    <p>Дата: {info.date}</p>\r\n                    {infoRows}\r\n                    <Table size=\"large\">\r\n                      <Table.Header>\r\n                          <Table.Row>\r\n                              <Table.HeaderCell>Записавшиеся наблюдатели</Table.HeaderCell>\r\n                          </Table.Row>\r\n                      </Table.Header>\r\n                      <Table.Body>\r\n                          {users}\r\n                      </Table.Body>\r\n                    </Table>\r\n                    {message && message.text && message.text !== '' ? messageBlock : <></>}\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n                <Button \r\n                    content=\"Записаться\" \r\n                    labelPosition='right'\r\n                    icon='checkmark'\r\n                    positive\r\n                    disabled={isButtonDisabled}\r\n                    onClick={() => dispatch(registerOperationRequest({_id: info._id}))}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    \r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport {fetchOperationRequest} from '../../redux/modules/operation'\r\nimport { Card, Loader } from 'semantic-ui-react'\r\nimport Info from './Info'\r\n\r\nfunction InfoPanel() {\r\n    const dispatch = useDispatch()\r\n    const operation = useSelector(state => state.operation.list) || []\r\n    const error = useSelector(state => state.operation.error)\r\n    \r\n    useEffect(\r\n        () => {dispatch(fetchOperationRequest())},\r\n        []\r\n    )\r\n    console.log('operation :', operation);\r\n    console.log('error :', error);\r\n\r\n    const cards = operation.map(info => {\r\n        return (\r\n            <Info info={info}/>\r\n        )\r\n    });\r\n    return (\r\n        <>\r\n            <Loader active={operation.length === 0}/>\r\n            <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                {cards}\r\n            </Card.Group>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoPanel\r\n","import React from 'react'\r\nimport { Card, Header, Image } from 'semantic-ui-react'\r\n\r\nexport default function ViewCard ({operation}) {\r\n    const userCards = operation.users.filter(user => user.active).map(user => (\r\n        <Card\r\n          color={user.alive ? 'green' : 'red'}\r\n        >\r\n            <Image src={user.gifUrl} wrapped ui={false} />\r\n            <Card.Content>\r\n                <Header>{user.name}</Header>    \r\n            </Card.Content>\r\n        </Card>\r\n    ))\r\n    return (\r\n        <div className=\"viewCard\">\r\n            <Header>{operation.name}</Header>\r\n            <Card.Group\r\n              itemsPerRow={3}\r\n            >\r\n                {userCards}\r\n            </Card.Group>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport {fetchOperationViewRequest} from '../../redux/modules/operation'\r\nimport { Grid, Loader} from 'semantic-ui-react'\r\nimport ViewCard from './ViewCard'\r\n\r\nexport default function View () {\r\n    const dispatch = useDispatch();\r\n    const view = useSelector(state => state.operation.view, shallowEqual) || []\r\n    \r\n    useEffect(\r\n        () => {\r\n            dispatch(fetchOperationViewRequest())\r\n            const interval = setInterval(\r\n              () => dispatch(fetchOperationViewRequest()),\r\n              10000\r\n            );\r\n            return () => clearInterval(interval);\r\n        },\r\n        []\r\n    )\r\n    \r\n    const columns = view.map((operation, index) => (\r\n        <Grid.Column key={operation._id}>\r\n            <ViewCard operation={operation}/>\r\n        </Grid.Column>\r\n    ))\r\n    // const rows = [];\r\n    // for (let i = 0; i < columns.length / 2; i++) {\r\n    //     rows.push(<Grid.Row>\r\n    //         {columns[i*2]}\r\n    //         {columns[i*2+1]}\r\n    //     </Grid.Row>)\r\n    // }\r\n    return (\r\n        <>\r\n            <Loader active={view.length === 0}/>\r\n            <Grid columns={2} divided>\r\n                {columns}\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Route } from \"react-router-dom\"\r\nimport { Header } from 'semantic-ui-react'\r\nimport InfoPanel from './InfoPanel'\r\nimport View from './View'\r\nimport './Operation.scss'\r\n\r\nexport default function Operation() {\r\n    //TODO: make header dynamic (should show path using breadcrumbs)\r\n    return (\r\n        <div className=\"container\">\r\n            <Header as='h2' attached='top'>\r\n                Высадки\r\n            </Header>\r\n            <Route exact path=\"/operation/view\">\r\n                <View/>\r\n            </Route>\r\n            <Route exact path=\"/operation\">\r\n                <InfoPanel/>\r\n            </Route>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\r\nimport { Segment, Sidebar } from 'semantic-ui-react'\r\nimport SidebarMenu from './SidebarMenu'\r\nimport Library from './library/Library'\r\nimport Scouting from './scouting/ScoutingInfo'\r\nimport Masterclass from './masterclass/Masterclass'\r\nimport UserPanel from './UserPanel'\r\nimport Operation from './operation/Operation'\r\nimport '../assets/styles/App.scss'\r\nimport {autoupdateUserRequest} from '../redux/modules/users'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n\r\nexport default function App() {\r\n    const dispatch = useDispatch();\r\n    const token = localStorage.getItem('token');\r\n    const user = useSelector(state => state.users.user)\r\n    console.log('user :>> ', user);\r\n    useEffect(() => {\r\n      dispatch(autoupdateUserRequest())\r\n    }, [token, user.id])\r\n    return (\r\n      <Router>\r\n        <Sidebar.Pushable>\r\n          <SidebarMenu/>\r\n          <Sidebar.Pusher>\r\n            <Segment style={({minHeight: '100%'})}>\r\n              <Switch>\r\n                <Route path=\"/library\">\r\n                  <Library />\r\n                </Route>\r\n                  <Route path=\"/scouting\">\r\n                      <Scouting/>\r\n                  </Route>\r\n                <Route path=\"/user\">\r\n                  <UserPanel />\r\n                </Route>\r\n                <Route path=\"/masterclass\">\r\n                  <Masterclass />\r\n                </Route>\r\n                <Route path=\"/operation\">\r\n                   <Operation />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Redirect to=\"/library\" />\r\n                </Route>\r\n              </Switch>\r\n            </Segment>\r\n          </Sidebar.Pusher>\r\n        </Sidebar.Pushable>\r\n      </Router>\r\n    )\r\n}","export const API_HTTP = process.env.REACT_APP_API_HTTP || \"http://localhost:5000\"","import axios from 'axios';\r\n\r\nclass Api {\r\n  instance;\r\n\r\n  constructor(options = {}) {\r\n    this.instance = axios.create({\r\n      headers: {'X-Auth-Header': ''},\r\n      ...options,\r\n    });\r\n\r\n    this.instance.interceptors.response.use((response) => {\r\n      return response.data;\r\n    });\r\n  }\r\n\r\n  getInstance() {\r\n    return this.instance;\r\n  }\r\n}\r\n\r\nexport const api = new Api().getInstance();\r\n\r\nexport const createRequest = (payload) => {\r\n  const token = localStorage.getItem('token');\r\n  return api({\r\n    ...payload,\r\n    headers: {\r\n      ...payload.headers,\r\n      'x-access-token': token\r\n    }\r\n  });\r\n//   return Promise.resolve({\r\n//     data: [\r\n//     {\r\n//         \"infoId\": 1,\r\n//         \"name\": \"1\",\r\n//         \"data\": {\r\n//           'name': 'Коммандор',\r\n//           'description': '[ДАННЫЕ УДАЛЕНЫ]'\r\n//         },\r\n//         \"category\": \"PERSON\",\r\n//         \"photo\": null,\r\n//         \"status\": \"AVAILABLE\"\r\n//     },\r\n//     {\r\n//         \"infoId\": 2,\r\n//         \"name\": \"2\",\r\n//         \"data\": {'test': 'test'},\r\n//         \"category\": \"PERSON\",\r\n//         \"photo\": null,\r\n//         \"status\": \"AVAILABLE\"\r\n//     }\r\n// ]})\r\n};","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n  ActionTypesLibrary,\r\n  fetchLibraryFailure,\r\n  fetchLibrarySuccess, \r\n  fetchInfoFailure, \r\n  fetchInfoSuccess\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\nexport function* fetchLibraryWorker({type, params = {}}) { //first arg = action\r\n  const { _id } = params \r\n  let url = _id ? `${API_HTTP}/library/${_id}` : `${API_HTTP}/library`\r\n  if (params.type) {\r\n    url = url.concat(`?type=${params.type}`)\r\n  }\r\n  const request = {\r\n    method: 'get',\r\n    url\r\n  };\r\n\r\n  try {\r\n    const response = yield call(createRequest, request);\r\n    console.log('response :', response);\r\n    if (type === ActionTypesLibrary.FETCH_LIBRARY_REQUEST) {\r\n      yield put(fetchLibrarySuccess(response.map(info => ({...info, photoUrl: `${API_HTTP}/images/${info.photo}`}))));\r\n    } else {\r\n      yield put(fetchInfoSuccess({...response, photoUrl: `${API_HTTP}/images/${response.photo}`}));\r\n    }\r\n  } catch (e) {\r\n    if (type === ActionTypesLibrary.FETCH_LIBRARY_REQUEST) {\r\n      yield put(fetchLibraryFailure((e.response && e.response.data) || e));\r\n    } else {\r\n      yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* watchLibraryActionsSaga() {\r\n  yield all([\r\n    takeEvery(ActionTypesLibrary.FETCH_LIBRARY_REQUEST, fetchLibraryWorker),\r\n    takeEvery(ActionTypesLibrary.FETCH_INFO_REQUEST, fetchLibraryWorker)\r\n  ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n  ActionTypesUsers,\r\n  signUpUserSuccess,\r\n  signUpUserFailure, \r\n  signInUserSuccess, \r\n  signInUserFailure,\r\n  autoupdateUserSuccess,\r\n  autoupdateUserFailure,\r\n  fetchUserPageSuccess,\r\n  fetchUserPageFailure\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\nexport function* singUpUserWorker({type, userInfo = {}}) {\r\n    const url = `${API_HTTP}/auth/signup`;\r\n    const request = {\r\n        method: 'post',\r\n        url,\r\n        data: {...userInfo}\r\n    };\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :>> ', response);\r\n        yield put(signUpUserSuccess(response))\r\n    } catch (e) {;\r\n        yield put(signUpUserFailure((e.response && e.response.data) || e));\r\n    }\r\n}\r\n\r\nexport function* singInUserWorker({type, userInfo = {}}) {\r\n  const url = `${API_HTTP}/auth/signin`;\r\n  const request = {\r\n      method: 'post',\r\n      url,\r\n      data: {...userInfo}\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(signInUserSuccess({...response, photoUrl: `${API_HTTP}/images/${response.photo}`}))\r\n  } catch (e) {;\r\n      yield put(signInUserFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* autoupdateUserWorker({type}) {\r\n  const url = `${API_HTTP}/auth/autoupdate`;\r\n  const request = {\r\n      method: 'post',\r\n      url\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(autoupdateUserSuccess({...response, photoUrl: `${API_HTTP}/images/${response.photo}`}))\r\n  } catch (e) {;\r\n      yield put(autoupdateUserFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* fetchUserPageWorker({type, userId}) {\r\n  try {\r\n    const examRequest = {\r\n        method: 'get',\r\n        url: `${API_HTTP}/exam/user/${userId}`\r\n    };\r\n    const exams = yield call(createRequest, examRequest);\r\n    console.log('exams :>> ', exams);\r\n    const operationsRequest = {\r\n        method: 'get',\r\n        url: `${API_HTTP}/operation/user/${userId}`\r\n    };\r\n    const operations = yield call(createRequest, operationsRequest);\r\n    console.log('operations :>> ', operations);\r\n    yield put(fetchUserPageSuccess({exams, operations}))\r\n  } catch (e) {\r\n    yield put(fetchUserPageFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* watchUsersActionsSaga() {\r\n  yield all([\r\n    takeEvery(ActionTypesUsers.SIGN_UP_USER_REQUEST, singUpUserWorker),\r\n    takeEvery(ActionTypesUsers.SIGN_IN_USER_REQUEST, singInUserWorker),\r\n    takeEvery(ActionTypesUsers.AUTOUPDATE_USER_REQUEST, autoupdateUserWorker),\r\n    takeEvery(ActionTypesUsers.FETCH_USER_PAGE_REQUEST, fetchUserPageWorker)\r\n  ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n  ActionTypesMasterclass,\r\n  fetchMasterclassFailure,\r\n  fetchMasterclassSuccess, \r\n  fetchInfoFailure, \r\n  fetchInfoSuccess,\r\n  registerMasterclassSuccess,\r\n  registerMasterclassFailure\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\nexport function* fetchMasterclassWorker({type, params = {}}) { //first arg = action\r\n  const { _id } = params \r\n  let url = _id ? `${API_HTTP}/masterclass/${_id}` : `${API_HTTP}/masterclass`\r\n  if (params.type) {\r\n    url = url.concat(`?type=${params.type}`)\r\n  }\r\n  const request = {\r\n    method: 'get',\r\n    url\r\n  };\r\n\r\n  try {\r\n    const response = yield call(createRequest, request);\r\n    console.log('response :', response);\r\n    if (type === ActionTypesMasterclass.FETCH_MASTERCLASS_REQUEST) {\r\n      yield put(fetchMasterclassSuccess(response.map(info => (\r\n        {\r\n          ...info,\r\n          photoUrl: `${API_HTTP}/images/${info.photo}`,\r\n          students: info.students.map( student => ({...student, photoUrl: `${API_HTTP}/images/${student.photo}`}))\r\n        }\r\n        )\r\n      )));\r\n    } else {\r\n      yield put(fetchInfoSuccess(\r\n        {\r\n          ...response,\r\n          photoUrl: `${API_HTTP}/images/${response.photo}`,\r\n          students: response.students.map( student => ({...student, photoUrl: `${API_HTTP}/images/${student.photo}`}))\r\n        }\r\n      ));\r\n    }\r\n  } catch (e) {\r\n    if (type === ActionTypesMasterclass.FETCH_MASTERCLASS_REQUEST) {\r\n      yield put(fetchMasterclassFailure((e.response && e.response.data) || e));\r\n    } else {\r\n      yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* registerMasterclassWorker({type, params = {}}) {\r\n  const { _id } = params \r\n  const url = `${API_HTTP}/masterclass/${_id}/register`;\r\n  const request = {\r\n      method: 'post',\r\n      url\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(registerMasterclassSuccess(\r\n        {\r\n          ...response,\r\n          photoUrl: `${API_HTTP}/images/${response.photo}`,\r\n          students: response.students.map( student => ({...student, photoUrl: `${API_HTTP}/images/${student.photo}`}))\r\n        }\r\n      ))\r\n  } catch (e) {\r\n    yield put(registerMasterclassFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* watchMasterclassActionsSaga() {\r\n  yield all([\r\n    takeEvery(ActionTypesMasterclass.FETCH_MASTERCLASS_REQUEST, fetchMasterclassWorker),\r\n    takeEvery(ActionTypesMasterclass.FETCH_INFO_REQUEST, fetchMasterclassWorker),\r\n    takeEvery(ActionTypesMasterclass.REGISTER_MASTERCLASS_REQUEST, registerMasterclassWorker)\r\n  ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n  ActionTypesOperation,\r\n  fetchOperationFailure,\r\n  fetchOperationSuccess, \r\n  fetchInfoFailure, \r\n  fetchInfoSuccess,\r\n  registerOperationSuccess,\r\n  registerOperationFailure,\r\n  fetchOperationViewFailure,\r\n  fetchOperationViewSuccess, \r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\nexport function* fetchOperationWorker({type, params = {}}) { //first arg = action\r\n  const { _id } = params \r\n  let url = _id ? `${API_HTTP}/operation/${_id}` : `${API_HTTP}/operation`\r\n  if (params.type) {\r\n    url = url.concat(`?type=${params.type}`)\r\n  }\r\n  const request = {\r\n    method: 'get',\r\n    url\r\n  };\r\n\r\n  try {\r\n    const response = yield call(createRequest, request);\r\n    console.log('response :', response);\r\n    if (type === ActionTypesOperation.FETCH_OPERATION_REQUEST) {\r\n      yield put(fetchOperationSuccess(response.map(info => (\r\n        {\r\n          ...info,\r\n          photoUrl: `${API_HTTP}/images/${info.photo}`,\r\n          users: info.users.map( user => ({...user, photoUrl: `${API_HTTP}/images/${user.photo}`}))\r\n        }\r\n        )\r\n      )));\r\n    } else {\r\n      yield put(fetchInfoSuccess(\r\n        {\r\n          ...response,\r\n          photoUrl: `${API_HTTP}/images/${response.photo}`,\r\n          users: response.users.map( user => ({...user, photoUrl: `${API_HTTP}/images/${user.photo}`}))\r\n        }\r\n      ));\r\n    }\r\n  } catch (e) {\r\n    if (type === ActionTypesOperation.FETCH_OPERATION_REQUEST) {\r\n      yield put(fetchOperationFailure((e.response && e.response.data) || e));\r\n    } else {\r\n      yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* registerOperationWorker({type, params = {}}) {\r\n  const { _id } = params \r\n  const url = `${API_HTTP}/operation/${_id}/register`;\r\n  const request = {\r\n      method: 'post',\r\n      url\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(registerOperationSuccess(\r\n        {\r\n          ...response,\r\n          photoUrl: `${API_HTTP}/images/${response.photo}`,\r\n          users: response.users.map( user => ({...user, photoUrl: `${API_HTTP}/images/${user.photo}`}))\r\n        }\r\n      ))\r\n  } catch (e) {\r\n    yield put(registerOperationFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* fetchOperationViewWorker({type, params = {}}) {\r\n  const url = `${API_HTTP}/operation/view`;\r\n  const request = {\r\n      method: 'get',\r\n      url\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(fetchOperationViewSuccess(\r\n        response.map(\r\n          operation => ({\r\n            ...operation,\r\n            users: operation.users.map( user => ({...user, gifUrl: `${API_HTTP}/gifs/${user.gif}`}))\r\n          })\r\n        )\r\n      ))\r\n  } catch (e) {\r\n    yield put(fetchOperationViewFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* watchOperationActionsSaga() {\r\n  yield all([\r\n    takeEvery(ActionTypesOperation.FETCH_OPERATION_REQUEST, fetchOperationWorker),\r\n    takeEvery(ActionTypesOperation.FETCH_INFO_REQUEST, fetchOperationWorker),\r\n    takeEvery(ActionTypesOperation.REGISTER_OPERATION_REQUEST, registerOperationWorker),\r\n    takeEvery(ActionTypesOperation.FETCH_OPERATION_VIEW_REQUEST, fetchOperationViewWorker)\r\n  ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n    ActionTypesScouting,\r\n    fetchScoutingFailure,\r\n    fetchScoutingSuccess,\r\n    fetchInfoFailure,\r\n    fetchInfoSuccess\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\n\r\nexport function* fetchScoutingWorker({type, params = {}}) { //first arg = action\r\n    const { _id } = params\r\n    let url = _id ? `${API_HTTP}/scoutingInfo/${_id}` : `${API_HTTP}/scoutingInfo`\r\n    if (params.type) {\r\n        url = url.concat(`?type=${params.type}`)\r\n    }\r\n    const request = {\r\n        method: 'get',\r\n        url\r\n    };\r\n\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :', response);\r\n        if (type === ActionTypesScouting.FETCH_SCOUTING_REQUEST) {\r\n            yield put(fetchScoutingSuccess(response.map(info => ({...info, photoUrl: `${API_HTTP}/images/${info.photo}`}))));\r\n        } else {\r\n            yield put(fetchInfoSuccess({...response, photoUrl: `${API_HTTP}/images/${response.photo}`}));\r\n        }\r\n    } catch (e) {\r\n        if (type === ActionTypesScouting.FETCH_SCOUTING_REQUEST) {\r\n            yield put(fetchScoutingFailure((e.response && e.response.data) || e));\r\n        } else {\r\n            yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n        }\r\n    }\r\n}\r\n\r\nexport function* watchScoutingActionsSaga() {\r\n    yield all([\r\n        takeEvery(ActionTypesScouting.FETCH_SCOUTING_REQUEST, fetchScoutingWorker),\r\n        takeEvery(ActionTypesScouting.FETCH_INFO_REQUEST, fetchScoutingWorker)\r\n    ]);\r\n}","import * as sagas from \"./sagas\";\r\n\r\nexport const initSagas = sagaMiddleware => {\r\n  return Object.values(sagas).forEach(sagaMiddleware.run.bind(sagaMiddleware));\r\n};","import {createStore, applyMiddleware, compose, combineReducers} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport library from './modules/library';\r\nimport scouting from './modules/scouting'\r\nimport users from './modules/users';\r\nimport masterclass from './modules/masterclass';\r\nimport operation from './modules/operation';\r\nimport {initSagas} from './initSagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleWares = [sagaMiddleware];\r\nconst enhancer = composeWithDevTools(applyMiddleware(...middleWares));\r\n\r\nexport default function configureStore() {\r\n  const rootReducer = combineReducers({\r\n    library,\r\n    scouting,\r\n    masterclass,\r\n    operation,\r\n    users\r\n  });\r\n  const store = compose(\r\n    enhancer\r\n  )(createStore)(rootReducer);\r\n  initSagas(sagaMiddleware);\r\n\r\n  return store;\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport {Provider} from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport 'semantic-ui-less/semantic.less'\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nconst store = configureStore()\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}