{"version":3,"sources":["assets/img/plus.svg","assets/img/eye.svg","redux/modules/users/index.js","components/Login.js","redux/modules/library/index.js","components/library/Info.js","components/library/InfoPanel.js","components/library/Library.js","redux/modules/scoutingInfo/index.js","components/scoutingInfo/Info.js","components/scoutingInfo/Request.js","redux/modules/masterclass/index.js","redux/modules/scoutingRequest/index.js","components/scoutingInfo/RequestPopUp.js","components/scoutingInfo/InfoPanel.js","components/scoutingInfo/ScoutingInfo.js","components/masterclass/MCTab.js","components/masterclass/Info.js","components/masterclass/InfoPanel.js","components/masterclass/Masterclass.js","components/UserPanel.js","redux/modules/operation/index.js","components/operation/Info.js","components/operation/InfoPanel.js","components/operation/ViewCard.js","components/operation/View.js","components/operation/Operation.js","components/navbar/NavBarChildren.js","components/navbar/NavBarDesktop.js","components/navbar/NavbarMobile.js","components/navbar/NavBar.js","components/App.js","configs/environment.js","redux/rootSagas.js","redux/modules/library/saga.js","redux/modules/users/saga.js","redux/modules/masterclass/saga.js","redux/modules/operation/saga.js","redux/modules/scoutingInfo/saga.js","redux/modules/scoutingRequest/saga.js","redux/initSagas.js","redux/configureStore.js","index.js"],"names":["module","exports","ActionTypesUsers","initialUserState","loggedIn","user","message","reducer","state","action","type","payload","accessToken","localStorage","setItem","JSON","stringify","failure","text","error","clear","page","Login","isOpen","setOpen","useState","username","setUsername","password","setPassword","dispatch","useDispatch","useSelector","users","messageBlock","Message","positive","negative","Header","login","userInfo","Modal","open","onClose","onOpen","trigger","Menu","Item","Icon","name","Content","Form","size","Field","placeholder","onChange","e","target","value","Actions","Button","content","color","onClick","preventDefault","labelPosition","icon","ActionTypesLibrary","initialLibraryState","list","info","fetchInfoSuccess","fetchInfoFailure","Info","cardRows","Object","entries","data","filter","item","index","map","key","slice","length","infoRows","card","Card","Image","src","photo","eye","style","marginBottom","Meta","category","Description","List","image","scrolling","spaced","attachmentUrls","attach","indexOf","controls","width","height","InfoPanel","library","location","useLocation","queryParams","qs","parse","search","ignoreQueryPrefix","useEffect","params","console","log","cards","Loader","active","Group","stackable","className","Library","header","as","Link","to","exact","path","ActionTypesScoutingInfo","initialScoutingInfoState","wrapped","Request","requestObject","place","task","Progress","percent","indicating","ActionTypesMasterclass","initialMasterclassState","ActionTypesScoutingRequest","initialScoutingRequestState","RequestPopUp","setRequestObject","setPlace","setTask","isButtonDisabled","plus","textAlign","disabled","scoutingInfo","scoutingRequest","isNewRequestOpen","setNewRequestOpen","cardsInfo","cardsRequest","panes","menuItem","render","Tab","Pane","loading","ScoutingInfo","attached","MCTab","mc","masterclass","students","max_students","findIndex","stud","id","mcRows","student","Table","Row","Cell","avatar","Subheader","group","HeaderCell","Body","mcs","activeTab","setActiveTab","first","time","Date","date","toTimeString","menu","fluid","vertical","tabular","onTabChange","d","activeIndex","_id","Masterclass","UserPanel","history","useHistory","userId","exams","operations","examsRows","ex","result","success","points","Label","operationsRows","op","all_points","Grid","columns","Column","computer","mobile","rounded","floated","Segment","Rating","rating","lives","maxRating","level","experience","total","progress","celled","stretched","push","ActionTypesOperation","initialOperationState","view","fetchOperationViewRequest","activateUserRequest","activateUserSuccess","killUserRequest","operation","isAdmin","roles","isModerator","isUserRegistred","usr","isButtonRegisterDisabled","isButtonActivateDisabled","moment","isBetween","subtract","max_users","opId","manager","ViewCard","userCards","alive","gif","gifUrl","ui","itemsPerRow","doubling","centered","View","shallowEqual","openedOperation","setOpenedOperation","interval","setInterval","clearInterval","undefined","Operation","NavBarChildren","children","Container","marginTop","NavBarDesktop","leftItems","rightItems","fixed","inverted","_","position","NavBarMobile","onPusherClick","onToggle","visible","Sidebar","Pushable","animation","Pusher","dimmed","minHeight","NavBar","setVisible","Responsive","onlyMobile","minWidth","onlyTablet","App","token","getItem","isOpenLogin","setOpenLogin","API_HTTP","process","api","options","this","instance","axios","create","headers","interceptors","response","use","getInstance","createRequest","fetchLibraryWorker","watchLibraryActionsSaga","url","concat","request","method","call","put","attachments","all","takeEvery","singUpUserWorker","singInUserWorker","autoupdateUserWorker","fetchUserPageWorker","watchUsersActionsSaga","examRequest","operationsRequest","fetchMasterclassWorker","registerMasterclassWorker","watchMasterclassActionsSaga","fetchOperationWorker","registerOperationWorker","fetchOperationViewWorker","activateUserWorker","killUserWorker","watchOperationActionsSaga","fetchScoutingInfoWorker","watchScoutingInfoActionsSaga","fetchScoutingRequestWorker","registerScoutingRequestWorker","watchScoutingRequestActionsSaga","sagaMiddleware","createSagaMiddleware","middleWares","enhancer","composeWithDevTools","applyMiddleware","store","rootReducer","combineReducers","compose","createStore","values","sagas","forEach","run","bind","configureStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.49e1440f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus.8a0de07c.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye.fe2c1e75.svg\";","export const ActionTypesUsers = {\r\n    SIGN_UP_USER_REQUEST: 'users/SIGN_UP_USER_REQUEST',\r\n    SIGN_UP_USER_SUCCESS: 'users/SIGN_UP_USER_SUCCESS',\r\n    SIGN_UP_USER_FAILURE: 'users/SIGN_UP_USER_FAILURE',\r\n\r\n    SIGN_IN_USER_REQUEST: 'users/SIGN_IN_USER_REQUEST',\r\n    SIGN_IN_USER_SUCCESS: 'users/SIGN_IN_USER_SUCCESS',\r\n    SIGN_IN_USER_FAILURE: 'users/SIGN_IN_USER_FAILURE',\r\n//autoupdate\r\n    AUTOUPDATE_USER_REQUEST: 'users/AUTOUPDATE_USER_REQUEST',\r\n    AUTOUPDATE_USER_SUCCESS: 'users/AUTOUPDATE_USER_SUCCESS',\r\n    AUTOUPDATE_USER_FAILURE: 'users/AUTOUPDATE_USER_FAILURE',\r\n\r\n    SIGN_OUT_USER_REQUEST: 'users/SIGN_OUT_USER_REQUEST',\r\n\r\n    FETCH_USER_PAGE_REQUEST: 'users/FETCH_USER_PAGE_REQUEST',\r\n    FETCH_USER_PAGE_SUCCESS: 'users/FETCH_USER_PAGE_SUCCESS',\r\n    FETCH_USER_PAGE_FAILURE: 'users/FETCH_USER_PAGE_FAILURE',\r\n};\r\n\r\nexport const initialUserState = {\r\n    loggedIn: false,\r\n    user: {},\r\n    message: {}\r\n};\r\n\r\nexport default function reducer(\r\n    state = initialUserState,\r\n    action\r\n) {\r\n    switch (action.type) {\r\n        //TODO: add sign_up with msg or err\r\n        case ActionTypesUsers.SIGN_IN_USER_SUCCESS:\r\n          const {accessToken, ...user} = action.payload;\r\n          localStorage.setItem(\"user\", JSON.stringify(user))\r\n          localStorage.setItem(\"token\", accessToken)\r\n          return {\r\n            loggedIn: true,\r\n            user,\r\n            message: {}\r\n          }\r\n        case ActionTypesUsers.SIGN_IN_USER_FAILURE: \r\n          return {\r\n            loggedIn: false,\r\n            user: {},\r\n            message: { failure: true, text: action.error.message}\r\n        }\r\n        case ActionTypesUsers.SIGN_OUT_USER_REQUEST:\r\n          localStorage.clear()\r\n          return {\r\n            loggedIn: false,\r\n            user: {},\r\n            message: {}\r\n        }\r\n        case ActionTypesUsers.AUTOUPDATE_USER_SUCCESS:\r\n          return {\r\n            loggedIn: false,\r\n            user: action.payload,\r\n            message: {}\r\n          }\r\n        case ActionTypesUsers.AUTOUPDATE_USER_FAILURE:\r\n          return {\r\n            loggedIn: false,\r\n            user: {},\r\n            message: { failure: true, text: action.error.message}\r\n          }\r\n\r\n        case ActionTypesUsers.FETCH_USER_PAGE_SUCCESS:\r\n          return {\r\n            ...state,\r\n            page: action.payload,\r\n            message: {}\r\n          }\r\n        case ActionTypesUsers.FETCH_USER_PAGE_FAILURE:\r\n          return {\r\n            ...state,\r\n            error: action.error,\r\n            message: { failure: true, text: action.error.message}\r\n          }\r\n        \r\n        default: \r\n          return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const signUpUserRequest = (userInfo) => ({\r\n  type: ActionTypesUsers.SIGN_UP_USER_REQUEST,\r\n  userInfo\r\n})\r\nexport const signUpUserSuccess = (payload) => ({\r\n  type: ActionTypesUsers.SIGN_UP_USER_SUCCESS,\r\n  payload\r\n})\r\nexport const signUpUserFailure = (error) => ({\r\n  type: ActionTypesUsers.SIGN_UP_USER_FAILURE,\r\n  error\r\n})\r\n\r\nexport const signInUserRequest = (userInfo) => ({\r\n  type: ActionTypesUsers.SIGN_IN_USER_REQUEST,\r\n  userInfo\r\n})\r\nexport const signInUserSuccess = (payload) => ({\r\n  type: ActionTypesUsers.SIGN_IN_USER_SUCCESS,\r\n  payload\r\n})\r\nexport const signInUserFailure = (error) => ({\r\n  type: ActionTypesUsers.SIGN_IN_USER_FAILURE,\r\n  error\r\n})\r\n\r\nexport const autoupdateUserRequest = () => ({\r\n  type: ActionTypesUsers.AUTOUPDATE_USER_REQUEST\r\n})\r\nexport const autoupdateUserSuccess = (payload) => ({\r\n  type: ActionTypesUsers.AUTOUPDATE_USER_SUCCESS,\r\n  payload\r\n})\r\nexport const autoupdateUserFailure = (error) => ({\r\n  type: ActionTypesUsers.AUTOUPDATE_USER_FAILURE,\r\n  error\r\n})\r\n\r\nexport const signOutUserRequest = () => ({\r\n  type: ActionTypesUsers.SIGN_OUT_USER_REQUEST\r\n})\r\n\r\nexport const fetchUserPageRequest = (userId) => ({\r\n  type: ActionTypesUsers.FETCH_USER_PAGE_REQUEST,\r\n  userId\r\n})\r\nexport const fetchUserPageSuccess = (payload) => ({\r\n  type: ActionTypesUsers.FETCH_USER_PAGE_SUCCESS,\r\n  payload\r\n})\r\nexport const fetchUserPageFailure = (error) => ({\r\n  type: ActionTypesUsers.FETCH_USER_PAGE_FAILURE,\r\n  error\r\n})","import React, {useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {signInUserRequest} from '../redux/modules/users';\r\nimport { Message, Button, Form, Modal, Menu, Icon } from 'semantic-ui-react'\r\n\r\nexport default function Login({isOpen, setOpen}) {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n    const message = useSelector(state => state.users.message)\r\n    const messageBlock = <Message positive={!message.failure} negative={message.failure}><Message.Header>{message.text}</Message.Header></Message>\r\n\r\n    const login = () => {\r\n      dispatch(signInUserRequest({ username, password }));\r\n    }\r\n\r\n    return (\r\n        <Modal \r\n          open={isOpen}\r\n          onClose={() => setOpen(false)}\r\n          onOpen={() => setOpen(true)}\r\n          trigger={\r\n            <Menu.Item>\r\n              <Icon name='user circle' />\r\n              Войти в базу\r\n            </Menu.Item>\r\n          }\r\n        >\r\n            <Modal.Header>\r\n                Вход в Базу\r\n            </Modal.Header>\r\n            <Modal.Content>\r\n                <Form\r\n                  size=\"small\"\r\n                >\r\n                    <Form.Field>\r\n                        <label>Имя пользователя</label>\r\n                        <input \r\n                        placeholder='username'\r\n                        onChange={(e) => {setUsername(e.target.value)}}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Пароль</label>\r\n                        <input \r\n                        placeholder='password'\r\n                        type=\"password\"\r\n                        onChange={(e) => {setPassword(e.target.value)}}/>\r\n                    </Form.Field>\r\n                </Form>\r\n                {message && message.text && message.text !== '' ? messageBlock : <></>}\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                  content=\"Отмена\"\r\n                  color='black'\r\n                  onClick={(e) => {e.preventDefault(); setOpen(false)}}\r\n                />\r\n                <Button \r\n                  content=\"Войти\"\r\n                  labelPosition='right'\r\n                  icon='checkmark'\r\n                  onClick={(e) => {e.preventDefault(); login(); }}\r\n                  positive\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}","import {ActionTypesUsers} from '../users'\r\n\r\nexport const ActionTypesLibrary = {\r\n    FETCH_LIBRARY_REQUEST: 'library/FETCH_LIBRARY_REQUEST',\r\n    FETCH_LIBRARY_SUCCESS: 'library/FETCH_LIBRARY_SUCCESS',\r\n    FETCH_LIBRARY_FAILURE: 'library/FETCH_LIBRARY_FAILURE',\r\n    FETCH_INFO_REQUEST: 'library/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'library/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'library/FETCH_INFO_FAILURE'\r\n  };\r\n  \r\n  export const initialLibraryState = {\r\n    list: [],\r\n    info: {}\r\n  };\r\n  \r\n  export default function reducer(\r\n    state = initialLibraryState,\r\n    action\r\n  ) {\r\n    switch (action.type) {\r\n  \r\n      case ActionTypesLibrary.FETCH_LIBRARY_SUCCESS:\r\n        return {\r\n          ...state,\r\n          list: action.payload\r\n        };\r\n  \r\n      case ActionTypesLibrary.FETCH_LIBRARY_FAILURE:\r\n        return {\r\n          ...state,\r\n          error: action.error\r\n        };\r\n\r\n      case ActionTypesLibrary.FETCH_INFO_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload\r\n        };\r\n\r\n      case ActionTypesLibrary.FETCH_INFO_FAILURE:\r\n        return {\r\n          ...state,\r\n          error: action.error\r\n        };\r\n\r\n      case ActionTypesUsers.SIGN_OUT_USER_REQUEST:\r\n        return {\r\n          ...initialLibraryState\r\n        }\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  // Action Creators\r\nexport const fetchLibraryRequest = (params) => ({\r\n  type: ActionTypesLibrary.FETCH_LIBRARY_REQUEST,\r\n  params\r\n});\r\n  \r\n  export const fetchLibrarySuccess = (payload) => ({\r\n    type: ActionTypesLibrary.FETCH_LIBRARY_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchLibraryFailure = (error) => ({\r\n    type: ActionTypesLibrary.FETCH_LIBRARY_FAILURE,\r\n    error\r\n  });\r\n\r\n  export const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesLibrary.FETCH_INFO_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesLibrary.FETCH_INFO_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesLibrary.FETCH_INFO_FAILURE,\r\n    error\r\n  });","import React, {useState} from 'react'\r\nimport { Button, Image, Modal, Card, List } from 'semantic-ui-react'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function Info ({info}) {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const cardRows = Object.entries(info.data || {}).filter((item, index) => index < 3).map(([key, value]) => <p key={key}>{`${key}: ${value.slice(0,70)}${value.length > 70 ? '...' : ''}`}</p>);\r\n    const infoRows = Object.entries(info.data || {}).map(([key, value]) => <p key={key}>{`${key}: ${value}`}</p>);\r\n    \r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={info.photo ? `${info.photo}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{info.name}</Card.Header>\r\n                <Card.Meta>{info.category}</Card.Meta>\r\n                <Card.Description>\r\n                  <List>\r\n                    {cardRows}\r\n                  </List>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n\r\n    return (\r\n        <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={card}\r\n        >\r\n            <Modal.Header>{info.name}</Modal.Header>\r\n            <Modal.Content image scrolling>\r\n                <Image size='medium' src={info.photo ? `${info.photo}` : eye} spaced=\"right\"/>\r\n                <Modal.Description>\r\n                    {infoRows}\r\n                    {info.attachmentUrls && info.attachmentUrls.map(attach => (<>{attach.indexOf('video') !== -1 ? <video controls=\"controls\" width=\"400\" height=\"300\" src={attach}> </video> : <Image src={attach}/> }</>))}\r\n                </Modal.Description>\r\n\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    \r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport {fetchLibraryRequest} from '../../redux/modules/library'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {Card, Loader} from 'semantic-ui-react'\r\nimport Info from './Info'\r\nimport qs from 'qs'\r\n\r\nexport default function InfoPanel () {\r\n    const dispatch = useDispatch()\r\n    const library = useSelector(state => state.library.list) || []\r\n    const error = useSelector(state => state.library.error)\r\n\r\n    let location = useLocation();\r\n    const queryParams = qs.parse(location.search, { ignoreQueryPrefix: true })\r\n\r\n    useEffect(\r\n        () => {dispatch(fetchLibraryRequest(queryParams))},\r\n        [location]\r\n    )\r\n    console.log('library :', library);\r\n    console.log('error :', error);\r\n\r\n    const cards = library.map(info => {\r\n        return (\r\n            <Info info={info}/>\r\n        )\r\n    });\r\n    return (\r\n        <>\r\n            <Loader active={library.length === 0}/>\r\n            <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                {cards}\r\n            </Card.Group>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport { Menu } from 'semantic-ui-react'\r\nimport InfoPanel from './InfoPanel'\r\nimport './Library.scss'\r\n\r\nexport default function Library() {\r\n    //TODO: make header dynamic (should show path using breadcrumbs)\r\n    return (\r\n        <div className=\"container\">\r\n            <Menu>\r\n                <Menu.Item header\r\n                           as={Link}\r\n                           to=\"/library\">\r\n                    База знаний\r\n                </Menu.Item>\r\n                <Menu.Item\r\n                    as={Link}\r\n                    to=\"/library?type=bg\"\r\n                    content=\"Боевые Группы\"\r\n                    key=\"library\"\r\n                />\r\n                <Menu.Item\r\n                    as={Link}\r\n                    to=\"/library?type=planet\"\r\n                    content=\"Планеты и расы\"\r\n                    key=\"planet\"\r\n                />\r\n                <Menu.Item\r\n                    as={Link}\r\n                    to=\"/library?type=person\"\r\n                    content=\"Личности\"\r\n                    key=\"person\"\r\n                />\r\n                <Menu.Item\r\n                    as={Link}\r\n                    to=\"/library?type=operation\"\r\n                    content=\"Высадки\"\r\n                    key=\"operation\"\r\n                />\r\n                <Menu.Item\r\n                    as={Link}\r\n                    to=\"/library?type=other\"\r\n                    content=\"Прочее\"\r\n                    key=\"other\"\r\n                />\r\n            </Menu>\r\n            <Route exact path=\"/library\">\r\n                <InfoPanel/>\r\n            </Route>\r\n        </div>\r\n    )\r\n}","export const ActionTypesScoutingInfo = {\r\n    FETCH_SCOUTINGINFO_REQUEST: 'scoutingInfo/FETCH_scoutingInfo_REQUEST',\r\n    FETCH_SCOUTINGINFO_SUCCESS: 'scoutingInfo/FETCH_scoutingInfo_SUCCESS',\r\n    FETCH_SCOUTINGINFO_FAILURE: 'scoutingInfo/FETCH_scoutingInfo_FAILURE',\r\n    FETCH_INFO_REQUEST: 'scoutingInfo/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'scoutingInfo/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'scoutingInfo/FETCH_INFO_FAILURE'\r\n};\r\n\r\nexport const initialScoutingInfoState = {\r\n    list: [],\r\n    info: {}\r\n};\r\n\r\nexport default function reducer(\r\n    state = initialScoutingInfoState,\r\n    action\r\n) {\r\n    switch (action.type) {\r\n\r\n        case ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list: action.payload\r\n            };\r\n\r\n        case ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n\r\n        case ActionTypesScoutingInfo.FETCH_INFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                info: action.payload\r\n            };\r\n\r\n        case ActionTypesScoutingInfo.FETCH_INFO_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const fetchScoutingInfoRequest = () => ({\r\n    type: ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_REQUEST\r\n});\r\n\r\nexport const fetchScoutingInfoSuccess = (payload) => ({\r\n    type: ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const fetchScoutingInfoFailure = (error) => ({\r\n    type: ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_FAILURE,\r\n    error\r\n});\r\n\r\nexport const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesScoutingInfo.FETCH_INFO_REQUEST,\r\n    params\r\n});\r\n\r\nexport const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesScoutingInfo.FETCH_INFO_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesScoutingInfo.FETCH_INFO_FAILURE,\r\n    error\r\n});","import React, {useState} from 'react'\r\nimport { Button, Image, Modal, Card, List } from 'semantic-ui-react'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function Info ({info}) {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const infoRows = Object.entries(info.data || {}).map(([key, value]) => <p key={key}>{`${key}: ${value}`}</p>);\r\n    \r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={info.photo ? `${info.photo}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{info.name}</Card.Header>\r\n                <Card.Meta>{info.category}</Card.Meta>\r\n                <Card.Description>\r\n                  <List>\r\n                    {infoRows.filter((item, index) => index < 3)}\r\n                  </List>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n\r\n    return (\r\n        <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={card}\r\n        >\r\n            <Modal.Header>{info.name}</Modal.Header>\r\n            <Modal.Content image>\r\n                <Image size='medium' src={info.photo ? `${info.photo}` : eye} wrapped />\r\n                <Modal.Description>\r\n                    {infoRows}\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    \r\n    )\r\n}","import React, {useState} from 'react'\r\nimport { Button, Image, Modal, Card, List, Progress } from 'semantic-ui-react'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function Request ({info}) {\r\n    const [open, setOpen] = useState(false)\r\n    //const startMill = (info.startDate && info.startDate.getMilliseconds()) || 0\r\n    //const nowMill = (info.dueDate && Date.now().getMilliseconds() - startMill) || 10\r\n    //const endMill = (info.dueDate && info.bueDate.getMilliseconds() - startMill) || 100\r\n    //const percent = nowMill/endMill*100\r\n    const percent = 10\r\n/*\r\n* name: String,\r\n    level: Number,\r\n    requestBy: {\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'User'\r\n    },\r\n    requestObject: String,\r\n    place: String,\r\n    task: String\r\n* */\r\n\r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={info.photo ? `${info.photo}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{info.name}</Card.Header>\r\n                <Card.Meta>{info.category}</Card.Meta>\r\n                <Card.Description>\r\n                    <List>\r\n                        <p>Обект: {info.requestObject}</p>\r\n                        <p>Место: {info.place}</p>\r\n                        <p>Задача: {info.task}</p>\r\n                    </List>\r\n                </Card.Description>\r\n                <Progress percent={percent} indicating />\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n\r\n    return (\r\n        <Modal\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={card}\r\n        >\r\n            <Modal.Header>{info.name}</Modal.Header>\r\n            <Modal.Content image>\r\n                <Image size='medium' src={info.photo ? `${info.photo}` : eye} wrapped />\r\n                <Modal.Description>\r\n                    <p>Обект: {info.requestObject}</p>\r\n                    <p>Место: {info.place}</p>\r\n                    <p>Задача: {info.task}</p>\r\n                    <Progress percent={percent} indicating />\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n\r\n    )\r\n}","import {ActionTypesUsers} from '../users'\r\n\r\nexport const ActionTypesMasterclass = {\r\n    FETCH_MASTERCLASS_REQUEST: 'masterclass/FETCH_MASTERCLASS_REQUEST',\r\n    FETCH_MASTERCLASS_SUCCESS: 'masterclass/FETCH_MASTERCLASS_SUCCESS',\r\n    FETCH_MASTERCLASS_FAILURE: 'masterclass/FETCH_MASTERCLASS_FAILURE',\r\n    FETCH_INFO_REQUEST: 'masterclass/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'masterclass/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'masterclass/FETCH_INFO_FAILURE',\r\n    REGISTER_MASTERCLASS_REQUEST: 'masterclass/REGISTER_MASTERCLASS_REQUEST',\r\n    REGISTER_MASTERCLASS_SUCCESS: 'masterclass/REGISTER_MASTERCLASS_SUCCESS',\r\n    REGISTER_MASTERCLASS_FAILURE: 'masterclass/REGISTER_MASTERCLASS_FAILURE'\r\n\r\n  };\r\n  \r\n  export const initialMasterclassState = {\r\n    list: {},\r\n    info: {},\r\n    message: {}\r\n  };\r\n  \r\n  export default function reducer(\r\n    state = initialMasterclassState,\r\n    action\r\n  ) {\r\n    switch (action.type) {\r\n  \r\n      case ActionTypesMasterclass.FETCH_MASTERCLASS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          list: action.payload,\r\n          message: {}\r\n        };\r\n      case ActionTypesMasterclass.FETCH_MASTERCLASS_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        };\r\n\r\n      case ActionTypesMasterclass.FETCH_INFO_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload,\r\n          message: {}\r\n        };\r\n      case ActionTypesMasterclass.FETCH_INFO_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        };\r\n\r\n      case ActionTypesMasterclass.REGISTER_MASTERCLASS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload,\r\n          message: { failure: false, text: 'Вы успешно записисались на мастеркласс!' }\r\n        }\r\n      case ActionTypesMasterclass.REGISTER_MASTERCLASS_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n\r\n      case ActionTypesUsers.SIGN_OUT_USER_REQUEST:\r\n        return {\r\n          ...initialMasterclassState\r\n        }\r\n    \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  // Action Creators\r\n  export const fetchMasterclassRequest = () => ({\r\n    type: ActionTypesMasterclass.FETCH_MASTERCLASS_REQUEST\r\n  });\r\n  \r\n  export const fetchMasterclassSuccess = (payload) => ({\r\n    type: ActionTypesMasterclass.FETCH_MASTERCLASS_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchMasterclassFailure = (error) => ({\r\n    type: ActionTypesMasterclass.FETCH_MASTERCLASS_FAILURE,\r\n    error\r\n  });\r\n\r\n  export const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesMasterclass.FETCH_INFO_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesMasterclass.FETCH_INFO_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesMasterclass.FETCH_INFO_FAILURE,\r\n    error\r\n  });\r\n  \r\n  export const registerMasterclassRequest = (params) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const registerMasterclassSuccess = (payload) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const registerMasterclassFailure = (error) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_FAILURE,\r\n    error\r\n  });","import {ActionTypesMasterclass} from \"../masterclass\";\r\n\r\nexport const ActionTypesScoutingRequest = {\r\n    FETCH_SCOUTINGREQUEST_REQUEST: 'scoutingRequest/FETCH_scoutingRequest_REQUEST',\r\n    FETCH_SCOUTINGREQUEST_SUCCESS: 'scoutingRequest/FETCH_scoutingRequest_SUCCESS',\r\n    FETCH_SCOUTINGREQUEST_FAILURE: 'scoutingRequest/FETCH_scoutingRequest_FAILURE',\r\n    FETCH_INFO_REQUEST: 'scoutingRequest/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'scoutingRequest/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'scoutingRequest/FETCH_INFO_FAILURE',\r\n    REGISTER_SCOUTINGREQUEST_REQUEST: 'scoutingRequest/REGISTER_SCOUTINGREQUEST_REQUEST',\r\n    REGISTER_SCOUTINGREQUEST_SUCCESS: 'scoutingRequest/REGISTER_SCOUTINGREQUEST_SUCCESS',\r\n    REGISTER_SCOUTINGREQUEST_FAILURE: 'scoutingRequest/REGISTER_SCOUTINGREQUEST_FAILURE'\r\n};\r\n\r\nexport const initialScoutingRequestState = {\r\n    list: [],\r\n    info: {}\r\n};\r\n\r\nexport default function reducer(\r\n    state = initialScoutingRequestState,\r\n    action\r\n) {\r\n    switch (action.type) {\r\n\r\n        case ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list: action.payload\r\n            };\r\n\r\n        case ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n\r\n        case ActionTypesScoutingRequest.FETCH_INFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                info: action.payload\r\n            };\r\n\r\n        case ActionTypesScoutingRequest.FETCH_INFO_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const fetchScoutingRequestRequest = () => ({\r\n    type: ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_REQUEST\r\n});\r\n\r\nexport const fetchScoutingRequestSuccess = (payload) => ({\r\n    type: ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const fetchScoutingRequestFailure = (error) => ({\r\n    type: ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_FAILURE,\r\n    error\r\n});\r\n\r\nexport const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesScoutingRequest.FETCH_INFO_REQUEST,\r\n    params\r\n});\r\n\r\nexport const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesScoutingRequest.FETCH_INFO_SUCCESS,\r\n    payload\r\n});\r\nexport const registerScoutingRequestRequest = (params) => ({\r\n    type: ActionTypesScoutingRequest.REGISTER_SCOUTINGREQUEST_REQUEST,\r\n    params\r\n});\r\nexport const registerScoutingRequestSuccess = (payload) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const registerScoutingRequestFailure = (error) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_FAILURE,\r\n    error\r\n});\r\n\r\nexport const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesScoutingRequest.FETCH_INFO_FAILURE,\r\n    error\r\n});","import React, {useState} from 'react'\r\nimport {Header, Button, Form, Modal, Card, Image} from 'semantic-ui-react'\r\nimport plus from \"../../assets/img/plus.svg\";\r\nimport {registerScoutingRequestRequest} from '../../redux/modules/scoutingRequest';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport default function RequestPopUp({ isOpen, setOpen, info}) {\r\n    const [requestObject, setRequestObject] = useState('');\r\n    const [place, setPlace] = useState('');\r\n    const [task, setTask] = useState('');\r\n    const dispatch = useDispatch()\r\n    const isButtonDisabled = requestObject === '' || place === '' || task === ''\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            trigger={\r\n                <Card>\r\n                    <Card.Content>\r\n                        <Image\r\n                            src={plus}\r\n                            style={{marginBottom: '1rem'}}\r\n                        />\r\n                        <Header textAlign='center'>Сделать запрос</Header>\r\n                    </Card.Content>\r\n                </Card>\r\n            }\r\n        >\r\n            <Modal.Header>\r\n                Новый запрос\r\n            </Modal.Header>\r\n            <Modal.Content>\r\n                <Form\r\n                    size=\"small\"\r\n                >\r\n                    <Form.Field>\r\n                        <label>Объект запроса</label>\r\n                        <input\r\n                            placeholder='requestObject'\r\n                            onChange={(e) => {setRequestObject(e.target.value)}}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Место</label>\r\n                        <input\r\n                            placeholder='place'\r\n                            onChange={(e) => {setPlace(e.target.value)}}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Задача</label>\r\n                        <input\r\n                            placeholder='task'\r\n                            onChange={(e) => {setTask(e.target.value)}}/>\r\n                    </Form.Field>\r\n                </Form>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    content=\"Отмена\"\r\n                    color='black'\r\n                    onClick={(e) => {e.preventDefault(); setOpen(false)}}\r\n                />\r\n                <Button\r\n                    content=\"Отправить запрос\"\r\n                    labelPosition='right'\r\n                    icon='checkmark'\r\n                    positive\r\n                    disabled={isButtonDisabled}\r\n                    onClick={() => dispatch(registerScoutingRequestRequest({\r\n                        requestObject,\r\n                        place,\r\n                        task\r\n                    }))}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n//onClick={() => dispatch(registerMasterclassRequest({_id: info._id}))}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport {fetchScoutingInfoRequest} from '../../redux/modules/scoutingInfo'\r\nimport {Card, Image, Loader, Tab, Header, Form} from 'semantic-ui-react'\r\nimport Info from './Info'\r\nimport Request from './Request'\r\nimport {fetchScoutingRequestRequest} from \"../../redux/modules/scoutingRequest\";\r\nimport RequestPopUp from \"./RequestPopUp\";\r\n\r\nexport default function InfoPanel () {\r\n    const dispatch = useDispatch()\r\n    const scoutingInfo = useSelector(state => state.scoutingInfo.list) || []\r\n    const scoutingRequest = useSelector(state => state.scoutingRequest.list) || []\r\n    const error = useSelector(state => state.scoutingInfo.error)\r\n    const [isNewRequestOpen, setNewRequestOpen] = useState(false)\r\n    \r\n    useEffect(\r\n        () => {\r\n            dispatch(fetchScoutingInfoRequest())\r\n            dispatch(fetchScoutingRequestRequest())\r\n            console.log('FETCH, MOTHRTFUCKER!')\r\n        },\r\n        []\r\n    )\r\n    console.log('scoutingInfo :', scoutingInfo);\r\n    console.log('scoutingRequest :', scoutingRequest);\r\n    console.log('error :', error);\r\n\r\n    const cardsInfo = scoutingInfo.map(info => {\r\n        return (\r\n            <Info info={info}/>\r\n        )\r\n    });\r\n\r\n    const newRequestCard = (\r\n        <RequestPopUp\r\n        isOpen={isNewRequestOpen}\r\n        setOpen={setNewRequestOpen}\r\n        />\r\n    )\r\n    const cardsRequest = [\r\n        newRequestCard,\r\n        ...scoutingRequest.map(info => {\r\n            return (\r\n              <Request info={info}/>\r\n            )\r\n        })\r\n    ]\r\n\r\n    const panes = [\r\n        {\r\n            menuItem: { key: 'Доступная информация', icon: 'users', content: 'Доступная информация' },\r\n            render: () => <Tab.Pane>\r\n                    <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                        {cardsInfo}\r\n                    </Card.Group>\r\n            </Tab.Pane>,\r\n\r\n        },\r\n        {\r\n            menuItem: { key: 'Запросы на разведку', icon: 'users', content: 'Запросы на разведку' },\r\n            render: () => <Tab.Pane>\r\n                <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                    {cardsRequest}\r\n                </Card.Group>\r\n            </Tab.Pane>,\r\n        }\r\n]\r\n    return  <Tab loading={scoutingInfo.length === 0} panes={panes} />\r\n}","import React from 'react'\r\nimport { Route } from \"react-router-dom\";\r\nimport { Header } from 'semantic-ui-react'\r\nimport InfoPanel from './InfoPanel'\r\nimport './Scouting.scss'\r\n\r\nexport default function ScoutingInfo() {\r\n    //TODO: make header dynamic (should show path using breadcrumbs)\r\n    return (\r\n        <div className=\"container\">\r\n            <Header as='h2' attached='top'>\r\n                Информация\r\n            </Header>\r\n            <Route exact path=\"/scouting\">\r\n                <InfoPanel/>\r\n            </Route>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport { Button, Header, Image, Modal, Table, Icon, Message, Card, List, Tab } from 'semantic-ui-react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {registerMasterclassRequest} from '../../redux/modules/masterclass'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function MCTab ({mc}) {\r\n    const message = useSelector(state => state.masterclass.message)\r\n    const user = useSelector(state => state.users.user)\r\n    const isButtonDisabled = mc.students && ((mc.students.length >= mc.max_students) || (mc.students.findIndex(stud => stud.id === user.id) !== -1));\r\n    const messageBlock = <Message positive={!message.failure} negative={message.failure}><Message.Header>{message.text}</Message.Header></Message>\r\n    const mcRows = Object.entries(mc.data || {}).map(([key, value]) => <p key={key}>{`${key}: ${value}`}</p>);\r\n    const students = mc.students ? mc.students.map(\r\n        student => (\r\n          <Table.Row key={student.username}>\r\n            <Table.Cell>\r\n              <Header as='h4' image>\r\n                {student.photo && student.photo !== '' ?\r\n                  <Image src={student.photo} avatar size='mini' /> :\r\n                  <Icon name=\"user\" size=\"mini\"/>\r\n                }\r\n                <Header.Content>\r\n                  {student.name}\r\n                  <Header.Subheader>{student.group}</Header.Subheader>\r\n                </Header.Content>\r\n              </Header>\r\n            </Table.Cell>\r\n          </Table.Row>)\r\n    ) : [];\r\n\r\n\r\n    return (\r\n          <Tab.Pane>\r\n            <Modal.Description>\r\n              <p>Количество человек: {(mc.students && mc.students.length) || 0}/{mc.max_students}</p>\r\n              {mcRows}\r\n              <Table size=\"large\">\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Записавшиеся наблюдатели</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                  {students}\r\n                </Table.Body>\r\n              </Table>\r\n              {message && message.text && message.text !== '' ? messageBlock : <></>}\r\n            </Modal.Description>\r\n          </Tab.Pane>\r\n        ) \r\n} ","import React, {useState} from 'react'\r\nimport { Button, Header, Image, Modal, Table, Icon, Message, Card, List, Tab } from 'semantic-ui-react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {registerMasterclassRequest} from '../../redux/modules/masterclass'\r\nimport eye from '../../assets/img/eye.svg'\r\nimport MCTab from './MCTab'\r\n\r\nexport default function Info ({mcs, name}) {\r\n    const [open, setOpen] = useState(false)\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const dispatch = useDispatch()\r\n\r\n    const first = mcs[0]\r\n    const cardRows = Object.entries(first.data || {}).filter((item, index) => index < 2).map(([key, value]) => <p key={key}>{`${key}: ${value.slice(0,70)}${value.length > 70 ? '...' : ''}`}</p>);\r\n\r\n    const panes = mcs.map(mc => {\r\n        const date = new Date(mc.date)\r\n        const time = date.toTimeString()\r\n        console.log('time :>> ', time);\r\n        return {\r\n            menuItem: time.slice(0,5),\r\n            render: () => (<MCTab mc={mc}/>)\r\n        }\r\n    })\r\n    \r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={first.photo ? `${first.photo}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{first.name}</Card.Header>\r\n                <Card.Meta>{first.category}</Card.Meta>\r\n                <Card.Description>\r\n                  <List>\r\n                    <List.Item>\r\n                      <List.Icon name=\"users\"/>\r\n                      <List.Content>\r\n                          Количество занятий: {mcs.length}\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    {cardRows}\r\n                  </List>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n\r\n    return (\r\n        <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={card}\r\n        >\r\n            <Modal.Header>{first.name}</Modal.Header>\r\n            <Modal.Content image scrolling>\r\n                <Image size='medium' src={first.photo ? `${first.photo}` : eye} spaced=\"right\" />\r\n                <Tab  \r\n                  menu={{ fluid: true, vertical: true, tabular: 'right' }}\r\n                  panes={panes}\r\n                  onTabChange={(e,d,index) => {\r\n                      console.log('e :>> ', e);\r\n                      console.log('d :>> ', d);\r\n                      console.log('index :>> ', index);\r\n                      setActiveTab(d.activeIndex)\r\n                  }}\r\n                />\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n                <Button \r\n                    content=\"Записаться\" \r\n                    labelPosition='right'\r\n                    icon='checkmark'\r\n                    positive\r\n                    onClick={() => dispatch(registerMasterclassRequest({_id: mcs[activeTab]._id}))}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    \r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport {fetchMasterclassRequest} from '../../redux/modules/masterclass'\r\nimport { Card, Loader } from 'semantic-ui-react'\r\nimport Info from './Info'\r\n\r\nfunction InfoPanel() {\r\n    const dispatch = useDispatch()\r\n    const masterclass = useSelector(state => state.masterclass.list) || []\r\n    const error = useSelector(state => state.masterclass.error)\r\n    \r\n    useEffect(\r\n        () => {dispatch(fetchMasterclassRequest())},\r\n        []\r\n    )\r\n    console.log('masterclass :', masterclass);\r\n    console.log('error :', error);\r\n\r\n    const cards = Object.entries(masterclass).map(([name, mcs]) => {\r\n        return (\r\n            <Info key={name} mcs={mcs} name={name}/>\r\n        )\r\n    })\r\n    // const cards = masterclass.map(info => {\r\n    //     return (\r\n    //         <Info key={info && info.id} info={info}/>\r\n    //     )\r\n    // });\r\n    return (\r\n        <>\r\n            <Loader active={masterclass.length === 0}/>\r\n            <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                {cards}\r\n            </Card.Group>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoPanel\r\n","import React from 'react'\r\nimport { Route } from \"react-router-dom\"\r\nimport { Header } from 'semantic-ui-react'\r\nimport InfoPanel from './InfoPanel'\r\nimport './Masterclass.scss'\r\n\r\nexport default function Masterclass() {\r\n    //TODO: make header dynamic (should show path using breadcrumbs)\r\n    return (\r\n        <div className=\"container\">\r\n            <Header as='h2' attached='top'>\r\n                Мастерклассы\r\n            </Header>\r\n            <Route exact path=\"/masterclass\">\r\n                <InfoPanel/>\r\n            </Route>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport eye from '../assets/img/eye.svg'\r\nimport { signOutUserRequest, fetchUserPageRequest } from '../redux/modules/users'\r\nimport { useHistory  } from 'react-router-dom';\r\nimport { \r\n    Header, Image, Button, \r\n    Progress, Grid, Segment, \r\n    Rating, Table, Label,\r\n    Icon\r\n} from 'semantic-ui-react'\r\n\r\nexport default function UserPanel() {\r\n    const dispatch = useDispatch()\r\n    let history = useHistory();\r\n    const user = useSelector(state => state.users.user)\r\n    console.log('user :>> ', user);\r\n    useEffect(\r\n        () => {dispatch(fetchUserPageRequest(user.id))},\r\n        [user]\r\n    )\r\n    const {exams = [], operations = []} = useSelector(state => state.users.page) || {}\r\n    console.log('exams :>> ', exams);\r\n    const examsRows = exams.map(ex => {\r\n        const {success, points} = ex.result\r\n        return (\r\n            <Table.Row key={ex._id} negative={!success} positive={success}>\r\n                <Table.Cell>\r\n                    <Label >{ex.name}</Label>\r\n                </Table.Cell>\r\n                <Table.Cell>{success ? (<Icon name='checkmark'/>) : (<Icon name='close'/>)}</Table.Cell>\r\n                <Table.Cell>\r\n                    {points ? points : 0}\r\n                </Table.Cell>\r\n            </Table.Row>\r\n        )\r\n    })\r\n    console.log('operations :>> ', operations);\r\n    const operationsRows = operations.map(op => (\r\n        <Table.Row key={op._id} negative={!op.success} positive={op.success}>\r\n            <Table.Cell>\r\n                <Label >{op.name}</Label>\r\n            </Table.Cell>\r\n            <Table.Cell>{op.success ? (<Icon name='checkmark'/>) : (<Icon name='close'/>)}</Table.Cell>\r\n            <Table.Cell>{op.all_points}</Table.Cell>\r\n            <Table.Cell>\r\n                {op.result ? op.result : 0}\r\n            </Table.Cell>\r\n        </Table.Row>\r\n    ))\r\n    return (\r\n        <Grid>\r\n            <Grid.Row columns={2}>\r\n                <Grid.Column computer={6} mobile={16}>\r\n                    <Image\r\n                        rounded={true}\r\n                        size=\"medium\"\r\n                        floated=\"left\"\r\n                        src={user.photo && user.photo !== '' ? user.photo : eye}\r\n                    />\r\n                </Grid.Column>\r\n                <Grid.Column computer={10} mobile={16}>\r\n                    <Segment size=\"massive\">\r\n                        <Header>Имя : {user.name}</Header>\r\n                        <p>Боевая группа: {user.group}</p>\r\n                        <p>Жизни: <Rating icon='heart' rating={user.lives || 0} maxRating={10} disabled={true}/></p>\r\n                        <p>Уровень: <Rating icon='star' rating={user.level} maxRating={3} disabled={true}/></p>\r\n                        <Progress \r\n                            value={user.experience} \r\n                            total={(user.level + 1) * 100} \r\n                            progress='ratio' \r\n                            indicating\r\n                        />\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <Segment >\r\n                        <Header>Высадки</Header>\r\n                        <Table celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Успех</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Всего баллов</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Получено баллов</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>\r\n                                {operationsRows}\r\n                            </Table.Body>\r\n                        </Table>\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <Segment>\r\n                    <Header>Экзамены</Header>\r\n                        <Table celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Успех</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Получено баллов</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>\r\n                                {examsRows}\r\n                            </Table.Body>\r\n                        </Table>\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column floated=\"right\" stretched={false} width={4}>\r\n                    <Button\r\n                        content=\"Выйти\"\r\n                        color='black'\r\n                        onClick={(e) => {\r\n                            e.preventDefault()\r\n                            dispatch(signOutUserRequest())\r\n                            history.push('/')\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>)\r\n}","import {ActionTypesUsers} from '../users'\r\n\r\nexport const ActionTypesOperation = {\r\n    FETCH_OPERATION_REQUEST: 'operation/FETCH_OPERATION_REQUEST',\r\n    FETCH_OPERATION_SUCCESS: 'operation/FETCH_OPERATION_SUCCESS',\r\n    FETCH_OPERATION_FAILURE: 'operation/FETCH_OPERATION_FAILURE',\r\n    FETCH_INFO_REQUEST: 'operation/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'operation/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'operation/FETCH_INFO_FAILURE',\r\n    REGISTER_OPERATION_REQUEST: 'operation/REGISTER_OPERATION_REQUEST',\r\n    REGISTER_OPERATION_SUCCESS: 'operation/REGISTER_OPERATION_SUCCESS',\r\n    REGISTER_OPERATION_FAILURE: 'operation/REGISTER_OPERATION_FAILURE',\r\n    FETCH_OPERATION_VIEW_REQUEST: 'operation/FETCH_OPERATION_VIEW_REQUEST',\r\n    FETCH_OPERATION_VIEW_SUCCESS: 'operation/FETCH_OPERATION_VIEW_SUCCESS',\r\n    FETCH_OPERATION_VIEW_FAILURE: 'operation/FETCH_OPERATION_VIEW_FAILURE',\r\n    ACTIVATE_USER_REQUEST: 'operation/ACTIVATE_USER_REQUEST',\r\n    ACTIVATE_USER_SUCCESS: 'operation/ACTIVATE_USER_SUCCESS',\r\n    ACTIVATE_USER_FAILURE: 'operation/ACTIVATE_USER_FAILURE',\r\n    KILL_USER_REQUEST: 'operation/ACTIVATE_USER_REQUEST',\r\n    KILL_USER_SUCCESS: 'operation/ACTIVATE_USER_SUCCESS',\r\n    KILL_USER_FAILURE: 'operation/ACTIVATE_USER_FAILURE',\r\n  };\r\n  \r\n  export const initialOperationState = {\r\n    list: [],\r\n    info: {},\r\n    message: {},\r\n    view: []\r\n  };\r\n  \r\n  export default function reducer(\r\n    state = initialOperationState,\r\n    action\r\n  ) {\r\n    console.log('action :>> ', action);\r\n    switch (action.type) {\r\n  \r\n      case ActionTypesOperation.FETCH_OPERATION_SUCCESS:\r\n        return {\r\n          ...state,\r\n          list: action.payload,\r\n          message: {}\r\n        }\r\n      case ActionTypesOperation.FETCH_OPERATION_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n\r\n      case ActionTypesOperation.FETCH_INFO_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload,\r\n          message: {}\r\n        }\r\n      case ActionTypesOperation.FETCH_INFO_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n\r\n      case ActionTypesOperation.REGISTER_OPERATION_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload,\r\n          message: { failure: false, text: 'Вы успешно записисались на высадку!' }\r\n        }\r\n      case ActionTypesOperation.REGISTER_OPERATION_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n  \r\n      case ActionTypesOperation.FETCH_OPERATION_VIEW_SUCCESS:\r\n        return {\r\n          ...state,\r\n          view: action.payload,\r\n          message: {}\r\n        }\r\n      case ActionTypesOperation.FETCH_OPERATION_VIEW_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n\r\n      case ActionTypesOperation.ACTIVATE_USER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          message: { failure: false, text: 'Вы успешно активировались!' }\r\n        }\r\n      case ActionTypesOperation.ACTIVATE_USER_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n      \r\n        case ActionTypesOperation.KILL_USER_SUCCESS:\r\n          return {\r\n            ...state,\r\n            message: { failure: false, text: 'Смерть подтверждена!' }\r\n          }\r\n        case ActionTypesOperation.KILL_USER_FAILURE:\r\n          return {\r\n            ...state,\r\n            message: { failure: true, text: action.error.message}\r\n          }\r\n\r\n      case ActionTypesUsers.SIGN_OUT_USER_REQUEST:\r\n        return {\r\n          ...initialOperationState\r\n        }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  // Action Creators\r\n  export const fetchOperationRequest = () => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_REQUEST\r\n  });\r\n  \r\n  export const fetchOperationSuccess = (payload) => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchOperationFailure = (error) => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_FAILURE,\r\n    error\r\n  });\r\n\r\n  export const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesOperation.FETCH_INFO_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesOperation.FETCH_INFO_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesOperation.FETCH_INFO_FAILURE,\r\n    error\r\n  });\r\n  \r\n  export const registerOperationRequest = (params) => ({\r\n    type: ActionTypesOperation.REGISTER_OPERATION_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const registerOperationSuccess = (payload) => ({\r\n    type: ActionTypesOperation.REGISTER_OPERATION_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const registerOperationFailure = (error) => ({\r\n    type: ActionTypesOperation.REGISTER_OPERATION_FAILURE,\r\n    error\r\n  });\r\n\r\n  \r\n  export const fetchOperationViewRequest = () => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_VIEW_REQUEST\r\n  });\r\n  \r\n  export const fetchOperationViewSuccess = (payload) => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_VIEW_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchOperationViewFailure = (error) => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_VIEW_FAILURE,\r\n    error\r\n  });\r\n  \r\n  export const activateUserRequest = (params) => ({\r\n    type: ActionTypesOperation.ACTIVATE_USER_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const activateUserSuccess = () => ({\r\n    type: ActionTypesOperation.ACTIVATE_USER_SUCCESS\r\n  });\r\n  \r\n  export const activateUserFailure = (error) => ({\r\n    type: ActionTypesOperation.ACTIVATE_USER_FAILURE,\r\n    error\r\n  });\r\n\r\n  export const killUserRequest = (params) => ({\r\n    type: ActionTypesOperation.KILL_USER_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const killUserSuccess = () => ({\r\n    type: ActionTypesOperation.KILL_USER_SUCCESS\r\n  });\r\n  \r\n  export const killUserFailure = (error) => ({\r\n    type: ActionTypesOperation.KILL_USER_FAILURE,\r\n    error\r\n  });","import React, {useState} from 'react'\r\nimport { Button, Header, Image, Modal, Container, Table, Icon, Message, Card, List } from 'semantic-ui-react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {registerOperationRequest, activateUserRequest, killUserRequest} from '../../redux/modules/operation'\r\nimport eye from '../../assets/img/eye.svg'\r\nimport moment from 'moment'\r\n\r\nexport default function Info ({info}) {\r\n    const [open, setOpen] = useState(false)\r\n    const message = useSelector(state => state.operation.message)\r\n    const user = useSelector(state => state.users.user)\r\n    console.log('user :>> ', user);\r\n    const dispatch = useDispatch()\r\n    const isAdmin = user.roles && user.roles.indexOf('ROLE_ADMIN') !== -1;\r\n    const isModerator = user.roles && user.roles.indexOf('ROLE_MODERATOR') !== -1\r\n\r\n    const isUserRegistred = info.users && info.users.findIndex(usr => usr._id === user.id) !== -1\r\n    const isButtonRegisterDisabled = isUserRegistred;\r\n    const isButtonActivateDisabled = !(moment().isBetween(moment(info.date).subtract(15, 'minutes'), moment(info.date)))\r\n    const messageBlock = <Message positive={!message.failure} negative={message.failure}><Message.Header>{message.text}</Message.Header></Message>\r\n    const cardRows = Object.entries(info.data || {}).filter((item, index) => index < 2).map(([key, value]) => <p key={key}>{`${key}: ${value.slice(0,70)}${value.length > 70 ? '...' : ''}`}</p>);\r\n    const infoRows = Object.entries(info.data || {}).map(([key, value]) => <p key={key}>{`${key}: ${value}`}</p>);\r\n    const users = info.users ? info.users.map(\r\n        usr => (\r\n          <Table.Row key={usr.username}>\r\n            <Table.Cell>\r\n              <Header as='h4' image>\r\n                {usr.photo && usr.photo !== '' ?\r\n                  <Image src={usr.photo} avatar size='mini' /> :\r\n                  <Icon name=\"user\" size=\"mini\"/>\r\n                }\r\n                <Header.Content>\r\n                  {usr.name}\r\n                  <Header.Subheader>{usr.group}</Header.Subheader>\r\n                </Header.Content>\r\n                {isModerator &&\r\n                 <Button\r\n                          icon='user times'\r\n                          color='red'\r\n                          onClick={() => dispatch(killUserRequest({_id: usr._id}))}\r\n                    />\r\n                }\r\n              </Header>\r\n            </Table.Cell>\r\n          </Table.Row>)\r\n    ) : [];\r\n    \r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={info.photo ? `${info.photo}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{info.name}</Card.Header>\r\n                <Card.Meta>{info.category}</Card.Meta>\r\n                <Card.Description>\r\n                  <List>\r\n                    <List.Item>\r\n                      <List.Icon name=\"users\"/>\r\n                      <List.Content>\r\n                          Количество заявок: {info.users.length}/{info.max_users}\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    {cardRows}\r\n                  </List>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n\r\n    return (\r\n        <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={card}\r\n        >\r\n            <Modal.Header>\r\n              {info.name}\r\n              { isAdmin ? (\r\n                <Button\r\n                  floated=\"right\"\r\n                  content=\"Активировать всех\"\r\n                  labelPosition='right'\r\n                  icon='crosshairs'\r\n                  color='red'\r\n                  onClick={() => dispatch(activateUserRequest({opId: info._id }))}\r\n                />\r\n              ): <></>}\r\n            </Modal.Header>\r\n            <Modal.Content image scrolling>\r\n                <Image size='medium' src={info.photo ? `${info.photo}` : eye} spaced=\"right\"/>\r\n                <Modal.Description>\r\n                  <Table size=\"large\">\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Старший наблюдатель</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                      {info.manager ? (\r\n                        <Header as='h4' image>\r\n                        {info.manager.photo && info.manager.photo !== '' ?\r\n                          <Image src={info.manager.photo} avatar size='mini' /> :\r\n                          <Icon name=\"user\" size=\"mini\"/>\r\n                        }\r\n                        <Header.Content>\r\n                          {info.manager.name}\r\n                          <Header.Subheader>{info.manager.group}</Header.Subheader>\r\n                        </Header.Content>\r\n                      </Header>\r\n                      ) : (<Header as='h4' image>\r\n                             <Icon name=\"user\" size=\"mini\"/>\r\n                          <Header.Content>\r\n                            Отсутствует\r\n                          </Header.Content>\r\n                        </Header>)}\r\n                      \r\n                    </Table.Body>\r\n                  </Table>\r\n                  <p>Количество заявок: {(info.users && info.users.length) || 0}/{info.max_users}</p>\r\n                  {infoRows}\r\n                  <Table size=\"large\">\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Записавшиеся наблюдатели</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {users}\r\n                    </Table.Body>\r\n                  </Table>\r\n                  {message && message.text && message.text !== '' ? messageBlock : <></>}\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n                { isUserRegistred ? (\r\n                  <>\r\n                    <Button\r\n                          content=\"Активировать\"\r\n                          labelPosition='right'\r\n                          icon='crosshairs'\r\n                          color='blue'\r\n                          disabled={isButtonActivateDisabled}\r\n                          onClick={() => dispatch(activateUserRequest({_id: info._id}))}\r\n                    />\r\n                    <Button\r\n                          content=\"Смерть\"\r\n                          labelPosition='right'\r\n                          icon='user times'\r\n                          color='red'\r\n                          disabled={!isButtonActivateDisabled}\r\n                          onClick={() => dispatch(killUserRequest({_id: user.id}))}\r\n                    />\r\n                </>\r\n                ) : (\r\n                  <Button \r\n                    content=\"Записаться\" \r\n                    labelPosition='right'\r\n                    icon='checkmark'\r\n                    positive\r\n                    disabled={isButtonRegisterDisabled}\r\n                    onClick={() => dispatch(registerOperationRequest({_id: info._id}))}\r\n                />\r\n                  )\r\n                }\r\n                \r\n            </Modal.Actions>\r\n        </Modal>\r\n    \r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport {fetchOperationRequest} from '../../redux/modules/operation'\r\nimport { Card, Loader, Header } from 'semantic-ui-react'\r\nimport Info from './Info'\r\n\r\nfunction InfoPanel() {\r\n    const dispatch = useDispatch()\r\n    const operation = useSelector(state => state.operation.list) || []\r\n    const error = useSelector(state => state.operation.error)\r\n    \r\n    useEffect(\r\n        () => {dispatch(fetchOperationRequest())},\r\n        []\r\n    )\r\n    console.log('operation :', operation);\r\n    console.log('error :', error);\r\n\r\n    const cards = operation.map(info => {\r\n        return (\r\n            <Info info={info}/>\r\n        )\r\n    });\r\n    return (\r\n        <>\r\n            <Header as='h2' attached='top'>\r\n                Высадки\r\n            </Header>\r\n            <Loader active={operation.length === 0}/>\r\n            <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                {cards}\r\n            </Card.Group>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoPanel\r\n","import React from 'react'\r\nimport { Card, Header, Image, Modal, Button } from 'semantic-ui-react'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function ViewCard ({operation, open, setOpen}) {\r\n    const userCards = operation.users.filter(user => user.active).map(user => (\r\n        <Card\r\n          key={user._id}\r\n          className={`watcherCard ${user.alive ? 'alive' : 'dead'}`}\r\n        >\r\n           {user.gif ? <Image src={user.gifUrl} wrapped ui={false}/> : <></>}\r\n            <Card.Content>\r\n                <Header as='h6'>{user.name}</Header>    \r\n            </Card.Content>\r\n        </Card>\r\n    ))\r\n    return (\r\n        <Modal\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            size='fullscreen'\r\n            trigger={\r\n            <div className=\"viewCard\">\r\n                <Header as='h4'>{operation.name}</Header>\r\n                <Card.Group\r\n                  itemsPerRow={5}\r\n                  doubling\r\n                  centered\r\n                >\r\n                    {userCards}\r\n                </Card.Group>\r\n            </div>}\r\n        >\r\n        <Modal.Header>{operation.name}</Modal.Header>\r\n        <Modal.Content image scrolling>\r\n          <Card.Group\r\n            centered\r\n            doubling\r\n            itemsPerRow={6}\r\n          >\r\n            {userCards}\r\n          </Card.Group>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color='black' onClick={() => setOpen(false)}>\r\n            Закрыть\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n        \r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport {fetchOperationViewRequest} from '../../redux/modules/operation'\r\nimport { Grid, Loader} from 'semantic-ui-react'\r\nimport ViewCard from './ViewCard'\r\n\r\nexport default function View () {\r\n    const dispatch = useDispatch();\r\n    const view = useSelector(state => state.operation.view, shallowEqual) || []\r\n    const [openedOperation, setOpenedOperation] = useState()\r\n\r\n    useEffect(\r\n        () => {\r\n            dispatch(fetchOperationViewRequest())\r\n            const interval = setInterval(\r\n              () => dispatch(fetchOperationViewRequest()),\r\n              10000\r\n            );\r\n            return () => clearInterval(interval);\r\n        },\r\n        []\r\n    )\r\n    \r\n    const columns = view.map((operation, index) => (\r\n        \r\n        <Grid.Column key={operation._id} className=\"viewColumn\">\r\n            <ViewCard \r\n              operation={operation}\r\n              open={openedOperation === index}\r\n              setOpen={(open) => {setOpenedOperation(open ? index : undefined)}}\r\n            />\r\n        </Grid.Column>\r\n    ))\r\n    // const rows = [];\r\n    // for (let i = 0; i < columns.length / 2; i++) {\r\n    //     rows.push(<Grid.Row>\r\n    //         {columns[i*2]}\r\n    //         {columns[i*2+1]}\r\n    //     </Grid.Row>)\r\n    // }\r\n    return (\r\n        <>\r\n            <Loader active={view.length === 0}/>\r\n            <Grid columns={2} stackable>\r\n                {columns}\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Route } from \"react-router-dom\"\r\nimport { Header } from 'semantic-ui-react'\r\nimport InfoPanel from './InfoPanel'\r\nimport View from './View'\r\nimport './Operation.scss'\r\n\r\nexport default function Operation() {\r\n    //TODO: make header dynamic (should show path using breadcrumbs)\r\n    return (\r\n        <div className=\"container\">\r\n            <Route exact path=\"/operation/view\">\r\n                <View/>\r\n            </Route>\r\n            <Route exact path=\"/operation\">\r\n                <InfoPanel/>\r\n            </Route>\r\n        </div>\r\n    )\r\n}","import _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Icon,\r\n  Image,\r\n  Menu,\r\n  Sidebar,\r\n  Responsive\r\n} from \"semantic-ui-react\";\r\n\r\nexport default function NavBarChildren({ children }) {\r\n    return(\r\n            <Container style={{ marginTop: \"5em\" }}>{children}</Container>\r\n        );\r\n    }","import _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Icon,\r\n  Image,\r\n  Menu,\r\n  Sidebar,\r\n  Responsive\r\n} from \"semantic-ui-react\";\r\n\r\nexport default function NavBarDesktop ({ leftItems, rightItems }) {\r\n    return  (\r\n            <Menu fixed=\"top\" inverted>\r\n                {_.map(leftItems, item => <Menu.Item {...item} />)}\r\n                <Menu.Menu position=\"right\">\r\n                    {rightItems}\r\n                </Menu.Menu>\r\n            </Menu>\r\n        );\r\n    }","import _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Icon,\r\n  Image,\r\n  Menu,\r\n  Sidebar,\r\n  Responsive\r\n} from \"semantic-ui-react\";\r\n\r\nexport default function NavBarMobile ({\r\n    children,\r\n    leftItems,\r\n    onPusherClick,\r\n    onToggle,\r\n    rightItems,\r\n    visible\r\n}) { \r\n    return (\r\n        <Sidebar.Pushable>\r\n            <Sidebar\r\n                as={Menu}\r\n                animation=\"overlay\"\r\n                icon=\"labeled\"\r\n                inverted\r\n                vertical\r\n                visible={visible}\r\n            > \r\n                {_.map(leftItems, item => <Menu.Item {...item} />)}\r\n            </Sidebar>\r\n            <Sidebar.Pusher\r\n                dimmed={visible}\r\n                onClick={onPusherClick}\r\n                style={{ minHeight: \"100vh\" }}\r\n            >\r\n                <Menu fixed=\"top\" inverted>\r\n                    <Menu.Item onClick={onToggle}>\r\n                        <Icon name=\"sidebar\" />\r\n                    </Menu.Item>\r\n                    <Menu.Menu position=\"right\">\r\n                        {rightItems}\r\n                    </Menu.Menu>\r\n                </Menu>\r\n                {children}\r\n            </Sidebar.Pusher>\r\n        </Sidebar.Pushable>\r\n    );\r\n}","import _ from \"lodash\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Icon,\r\n  Image,\r\n  Menu,\r\n  Sidebar,\r\n  Responsive\r\n} from \"semantic-ui-react\";\r\n\r\nimport NavBarChildren from './NavBarChildren'\r\nimport NavBarDesktop from './NavBarDesktop'\r\nimport NavBarMobile from './NavbarMobile'\r\n\r\nexport default function NavBar({ children, leftItems, rightItems }) {\r\n    const [visible, setVisible] = useState(false)\r\n  \r\n    const handlePusher = () => {\r\n      if (visible) setVisible(false)\r\n    };\r\n  \r\n    const handleToggle = () => setVisible(!visible);\r\n  \r\n    console.log('visible :>> ', visible);\r\n\r\n    return (\r\n    <div>\r\n        <Responsive {...Responsive.onlyMobile}>\r\n            <NavBarMobile\r\n                leftItems={leftItems}\r\n                onPusherClick={handlePusher}\r\n                onToggle={handleToggle}\r\n                rightItems={rightItems}\r\n                visible={visible}\r\n            >\r\n                <NavBarChildren>{children}</NavBarChildren>\r\n            </NavBarMobile>\r\n        </Responsive>\r\n        <Responsive minWidth={Responsive.onlyTablet.minWidth}>\r\n            <NavBarDesktop leftItems={leftItems} rightItems={rightItems} />\r\n            <NavBarChildren>{children}</NavBarChildren>\r\n        </Responsive>\r\n    </div>\r\n    );\r\n  }","import React, {useEffect, useState} from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect, Link} from \"react-router-dom\"\r\nimport { Segment, Sidebar, Menu, Image, Icon  } from 'semantic-ui-react'\r\nimport SidebarMenu from './SidebarMenu'\r\nimport Library from './library/Library'\r\nimport Scouting from './scoutingInfo/ScoutingInfo'\r\nimport Masterclass from './masterclass/Masterclass'\r\nimport UserPanel from './UserPanel'\r\nimport Operation from './operation/Operation'\r\n//import '../assets/styles/App.scss'\r\nimport {autoupdateUserRequest} from '../redux/modules/users'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport NavBar from './navbar/NavBar'\r\nimport Login from './Login'\r\n\r\nexport default function App() {\r\n    const dispatch = useDispatch();\r\n    const token = localStorage.getItem('token');\r\n    const user = useSelector(state => state.users.user)\r\n    const [isOpenLogin, setOpenLogin] = useState(false);\r\n    console.log('user :>> ', user);\r\n    useEffect(() => {\r\n      dispatch(autoupdateUserRequest())\r\n    }, [token, user.id])\r\n\r\n    const leftItems = user.id ? [\r\n      { as: Link, to: \"/library\", content: \"База знаний\", key: \"library\", icon: 'book' },\r\n      { as: Link, to: \"/scouting\", content: \"Разведка\", key: \"scouting\", icon: 'user secret' },\r\n      { as: Link, to: \"/masterclass\", content: \"Мастерклассы\", key: \"masterclass\", icon: 'graduation cap' },\r\n      { as: Link, to: \"/operation\", content: \"Высадки\", key: \"operation\", icon: 'crosshairs' },\r\n      { as: Link, to: \"/operation/view\", content: \"Боевой интерфейс\", key: \"view\", icon: 'shield alternate' },\r\n    ] : [\r\n      { as: Link, to: \"/library\", content: \"База знаний\", key: \"library\", icon: 'book' },\r\n      { as: Link, to: \"/operation/view\", content: \"Боевой интерфейс\", key: \"view\", icon: 'shield alternate' },\r\n    ];\r\n    const rightItems = user.id ? [\r\n      <Menu.Item as={Link} to=\"/user\">\r\n            {user.photo !== '' ? <Image src={user.photo} avatar size=\"mini\"/> : <Icon name=\"user\"/>}\r\n            <p>  {user.name}</p>\r\n      </Menu.Item>\r\n    ] : [\r\n      <Login\r\n          isOpen={isOpenLogin}\r\n          setOpen={setOpenLogin}\r\n        />\r\n    ];\r\n\r\n    return (\r\n      <Router>\r\n        <NavBar leftItems={leftItems} rightItems={rightItems}>\r\n            <Segment style={({minHeight: '100%'})}>\r\n              <Switch>\r\n                <Route path=\"/library\">\r\n                  <Library />\r\n                </Route>\r\n                  <Route path=\"/scouting\">\r\n                      <Scouting/>\r\n                  </Route>\r\n                <Route path=\"/user\">\r\n                  <UserPanel />\r\n                </Route>\r\n                <Route path=\"/masterclass\">\r\n                  <Masterclass />\r\n                </Route>\r\n                <Route path=\"/operation\">\r\n                  <Operation />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Redirect to=\"/library\" />\r\n                </Route>\r\n              </Switch>\r\n            </Segment>\r\n        </NavBar>\r\n      </Router>\r\n    )\r\n}","export const API_HTTP = process.env.REACT_APP_API_HTTP || \"http://localhost:5000\"","import axios from 'axios';\r\n\r\nclass Api {\r\n  instance;\r\n\r\n  constructor(options = {}) {\r\n    this.instance = axios.create({\r\n      headers: {'X-Auth-Header': ''},\r\n      ...options,\r\n    });\r\n\r\n    this.instance.interceptors.response.use((response) => {\r\n      return response.data;\r\n    });\r\n  }\r\n\r\n  getInstance() {\r\n    return this.instance;\r\n  }\r\n}\r\n\r\nexport const api = new Api().getInstance();\r\n\r\nexport const createRequest = (payload) => {\r\n  const token = localStorage.getItem('token');\r\n  console.log('token :>> ', token);\r\n  return api({\r\n    ...payload,\r\n    headers: {\r\n      ...payload.headers,\r\n      'x-access-token': token || ''\r\n    }\r\n  });\r\n//   return Promise.resolve({\r\n//     data: [\r\n//     {\r\n//         \"infoId\": 1,\r\n//         \"name\": \"1\",\r\n//         \"data\": {\r\n//           'name': 'Коммандор',\r\n//           'description': '[ДАННЫЕ УДАЛЕНЫ]'\r\n//         },\r\n//         \"category\": \"PERSON\",\r\n//         \"photo\": null,\r\n//         \"status\": \"AVAILABLE\"\r\n//     },\r\n//     {\r\n//         \"infoId\": 2,\r\n//         \"name\": \"2\",\r\n//         \"data\": {'test': 'test'},\r\n//         \"category\": \"PERSON\",\r\n//         \"photo\": null,\r\n//         \"status\": \"AVAILABLE\"\r\n//     }\r\n// ]})\r\n};","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\n\r\nimport {\r\n  ActionTypesLibrary,\r\n  fetchLibraryFailure,\r\n  fetchLibrarySuccess, \r\n  fetchInfoFailure, \r\n  fetchInfoSuccess\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\nexport function* fetchLibraryWorker({type, params = {}}) { //first arg = action\r\n  const { _id } = params \r\n  let url = _id ? `${API_HTTP}/library/${_id}` : `${API_HTTP}/library`\r\n  if (params.type) {\r\n    url = url.concat(`?type=${params.type}`)\r\n  }\r\n  const request = {\r\n    method: 'get',\r\n    url\r\n  };\r\n\r\n  try {\r\n    const response = yield call(createRequest, request);\r\n    console.log('response :', response);\r\n    if (type === ActionTypesLibrary.FETCH_LIBRARY_REQUEST) {\r\n      yield put(fetchLibrarySuccess(response.map(info => ({...info, attachmentUrls: info.attachments && info.attachments.map( attach => `${API_HTTP}/${attach}`)}))));\r\n    } else {\r\n      yield put(fetchInfoSuccess({...response, attachmentUrls: response.attachments && response.attachments.map( attach => `${API_HTTP}/${attach}`)}));\r\n    }\r\n  } catch (e) {\r\n    if (type === ActionTypesLibrary.FETCH_LIBRARY_REQUEST) {\r\n      yield put(fetchLibraryFailure((e.response && e.response.data) || e));\r\n    } else {\r\n      yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* watchLibraryActionsSaga() {\r\n  yield all([\r\n    takeEvery(ActionTypesLibrary.FETCH_LIBRARY_REQUEST, fetchLibraryWorker),\r\n    takeEvery(ActionTypesLibrary.FETCH_INFO_REQUEST, fetchLibraryWorker)\r\n  ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n  ActionTypesUsers,\r\n  signUpUserSuccess,\r\n  signUpUserFailure, \r\n  signInUserSuccess, \r\n  signInUserFailure,\r\n  autoupdateUserSuccess,\r\n  autoupdateUserFailure,\r\n  fetchUserPageSuccess,\r\n  fetchUserPageFailure\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\nexport function* singUpUserWorker({type, userInfo = {}}) {\r\n    const url = `${API_HTTP}/auth/signup`;\r\n    const request = {\r\n        method: 'post',\r\n        url,\r\n        data: {...userInfo}\r\n    };\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :>> ', response);\r\n        yield put(signUpUserSuccess(response))\r\n    } catch (e) {;\r\n        yield put(signUpUserFailure((e.response && e.response.data) || e));\r\n    }\r\n}\r\n\r\nexport function* singInUserWorker({type, userInfo = {}}) {\r\n  const url = `${API_HTTP}/auth/signin`;\r\n  const request = {\r\n      method: 'post',\r\n      url,\r\n      data: {...userInfo}\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(signInUserSuccess(response))\r\n  } catch (e) {;\r\n      yield put(signInUserFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* autoupdateUserWorker({type}) {\r\n  const url = `${API_HTTP}/auth/autoupdate`;\r\n  const request = {\r\n      method: 'post',\r\n      url\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(autoupdateUserSuccess(response))\r\n  } catch (e) {;\r\n      yield put(autoupdateUserFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* fetchUserPageWorker({type, userId}) {\r\n  try {\r\n    const examRequest = {\r\n        method: 'get',\r\n        url: `${API_HTTP}/exam/user/${userId}`\r\n    };\r\n    const exams = yield call(createRequest, examRequest);\r\n    console.log('exams :>> ', exams);\r\n    const operationsRequest = {\r\n        method: 'get',\r\n        url: `${API_HTTP}/operation/user/${userId}`\r\n    };\r\n    const operations = yield call(createRequest, operationsRequest);\r\n    console.log('operations :>> ', operations);\r\n    yield put(fetchUserPageSuccess({exams, operations}))\r\n  } catch (e) {\r\n    yield put(fetchUserPageFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* watchUsersActionsSaga() {\r\n  yield all([\r\n    takeEvery(ActionTypesUsers.SIGN_UP_USER_REQUEST, singUpUserWorker),\r\n    takeEvery(ActionTypesUsers.SIGN_IN_USER_REQUEST, singInUserWorker),\r\n    takeEvery(ActionTypesUsers.AUTOUPDATE_USER_REQUEST, autoupdateUserWorker),\r\n    takeEvery(ActionTypesUsers.FETCH_USER_PAGE_REQUEST, fetchUserPageWorker)\r\n  ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n  ActionTypesMasterclass,\r\n  fetchMasterclassFailure,\r\n  fetchMasterclassSuccess, \r\n  fetchInfoFailure, \r\n  fetchInfoSuccess,\r\n  registerMasterclassSuccess,\r\n  registerMasterclassFailure\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\nexport function* fetchMasterclassWorker({type, params = {}}) { //first arg = action\r\n  const { _id } = params \r\n  let url = _id ? `${API_HTTP}/masterclass/${_id}` : `${API_HTTP}/masterclass/mapped`\r\n  if (params.type) {\r\n    url = url.concat(`?type=${params.type}`)\r\n  }\r\n  const request = {\r\n    method: 'get',\r\n    url\r\n  };\r\n\r\n  try {\r\n    const response = yield call(createRequest, request);\r\n    console.log('response :', response);\r\n    if (type === ActionTypesMasterclass.FETCH_MASTERCLASS_REQUEST) {\r\n      yield put(fetchMasterclassSuccess(response));\r\n    } else {\r\n      yield put(fetchInfoSuccess(response));\r\n    }\r\n  } catch (e) {\r\n    if (type === ActionTypesMasterclass.FETCH_MASTERCLASS_REQUEST) {\r\n      yield put(fetchMasterclassFailure((e.response && e.response.data) || e));\r\n    } else {\r\n      yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* registerMasterclassWorker({type, params = {}}) {\r\n  const { _id } = params \r\n  const url = `${API_HTTP}/masterclass/${_id}/register`;\r\n  const request = {\r\n      method: 'post',\r\n      url\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(registerMasterclassSuccess(response))\r\n  } catch (e) {\r\n    yield put(registerMasterclassFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* watchMasterclassActionsSaga() {\r\n  yield all([\r\n    takeEvery(ActionTypesMasterclass.FETCH_MASTERCLASS_REQUEST, fetchMasterclassWorker),\r\n    takeEvery(ActionTypesMasterclass.FETCH_INFO_REQUEST, fetchMasterclassWorker),\r\n    takeEvery(ActionTypesMasterclass.REGISTER_MASTERCLASS_REQUEST, registerMasterclassWorker)\r\n  ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n  ActionTypesOperation,\r\n  fetchOperationFailure,\r\n  fetchOperationSuccess, \r\n  fetchInfoFailure, \r\n  fetchInfoSuccess,\r\n  registerOperationSuccess,\r\n  registerOperationFailure,\r\n  fetchOperationViewFailure,\r\n  fetchOperationViewSuccess, \r\n  activateUserSuccess,\r\n  activateUserFailure,\r\n  killUserSuccess,\r\n  killUserFailure\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\nexport function* fetchOperationWorker({type, params = {}}) { //first arg = action\r\n  const { _id } = params \r\n  let url = _id ? `${API_HTTP}/operation/${_id}` : `${API_HTTP}/operation`\r\n  if (params.type) {\r\n    url = url.concat(`?type=${params.type}`)\r\n  }\r\n  const request = {\r\n    method: 'get',\r\n    url\r\n  };\r\n\r\n  try {\r\n    const response = yield call(createRequest, request);\r\n    console.log('response :', response);\r\n    if (type === ActionTypesOperation.FETCH_OPERATION_REQUEST) {\r\n      yield put(fetchOperationSuccess(response));\r\n    } else {\r\n      yield put(fetchInfoSuccess(\r\n        {\r\n          ...response,\r\n          photo: `${API_HTTP}/images/${response.photo}`,\r\n          users: response.users\r\n        }\r\n      ));\r\n    }\r\n  } catch (e) {\r\n    if (type === ActionTypesOperation.FETCH_OPERATION_REQUEST) {\r\n      yield put(fetchOperationFailure((e.response && e.response.data) || e));\r\n    } else {\r\n      yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* registerOperationWorker({type, params = {}}) {\r\n  const { _id } = params \r\n  const url = `${API_HTTP}/operation/${_id}/register`;\r\n  const request = {\r\n      method: 'post',\r\n      url\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(registerOperationSuccess(\r\n        {\r\n          ...response,\r\n          photo: `${API_HTTP}/images/${response.photo}`,\r\n          users: response.users\r\n        }\r\n      ))\r\n  } catch (e) {\r\n    yield put(registerOperationFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* fetchOperationViewWorker({type, params = {}}) {\r\n  const url = `${API_HTTP}/operation/view`;\r\n  const request = {\r\n      method: 'get',\r\n      url\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(fetchOperationViewSuccess(\r\n        response.map(\r\n          operation => ({\r\n            ...operation,\r\n            users: operation.users.map( user => ({...user, gifUrl: `${API_HTTP}/gifs/${user.gif}`}))\r\n          })\r\n        )\r\n      ))\r\n  } catch (e) {\r\n    yield put(fetchOperationViewFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* activateUserWorker({type, params = {}}) {\r\n  const { _id, opId } = params \r\n  if ( _id) {\r\n    yield put(activateUserSuccess())\r\n  } else {\r\n    const url = `${API_HTTP}/user/activateOperation/${opId}`\r\n    const request = {\r\n      method: 'get',\r\n      url\r\n    };\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :>> ', response);\r\n        yield put(activateUserSuccess())\r\n    } catch (e) {\r\n      yield put(activateUserFailure((e.response && e.response.data) || e));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* killUserWorker({type, params = {}}) {\r\n  const { _id } = params \r\n  if ( _id) {\r\n    const url = `${API_HTTP}/user/${_id}/kill`\r\n    const request = {\r\n      method: 'get',\r\n      url\r\n    };\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :>> ', response);\r\n        yield put(killUserSuccess())\r\n    } catch (e) {\r\n      yield put(killUserFailure((e.response && e.response.data) || e));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* watchOperationActionsSaga() {\r\n  yield all([\r\n    takeEvery(ActionTypesOperation.FETCH_OPERATION_REQUEST, fetchOperationWorker),\r\n    takeEvery(ActionTypesOperation.FETCH_INFO_REQUEST, fetchOperationWorker),\r\n    takeEvery(ActionTypesOperation.REGISTER_OPERATION_REQUEST, registerOperationWorker),\r\n    takeEvery(ActionTypesOperation.FETCH_OPERATION_VIEW_REQUEST, fetchOperationViewWorker),\r\n    takeEvery(ActionTypesOperation.ACTIVATE_USER_REQUEST, activateUserWorker),\r\n    takeEvery(ActionTypesOperation.KILL_USER_REQUEST, killUserWorker)\r\n  ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n    ActionTypesScoutingInfo,\r\n    fetchScoutingInfoFailure,\r\n    fetchScoutingInfoSuccess,\r\n    fetchInfoFailure,\r\n    fetchInfoSuccess\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\n\r\nexport function* fetchScoutingInfoWorker({type, params = {}}) { //first arg = action\r\n    const { _id } = params\r\n    let url = _id ? `${API_HTTP}/scoutingInfo/${_id}` : `${API_HTTP}/scoutingInfo`\r\n    if (params.type) {\r\n        url = url.concat(`?type=${params.type}`)\r\n    }\r\n    const request = {\r\n        method: 'get',\r\n        url\r\n    };\r\n\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :', response);\r\n        if (type === ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_REQUEST) {\r\n            yield put(fetchScoutingInfoSuccess(response.map(info => ({...info, photo: `${API_HTTP}/images/${info.photo}`}))));\r\n        } else {\r\n            yield put(fetchInfoSuccess({...response, photo: `${API_HTTP}/images/${response.photo}`}));\r\n        }\r\n    } catch (e) {\r\n        if (type === ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_REQUEST) {\r\n            yield put(fetchScoutingInfoFailure((e.response && e.response.data) || e));\r\n        } else {\r\n            yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n        }\r\n    }\r\n}\r\n\r\nexport function* watchScoutingInfoActionsSaga() {\r\n    yield all([\r\n        takeEvery(ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_REQUEST, fetchScoutingInfoWorker),\r\n        takeEvery(ActionTypesScoutingInfo.FETCH_INFO_REQUEST, fetchScoutingInfoWorker)\r\n    ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n    ActionTypesScoutingRequest,\r\n    fetchScoutingRequestFailure,\r\n    fetchScoutingRequestSuccess,\r\n    fetchInfoFailure,\r\n    fetchInfoSuccess,\r\n    registerScoutingRequestSuccess,\r\n    registerScoutingRequestFailure\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\nimport {ActionTypesMasterclass, registerMasterclassFailure, registerMasterclassSuccess} from \"../masterclass\";\r\nimport {registerMasterclassWorker} from \"../masterclass/saga\";\r\n\r\n\r\nexport function* fetchScoutingRequestWorker({type, params = {}}) { //first arg = action\r\n    const { _id } = params\r\n    let url = _id ? `${API_HTTP}/scoutingRequest/${_id}` : `${API_HTTP}/scoutingRequest`\r\n    if (params.type) {\r\n        url = url.concat(`?type=${params.type}`)\r\n    }\r\n    const request = {\r\n        method: 'get',\r\n        url\r\n    };\r\n\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :', response);\r\n        if (type === ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_REQUEST) {\r\n            yield put(fetchScoutingRequestSuccess(response.map(info => ({...info, photo: `${API_HTTP}/images/${info.photo}`}))));\r\n        } else {\r\n            yield put(fetchInfoSuccess({...response, photo: `${API_HTTP}/images/${response.photo}`}));\r\n        }\r\n    } catch (e) {\r\n        if (type === ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_REQUEST) {\r\n            yield put(fetchScoutingRequestFailure((e.response && e.response.data) || e));\r\n        } else {\r\n            yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n        }\r\n    }\r\n}\r\n\r\nexport function* registerScoutingRequestWorker({type, params = {}}) {\r\n    const { requestObject, place, task } = params\r\n    const url = `${API_HTTP}/scoutingRequest`;\r\n    const data = {requestObject, place, task}\r\n    const request = {\r\n        method: 'post',\r\n        url,\r\n        data\r\n    };\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :>> ', response);\r\n        yield put(registerScoutingRequestSuccess(response))\r\n    } catch (e) {\r\n        yield put(registerScoutingRequestFailure((e.response && e.response.data) || e));\r\n    }\r\n}\r\n\r\nexport function* watchScoutingRequestActionsSaga() {\r\n    yield all([\r\n        takeEvery(ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_REQUEST, fetchScoutingRequestWorker),\r\n        takeEvery(ActionTypesScoutingRequest.FETCH_INFO_REQUEST, fetchScoutingRequestWorker),\r\n        takeEvery(ActionTypesScoutingRequest.REGISTER_SCOUTINGREQUEST_REQUEST, registerScoutingRequestWorker)\r\n    ]);\r\n}","import * as sagas from \"./sagas\";\r\n\r\nexport const initSagas = sagaMiddleware => {\r\n  return Object.values(sagas).forEach(sagaMiddleware.run.bind(sagaMiddleware));\r\n};","import {createStore, applyMiddleware, compose, combineReducers} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport library from './modules/library';\r\nimport scoutingInfo from './modules/scoutingInfo'\r\nimport scoutingRequest from './modules/scoutingRequest'\r\nimport users from './modules/users';\r\nimport masterclass from './modules/masterclass';\r\nimport operation from './modules/operation';\r\nimport {initSagas} from './initSagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleWares = [sagaMiddleware];\r\nconst enhancer = composeWithDevTools(applyMiddleware(...middleWares));\r\n\r\nexport default function configureStore() {\r\n  const rootReducer = combineReducers({\r\n    library,\r\n    scoutingInfo,\r\n    scoutingRequest,\r\n    masterclass,\r\n    operation,\r\n    users\r\n  });\r\n  const store = compose(\r\n    enhancer\r\n  )(createStore)(rootReducer);\r\n  initSagas(sagaMiddleware);\r\n\r\n  return store;\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport {Provider} from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport 'semantic-ui-less/semantic.less'\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nconst store = configureStore()\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}