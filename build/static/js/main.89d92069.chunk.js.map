{"version":3,"sources":["assets/img/plus.svg","assets/img/eye.svg","redux/modules/users/index.js","components/Login.js","components/SidebarMenu.js","redux/modules/library/index.js","components/library/Info.js","components/library/InfoPanel.js","components/library/Library.js","redux/modules/scoutingInfo/index.js","components/scoutingInfo/Info.js","components/scoutingInfo/Request.js","redux/modules/masterclass/index.js","redux/modules/scoutingRequest/index.js","components/scoutingInfo/RequestPopUp.js","components/scoutingInfo/InfoPanel.js","components/scoutingInfo/ScoutingInfo.js","components/masterclass/MCTab.js","components/masterclass/Info.js","components/masterclass/InfoPanel.js","components/masterclass/Masterclass.js","components/UserPanel.js","redux/modules/operation/index.js","components/operation/Info.js","components/operation/InfoPanel.js","components/operation/ViewCard.js","components/operation/View.js","components/operation/Operation.js","components/App.js","configs/environment.js","redux/rootSagas.js","redux/modules/library/saga.js","redux/modules/users/saga.js","redux/modules/masterclass/saga.js","redux/modules/operation/saga.js","redux/modules/scoutingInfo/saga.js","redux/modules/scoutingRequest/saga.js","redux/initSagas.js","redux/configureStore.js","index.js"],"names":["module","exports","ActionTypesUsers","initialUserState","loggedIn","user","message","reducer","state","action","type","payload","accessToken","localStorage","setItem","JSON","stringify","failure","text","error","clear","page","Login","isOpen","setOpen","useState","username","setUsername","password","setPassword","dispatch","useDispatch","useSelector","users","messageBlock","Message","positive","negative","Header","login","userInfo","Modal","open","onClose","onOpen","trigger","Menu","Item","Icon","name","Content","Form","size","Field","placeholder","onChange","e","target","value","Actions","Button","content","color","onClick","preventDefault","labelPosition","icon","SidebarMenu","isOpenLogin","setOpenLogin","console","log","Sidebar","as","animation","direction","inverted","vertical","visible","width","className","id","Link","to","photo","Image","src","photoUrl","avatar","ActionTypesLibrary","initialLibraryState","list","info","fetchInfoSuccess","fetchInfoFailure","Info","infoRows","Object","entries","data","map","key","card","Card","eye","style","marginBottom","Meta","category","Description","List","filter","item","index","image","wrapped","InfoPanel","library","useEffect","cards","Loader","active","length","Group","stackable","Library","attached","exact","path","ActionTypesScoutingInfo","initialScoutingInfoState","Request","requestObject","place","task","Progress","percent","indicating","ActionTypesMasterclass","initialMasterclassState","ActionTypesScoutingRequest","initialScoutingRequestState","RequestPopUp","setRequestObject","setPlace","setTask","isButtonDisabled","plus","textAlign","disabled","params","scoutingInfo","scoutingRequest","isNewRequestOpen","setNewRequestOpen","cardsInfo","cardsRequest","panes","menuItem","render","Tab","Pane","loading","ScoutingInfo","MCTab","mc","masterclass","students","max_students","findIndex","stud","mcRows","student","Table","Row","Cell","Subheader","group","HeaderCell","Body","mcs","activeTab","setActiveTab","first","firstRows","time","Date","date","toTimeString","slice","menu","fluid","tabular","onTabChange","d","activeIndex","_id","Masterclass","UserPanel","history","useHistory","userId","exams","operations","examsRows","ex","success","indexOf","Label","operationsRows","op","all_points","points","Grid","columns","Column","computer","mobile","rounded","floated","Segment","Rating","rating","lives","maxRating","level","experience","total","progress","celled","stretched","push","ActionTypesOperation","initialOperationState","view","registerOperationFailure","fetchOperationViewRequest","activateUserRequest","activateUserSuccess","operation","isUserRegistred","usr","isButtonRegisterDisabled","isButtonActivateDisabled","moment","isBetween","subtract","max_users","roles","opId","manager","ViewCard","userCards","alive","gifUrl","ui","itemsPerRow","centered","View","shallowEqual","openedOperation","setOpenedOperation","interval","setInterval","clearInterval","undefined","Operation","App","token","getItem","Pushable","Pusher","minHeight","API_HTTP","process","api","options","this","instance","axios","create","headers","interceptors","response","use","getInstance","createRequest","fetchLibraryWorker","watchLibraryActionsSaga","url","concat","request","method","call","put","all","takeEvery","singUpUserWorker","singInUserWorker","autoupdateUserWorker","fetchUserPageWorker","watchUsersActionsSaga","examRequest","operationsRequest","fetchMasterclassWorker","registerMasterclassWorker","watchMasterclassActionsSaga","fromEntries","fetchOperationWorker","registerOperationWorker","fetchOperationViewWorker","activateUserWorker","watchOperationActionsSaga","gif","fetchScoutingInfoWorker","watchScoutingInfoActionsSaga","fetchScoutingRequestWorker","registerScoutingRequestWorker","watchScoutingRequestActionsSaga","sagaMiddleware","createSagaMiddleware","middleWares","enhancer","composeWithDevTools","applyMiddleware","store","rootReducer","combineReducers","compose","createStore","values","sagas","forEach","run","bind","configureStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.89d92069.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus.8a0de07c.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye.fe2c1e75.svg\";","export const ActionTypesUsers = {\r\n    SIGN_UP_USER_REQUEST: 'users/SIGN_UP_USER_REQUEST',\r\n    SIGN_UP_USER_SUCCESS: 'users/SIGN_UP_USER_SUCCESS',\r\n    SIGN_UP_USER_FAILURE: 'users/SIGN_UP_USER_FAILURE',\r\n\r\n    SIGN_IN_USER_REQUEST: 'users/SIGN_IN_USER_REQUEST',\r\n    SIGN_IN_USER_SUCCESS: 'users/SIGN_IN_USER_SUCCESS',\r\n    SIGN_IN_USER_FAILURE: 'users/SIGN_IN_USER_FAILURE',\r\n//autoupdate\r\n    AUTOUPDATE_USER_REQUEST: 'users/AUTOUPDATE_USER_REQUEST',\r\n    AUTOUPDATE_USER_SUCCESS: 'users/AUTOUPDATE_USER_SUCCESS',\r\n    AUTOUPDATE_USER_FAILURE: 'users/AUTOUPDATE_USER_FAILURE',\r\n\r\n    SIGN_OUT_USER_REQUEST: 'users/SIGN_OUT_USER_REQUEST',\r\n\r\n    FETCH_USER_PAGE_REQUEST: 'users/FETCH_USER_PAGE_REQUEST',\r\n    FETCH_USER_PAGE_SUCCESS: 'users/FETCH_USER_PAGE_SUCCESS',\r\n    FETCH_USER_PAGE_FAILURE: 'users/FETCH_USER_PAGE_FAILURE',\r\n};\r\n\r\nexport const initialUserState = {\r\n    loggedIn: false,\r\n    user: {},\r\n    message: {}\r\n};\r\n\r\nexport default function reducer(\r\n    state = initialUserState,\r\n    action\r\n) {\r\n    switch (action.type) {\r\n        //TODO: add sign_up with msg or err\r\n        case ActionTypesUsers.SIGN_IN_USER_SUCCESS:\r\n          const {accessToken, ...user} = action.payload;\r\n          localStorage.setItem(\"user\", JSON.stringify(user))\r\n          localStorage.setItem(\"token\", accessToken)\r\n          return {\r\n            loggedIn: true,\r\n            user,\r\n            message: {}\r\n          }\r\n        case ActionTypesUsers.SIGN_IN_USER_FAILURE: \r\n          return {\r\n            loggedIn: false,\r\n            user: {},\r\n            message: { failure: true, text: action.error.message}\r\n        }\r\n        case ActionTypesUsers.SIGN_OUT_USER_REQUEST:\r\n          localStorage.clear()\r\n          return {\r\n            loggedIn: false,\r\n            user: {},\r\n            message: {}\r\n        }\r\n        case ActionTypesUsers.AUTOUPDATE_USER_SUCCESS:\r\n          return {\r\n            loggedIn: false,\r\n            user: action.payload,\r\n            message: {}\r\n          }\r\n        case ActionTypesUsers.AUTOUPDATE_USER_FAILURE:\r\n          return {\r\n            loggedIn: false,\r\n            user: {},\r\n            message: { failure: true, text: action.error.message}\r\n          }\r\n\r\n        case ActionTypesUsers.FETCH_USER_PAGE_SUCCESS:\r\n          return {\r\n            ...state,\r\n            page: action.payload,\r\n            message: {}\r\n          }\r\n        case ActionTypesUsers.FETCH_USER_PAGE_FAILURE:\r\n          return {\r\n            ...state,\r\n            error: action.error,\r\n            message: { failure: true, text: action.error.message}\r\n          }\r\n        \r\n        default: \r\n          return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const signUpUserRequest = (userInfo) => ({\r\n  type: ActionTypesUsers.SIGN_UP_USER_REQUEST,\r\n  userInfo\r\n})\r\nexport const signUpUserSuccess = (payload) => ({\r\n  type: ActionTypesUsers.SIGN_UP_USER_SUCCESS,\r\n  payload\r\n})\r\nexport const signUpUserFailure = (error) => ({\r\n  type: ActionTypesUsers.SIGN_UP_USER_FAILURE,\r\n  error\r\n})\r\n\r\nexport const signInUserRequest = (userInfo) => ({\r\n  type: ActionTypesUsers.SIGN_IN_USER_REQUEST,\r\n  userInfo\r\n})\r\nexport const signInUserSuccess = (payload) => ({\r\n  type: ActionTypesUsers.SIGN_IN_USER_SUCCESS,\r\n  payload\r\n})\r\nexport const signInUserFailure = (error) => ({\r\n  type: ActionTypesUsers.SIGN_IN_USER_FAILURE,\r\n  error\r\n})\r\n\r\nexport const autoupdateUserRequest = () => ({\r\n  type: ActionTypesUsers.AUTOUPDATE_USER_REQUEST\r\n})\r\nexport const autoupdateUserSuccess = (payload) => ({\r\n  type: ActionTypesUsers.AUTOUPDATE_USER_SUCCESS,\r\n  payload\r\n})\r\nexport const autoupdateUserFailure = (error) => ({\r\n  type: ActionTypesUsers.AUTOUPDATE_USER_FAILURE,\r\n  error\r\n})\r\n\r\nexport const signOutUserRequest = () => ({\r\n  type: ActionTypesUsers.SIGN_OUT_USER_REQUEST\r\n})\r\n\r\nexport const fetchUserPageRequest = (userId) => ({\r\n  type: ActionTypesUsers.FETCH_USER_PAGE_REQUEST,\r\n  userId\r\n})\r\nexport const fetchUserPageSuccess = (payload) => ({\r\n  type: ActionTypesUsers.FETCH_USER_PAGE_SUCCESS,\r\n  payload\r\n})\r\nexport const fetchUserPageFailure = (error) => ({\r\n  type: ActionTypesUsers.FETCH_USER_PAGE_FAILURE,\r\n  error\r\n})","import React, {useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {signInUserRequest} from '../redux/modules/users';\r\nimport { Message, Button, Form, Modal, Menu, Icon } from 'semantic-ui-react'\r\n\r\nexport default function Login({isOpen, setOpen}) {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n    const message = useSelector(state => state.users.message)\r\n    const messageBlock = <Message positive={!message.failure} negative={message.failure}><Message.Header>{message.text}</Message.Header></Message>\r\n\r\n    const login = () => {\r\n      dispatch(signInUserRequest({ username, password }));\r\n    }\r\n\r\n    return (\r\n        <Modal \r\n          open={isOpen}\r\n          onClose={() => setOpen(false)}\r\n          onOpen={() => setOpen(true)}\r\n          trigger={\r\n            <Menu.Item>\r\n              <Icon name='user circle' />\r\n              Войти в базу\r\n            </Menu.Item>\r\n          }\r\n        >\r\n            <Modal.Header>\r\n                Вход в Базу\r\n            </Modal.Header>\r\n            <Modal.Content>\r\n                <Form\r\n                  size=\"small\"\r\n                >\r\n                    <Form.Field>\r\n                        <label>Имя пользователя</label>\r\n                        <input \r\n                        placeholder='username'\r\n                        onChange={(e) => {setUsername(e.target.value)}}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Пароль</label>\r\n                        <input \r\n                        placeholder='password'\r\n                        type=\"password\"\r\n                        onChange={(e) => {setPassword(e.target.value)}}/>\r\n                    </Form.Field>\r\n                </Form>\r\n                {message && message.text && message.text !== '' ? messageBlock : <></>}\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                  content=\"Отмена\"\r\n                  color='black'\r\n                  onClick={(e) => {e.preventDefault(); setOpen(false)}}\r\n                />\r\n                <Button \r\n                  content=\"Войти\"\r\n                  labelPosition='right'\r\n                  icon='checkmark'\r\n                  onClick={(e) => {e.preventDefault(); login(); }}\r\n                  positive\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Sidebar, Menu, Icon, Image } from 'semantic-ui-react'\r\nimport Login from './Login'\r\n\r\nexport default function SidebarMenu () {\r\n  const [isOpenLogin, setOpenLogin] = useState(false);\r\n  //const user = JSON.parse(localStorage.getItem('user'));\r\n  const user = useSelector(state => state.users.user)\r\n  console.log('user :>> ', user);\r\n    return ( \r\n      <Sidebar\r\n          as={Menu}\r\n          animation='push'\r\n          direction='left'\r\n          icon='labeled'\r\n          inverted\r\n          vertical\r\n          visible={true}\r\n          width='thin'\r\n          className=\"leftSidebar\"\r\n      >\r\n        { user.id ? <Menu.Item as={Link} to=\"/user\">\r\n            {user.photo !== '' ? <Image src={user.photoUrl} avatar size=\"mini\"/> : <Icon name=\"user\"/>}\r\n            <p> {user.name}</p>\r\n          </Menu.Item> : <Login\r\n          isOpen={isOpenLogin}\r\n          setOpen={setOpenLogin}\r\n        />}\r\n          <Menu.Item as={Link} to=\"/library\">\r\n              <Icon name='book' />\r\n              База знаний\r\n          </Menu.Item>\r\n          { user.id ? (\r\n            <>\r\n              <Menu.Item as={Link} to=\"/scouting\">\r\n                  <Icon name='user secret'/>\r\n                  Разведка\r\n              </Menu.Item>\r\n              <Menu.Item as={Link} to=\"/masterclass\">\r\n                  <Icon name='graduation cap' /> \r\n                  Мастерклассы\r\n              </Menu.Item> \r\n              <Menu.Item as={Link} to=\"/operation\">\r\n                  <Icon name='crosshairs' />\r\n                  Высадки\r\n              </Menu.Item>\r\n            </>\r\n          ) : <></>}\r\n          <Menu.Item as={Link} to=\"/operation/view\">\r\n              <Icon name='shield alternate' />\r\n              Боевой интерфейс\r\n          </Menu.Item>\r\n      </Sidebar>\r\n    )\r\n}","import {ActionTypesUsers} from '../users'\r\n\r\nexport const ActionTypesLibrary = {\r\n    FETCH_LIBRARY_REQUEST: 'library/FETCH_LIBRARY_REQUEST',\r\n    FETCH_LIBRARY_SUCCESS: 'library/FETCH_LIBRARY_SUCCESS',\r\n    FETCH_LIBRARY_FAILURE: 'library/FETCH_LIBRARY_FAILURE',\r\n    FETCH_INFO_REQUEST: 'library/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'library/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'library/FETCH_INFO_FAILURE'\r\n  };\r\n  \r\n  export const initialLibraryState = {\r\n    list: [],\r\n    info: {}\r\n  };\r\n  \r\n  export default function reducer(\r\n    state = initialLibraryState,\r\n    action\r\n  ) {\r\n    switch (action.type) {\r\n  \r\n      case ActionTypesLibrary.FETCH_LIBRARY_SUCCESS:\r\n        return {\r\n          ...state,\r\n          list: action.payload\r\n        };\r\n  \r\n      case ActionTypesLibrary.FETCH_LIBRARY_FAILURE:\r\n        return {\r\n          ...state,\r\n          error: action.error\r\n        };\r\n\r\n      case ActionTypesLibrary.FETCH_INFO_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload\r\n        };\r\n\r\n      case ActionTypesLibrary.FETCH_INFO_FAILURE:\r\n        return {\r\n          ...state,\r\n          error: action.error\r\n        };\r\n\r\n      case ActionTypesUsers.SIGN_OUT_USER_REQUEST:\r\n        return {\r\n          ...initialLibraryState\r\n        }\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  // Action Creators\r\n  export const fetchLibraryRequest = () => ({\r\n    type: ActionTypesLibrary.FETCH_LIBRARY_REQUEST\r\n  });\r\n  \r\n  export const fetchLibrarySuccess = (payload) => ({\r\n    type: ActionTypesLibrary.FETCH_LIBRARY_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchLibraryFailure = (error) => ({\r\n    type: ActionTypesLibrary.FETCH_LIBRARY_FAILURE,\r\n    error\r\n  });\r\n\r\n  export const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesLibrary.FETCH_INFO_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesLibrary.FETCH_INFO_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesLibrary.FETCH_INFO_FAILURE,\r\n    error\r\n  });","import React, {useState} from 'react'\r\nimport { Button, Image, Modal, Card, List } from 'semantic-ui-react'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function Info ({info}) {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const infoRows = Object.entries(info.data || {}).map(([key, value]) => <p key={key}>{`${key}: ${value}`}</p>);\r\n    \r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={info.photo ? `${info.photoUrl}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{info.name}</Card.Header>\r\n                <Card.Meta>{info.category}</Card.Meta>\r\n                <Card.Description>\r\n                  <List>\r\n                    {infoRows.filter((item, index) => index < 3)}\r\n                  </List>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n\r\n    return (\r\n        <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={card}\r\n        >\r\n            <Modal.Header>{info.name}</Modal.Header>\r\n            <Modal.Content image>\r\n                <Image size='medium' src={info.photo ? `${info.photoUrl}` : eye} wrapped />\r\n                <Modal.Description>\r\n                    {infoRows}\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    \r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport {fetchLibraryRequest} from '../../redux/modules/library'\r\nimport {Card, Loader} from 'semantic-ui-react'\r\nimport Info from './Info'\r\n\r\nexport default function InfoPanel () {\r\n    const dispatch = useDispatch()\r\n    const library = useSelector(state => state.library.list) || []\r\n    const error = useSelector(state => state.library.error)\r\n    \r\n    useEffect(\r\n        () => {dispatch(fetchLibraryRequest())},\r\n        []\r\n    )\r\n    console.log('library :', library);\r\n    console.log('error :', error);\r\n\r\n    const cards = library.map(info => {\r\n        return (\r\n            <Info info={info}/>\r\n        )\r\n    });\r\n    return (\r\n        <>\r\n            <Loader active={library.length === 0}/>\r\n            <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                {cards}\r\n            </Card.Group>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Route } from \"react-router-dom\";\r\nimport { Header } from 'semantic-ui-react'\r\nimport InfoPanel from './InfoPanel'\r\nimport './Library.scss'\r\n\r\nexport default function Library() {\r\n    //TODO: make header dynamic (should show path using breadcrumbs)\r\n    return (\r\n        <div className=\"container\">\r\n            <Header as='h2' attached='top'>\r\n                База знаний\r\n            </Header>\r\n            <Route exact path=\"/library\">\r\n                <InfoPanel/>\r\n            </Route>\r\n        </div>\r\n    )\r\n}","export const ActionTypesScoutingInfo = {\r\n    FETCH_SCOUTINGINFO_REQUEST: 'scoutingInfo/FETCH_scoutingInfo_REQUEST',\r\n    FETCH_SCOUTINGINFO_SUCCESS: 'scoutingInfo/FETCH_scoutingInfo_SUCCESS',\r\n    FETCH_SCOUTINGINFO_FAILURE: 'scoutingInfo/FETCH_scoutingInfo_FAILURE',\r\n    FETCH_INFO_REQUEST: 'scoutingInfo/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'scoutingInfo/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'scoutingInfo/FETCH_INFO_FAILURE'\r\n};\r\n\r\nexport const initialScoutingInfoState = {\r\n    list: [],\r\n    info: {}\r\n};\r\n\r\nexport default function reducer(\r\n    state = initialScoutingInfoState,\r\n    action\r\n) {\r\n    switch (action.type) {\r\n\r\n        case ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list: action.payload\r\n            };\r\n\r\n        case ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n\r\n        case ActionTypesScoutingInfo.FETCH_INFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                info: action.payload\r\n            };\r\n\r\n        case ActionTypesScoutingInfo.FETCH_INFO_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const fetchScoutingInfoRequest = () => ({\r\n    type: ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_REQUEST\r\n});\r\n\r\nexport const fetchScoutingInfoSuccess = (payload) => ({\r\n    type: ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const fetchScoutingInfoFailure = (error) => ({\r\n    type: ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_FAILURE,\r\n    error\r\n});\r\n\r\nexport const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesScoutingInfo.FETCH_INFO_REQUEST,\r\n    params\r\n});\r\n\r\nexport const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesScoutingInfo.FETCH_INFO_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesScoutingInfo.FETCH_INFO_FAILURE,\r\n    error\r\n});","import React, {useState} from 'react'\r\nimport { Button, Image, Modal, Card, List } from 'semantic-ui-react'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function Info ({info}) {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const infoRows = Object.entries(info.data || {}).map(([key, value]) => <p key={key}>{`${key}: ${value}`}</p>);\r\n    \r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={info.photo ? `${info.photoUrl}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{info.name}</Card.Header>\r\n                <Card.Meta>{info.category}</Card.Meta>\r\n                <Card.Description>\r\n                  <List>\r\n                    {infoRows.filter((item, index) => index < 3)}\r\n                  </List>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n\r\n    return (\r\n        <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={card}\r\n        >\r\n            <Modal.Header>{info.name}</Modal.Header>\r\n            <Modal.Content image>\r\n                <Image size='medium' src={info.photo ? `${info.photoUrl}` : eye} wrapped />\r\n                <Modal.Description>\r\n                    {infoRows}\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    \r\n    )\r\n}","import React, {useState} from 'react'\r\nimport { Button, Image, Modal, Card, List, Progress } from 'semantic-ui-react'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function Request ({info}) {\r\n    const [open, setOpen] = useState(false)\r\n    //const startMill = (info.startDate && info.startDate.getMilliseconds()) || 0\r\n    //const nowMill = (info.dueDate && Date.now().getMilliseconds() - startMill) || 10\r\n    //const endMill = (info.dueDate && info.bueDate.getMilliseconds() - startMill) || 100\r\n    //const percent = nowMill/endMill*100\r\n    const percent = 10\r\n/*\r\n* name: String,\r\n    level: Number,\r\n    requestBy: {\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'User'\r\n    },\r\n    requestObject: String,\r\n    place: String,\r\n    task: String\r\n* */\r\n\r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={info.photo ? `${info.photoUrl}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{info.name}</Card.Header>\r\n                <Card.Meta>{info.category}</Card.Meta>\r\n                <Card.Description>\r\n                    <List>\r\n                        <p>Обект: {info.requestObject}</p>\r\n                        <p>Место: {info.place}</p>\r\n                        <p>Задача: {info.task}</p>\r\n                    </List>\r\n                </Card.Description>\r\n                <Progress percent={percent} indicating />\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n\r\n    return (\r\n        <Modal\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={card}\r\n        >\r\n            <Modal.Header>{info.name}</Modal.Header>\r\n            <Modal.Content image>\r\n                <Image size='medium' src={info.photo ? `${info.photoUrl}` : eye} wrapped />\r\n                <Modal.Description>\r\n                    <p>Обект: {info.requestObject}</p>\r\n                    <p>Место: {info.place}</p>\r\n                    <p>Задача: {info.task}</p>\r\n                    <Progress percent={percent} indicating />\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n\r\n    )\r\n}","import {ActionTypesUsers} from '../users'\r\n\r\nexport const ActionTypesMasterclass = {\r\n    FETCH_MASTERCLASS_REQUEST: 'masterclass/FETCH_MASTERCLASS_REQUEST',\r\n    FETCH_MASTERCLASS_SUCCESS: 'masterclass/FETCH_MASTERCLASS_SUCCESS',\r\n    FETCH_MASTERCLASS_FAILURE: 'masterclass/FETCH_MASTERCLASS_FAILURE',\r\n    FETCH_INFO_REQUEST: 'masterclass/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'masterclass/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'masterclass/FETCH_INFO_FAILURE',\r\n    REGISTER_MASTERCLASS_REQUEST: 'masterclass/REGISTER_MASTERCLASS_REQUEST',\r\n    REGISTER_MASTERCLASS_SUCCESS: 'masterclass/REGISTER_MASTERCLASS_SUCCESS',\r\n    REGISTER_MASTERCLASS_FAILURE: 'masterclass/REGISTER_MASTERCLASS_FAILURE'\r\n\r\n  };\r\n  \r\n  export const initialMasterclassState = {\r\n    list: {},\r\n    info: {},\r\n    message: {}\r\n  };\r\n  \r\n  export default function reducer(\r\n    state = initialMasterclassState,\r\n    action\r\n  ) {\r\n    switch (action.type) {\r\n  \r\n      case ActionTypesMasterclass.FETCH_MASTERCLASS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          list: action.payload,\r\n          message: {}\r\n        };\r\n      case ActionTypesMasterclass.FETCH_MASTERCLASS_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        };\r\n\r\n      case ActionTypesMasterclass.FETCH_INFO_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload,\r\n          message: {}\r\n        };\r\n      case ActionTypesMasterclass.FETCH_INFO_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        };\r\n\r\n      case ActionTypesMasterclass.REGISTER_MASTERCLASS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload,\r\n          message: { failure: false, text: 'Вы успешно записисались на мастеркласс!' }\r\n        }\r\n      case ActionTypesMasterclass.REGISTER_MASTERCLASS_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n\r\n      case ActionTypesUsers.SIGN_OUT_USER_REQUEST:\r\n        return {\r\n          ...initialMasterclassState\r\n        }\r\n    \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  // Action Creators\r\n  export const fetchMasterclassRequest = () => ({\r\n    type: ActionTypesMasterclass.FETCH_MASTERCLASS_REQUEST\r\n  });\r\n  \r\n  export const fetchMasterclassSuccess = (payload) => ({\r\n    type: ActionTypesMasterclass.FETCH_MASTERCLASS_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchMasterclassFailure = (error) => ({\r\n    type: ActionTypesMasterclass.FETCH_MASTERCLASS_FAILURE,\r\n    error\r\n  });\r\n\r\n  export const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesMasterclass.FETCH_INFO_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesMasterclass.FETCH_INFO_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesMasterclass.FETCH_INFO_FAILURE,\r\n    error\r\n  });\r\n  \r\n  export const registerMasterclassRequest = (params) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const registerMasterclassSuccess = (payload) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const registerMasterclassFailure = (error) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_FAILURE,\r\n    error\r\n  });","import {ActionTypesMasterclass} from \"../masterclass\";\r\n\r\nexport const ActionTypesScoutingRequest = {\r\n    FETCH_SCOUTINGREQUEST_REQUEST: 'scoutingRequest/FETCH_scoutingRequest_REQUEST',\r\n    FETCH_SCOUTINGREQUEST_SUCCESS: 'scoutingRequest/FETCH_scoutingRequest_SUCCESS',\r\n    FETCH_SCOUTINGREQUEST_FAILURE: 'scoutingRequest/FETCH_scoutingRequest_FAILURE',\r\n    FETCH_INFO_REQUEST: 'scoutingRequest/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'scoutingRequest/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'scoutingRequest/FETCH_INFO_FAILURE',\r\n    REGISTER_SCOUTINGREQUEST_REQUEST: 'scoutingRequest/REGISTER_SCOUTINGREQUEST_REQUEST',\r\n    REGISTER_SCOUTINGREQUEST_SUCCESS: 'scoutingRequest/REGISTER_SCOUTINGREQUEST_SUCCESS',\r\n    REGISTER_SCOUTINGREQUEST_FAILURE: 'scoutingRequest/REGISTER_SCOUTINGREQUEST_FAILURE'\r\n};\r\n\r\nexport const initialScoutingRequestState = {\r\n    list: [],\r\n    info: {}\r\n};\r\n\r\nexport default function reducer(\r\n    state = initialScoutingRequestState,\r\n    action\r\n) {\r\n    switch (action.type) {\r\n\r\n        case ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list: action.payload\r\n            };\r\n\r\n        case ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n\r\n        case ActionTypesScoutingRequest.FETCH_INFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                info: action.payload\r\n            };\r\n\r\n        case ActionTypesScoutingRequest.FETCH_INFO_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const fetchScoutingRequestRequest = () => ({\r\n    type: ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_REQUEST\r\n});\r\n\r\nexport const fetchScoutingRequestSuccess = (payload) => ({\r\n    type: ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const fetchScoutingRequestFailure = (error) => ({\r\n    type: ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_FAILURE,\r\n    error\r\n});\r\n\r\nexport const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesScoutingRequest.FETCH_INFO_REQUEST,\r\n    params\r\n});\r\n\r\nexport const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesScoutingRequest.FETCH_INFO_SUCCESS,\r\n    payload\r\n});\r\nexport const registerScoutingRequestRequest = (params) => ({\r\n    type: ActionTypesScoutingRequest.REGISTER_SCOUTINGREQUEST_REQUEST,\r\n    params\r\n});\r\nexport const registerScoutingRequestSuccess = (payload) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const registerScoutingRequestFailure = (error) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_FAILURE,\r\n    error\r\n});\r\n\r\nexport const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesScoutingRequest.FETCH_INFO_FAILURE,\r\n    error\r\n});","import React, {useState} from 'react'\r\nimport {Header, Button, Form, Modal, Card, Image} from 'semantic-ui-react'\r\nimport plus from \"../../assets/img/plus.svg\";\r\nimport {registerScoutingRequestRequest} from '../../redux/modules/scoutingRequest';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport default function RequestPopUp({ isOpen, setOpen, info}) {\r\n    const [requestObject, setRequestObject] = useState('');\r\n    const [place, setPlace] = useState('');\r\n    const [task, setTask] = useState('');\r\n    const dispatch = useDispatch()\r\n    const isButtonDisabled = requestObject === '' || place === '' || task === ''\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            trigger={\r\n                <Card>\r\n                    <Card.Content>\r\n                        <Image\r\n                            src={plus}\r\n                            style={{marginBottom: '1rem'}}\r\n                        />\r\n                        <Header textAlign='center'>Сделать запрос</Header>\r\n                    </Card.Content>\r\n                </Card>\r\n            }\r\n        >\r\n            <Modal.Header>\r\n                Новый запрос\r\n            </Modal.Header>\r\n            <Modal.Content>\r\n                <Form\r\n                    size=\"small\"\r\n                >\r\n                    <Form.Field>\r\n                        <label>Объект запроса</label>\r\n                        <input\r\n                            placeholder='requestObject'\r\n                            onChange={(e) => {setRequestObject(e.target.value)}}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Место</label>\r\n                        <input\r\n                            placeholder='place'\r\n                            onChange={(e) => {setPlace(e.target.value)}}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Задача</label>\r\n                        <input\r\n                            placeholder='task'\r\n                            onChange={(e) => {setTask(e.target.value)}}/>\r\n                    </Form.Field>\r\n                </Form>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    content=\"Отмена\"\r\n                    color='black'\r\n                    onClick={(e) => {e.preventDefault(); setOpen(false)}}\r\n                />\r\n                <Button\r\n                    content=\"Отправить запрос\"\r\n                    labelPosition='right'\r\n                    icon='checkmark'\r\n                    positive\r\n                    disabled={isButtonDisabled}\r\n                    onClick={() => dispatch(registerScoutingRequestRequest({\r\n                        requestObject,\r\n                        place,\r\n                        task\r\n                    }))}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n//onClick={() => dispatch(registerMasterclassRequest({_id: info._id}))}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport {fetchScoutingInfoRequest} from '../../redux/modules/scoutingInfo'\r\nimport {Card, Image, Loader, Tab, Header, Form} from 'semantic-ui-react'\r\nimport Info from './Info'\r\nimport Request from './Request'\r\nimport {fetchScoutingRequestRequest} from \"../../redux/modules/scoutingRequest\";\r\nimport RequestPopUp from \"./RequestPopUp\";\r\n\r\nexport default function InfoPanel () {\r\n    const dispatch = useDispatch()\r\n    const scoutingInfo = useSelector(state => state.scoutingInfo.list) || []\r\n    const scoutingRequest = useSelector(state => state.scoutingRequest.list) || []\r\n    const error = useSelector(state => state.scoutingInfo.error)\r\n    const [isNewRequestOpen, setNewRequestOpen] = useState(false)\r\n    \r\n    useEffect(\r\n        () => {\r\n            dispatch(fetchScoutingInfoRequest())\r\n            dispatch(fetchScoutingRequestRequest())\r\n            console.log('FETCH, MOTHRTFUCKER!')\r\n        },\r\n        []\r\n    )\r\n    console.log('scoutingInfo :', scoutingInfo);\r\n    console.log('scoutingRequest :', scoutingRequest);\r\n    console.log('error :', error);\r\n\r\n    const cardsInfo = scoutingInfo.map(info => {\r\n        return (\r\n            <Info info={info}/>\r\n        )\r\n    });\r\n\r\n    const newRequestCard = (\r\n        <RequestPopUp\r\n        isOpen={isNewRequestOpen}\r\n        setOpen={setNewRequestOpen}\r\n        />\r\n    )\r\n    const cardsRequest = [\r\n        newRequestCard,\r\n        ...scoutingRequest.map(info => {\r\n            return (\r\n              <Request info={info}/>\r\n            )\r\n        })\r\n    ]\r\n\r\n    const panes = [\r\n        {\r\n            menuItem: { key: 'Доступная информация', icon: 'users', content: 'Доступная информация' },\r\n            render: () => <Tab.Pane>\r\n                    <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                        {cardsInfo}\r\n                    </Card.Group>\r\n            </Tab.Pane>,\r\n\r\n        },\r\n        {\r\n            menuItem: { key: 'Запросы на разведку', icon: 'users', content: 'Запросы на разведку' },\r\n            render: () => <Tab.Pane>\r\n                <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                    {cardsRequest}\r\n                </Card.Group>\r\n            </Tab.Pane>,\r\n        }\r\n]\r\n    return  <Tab loading={scoutingInfo.length === 0} panes={panes} />\r\n}","import React from 'react'\r\nimport { Route } from \"react-router-dom\";\r\nimport { Header } from 'semantic-ui-react'\r\nimport InfoPanel from './InfoPanel'\r\nimport './Scouting.scss'\r\n\r\nexport default function ScoutingInfo() {\r\n    //TODO: make header dynamic (should show path using breadcrumbs)\r\n    return (\r\n        <div className=\"container\">\r\n            <Header as='h2' attached='top'>\r\n                Информация\r\n            </Header>\r\n            <Route exact path=\"/scouting\">\r\n                <InfoPanel/>\r\n            </Route>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport { Button, Header, Image, Modal, Table, Icon, Message, Card, List, Tab } from 'semantic-ui-react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {registerMasterclassRequest} from '../../redux/modules/masterclass'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function MCTab ({mc}) {\r\n    const message = useSelector(state => state.masterclass.message)\r\n    const user = useSelector(state => state.users.user)\r\n    const isButtonDisabled = mc.students && ((mc.students.length >= mc.max_students) || (mc.students.findIndex(stud => stud.id === user.id) !== -1));\r\n    const messageBlock = <Message positive={!message.failure} negative={message.failure}><Message.Header>{message.text}</Message.Header></Message>\r\n    const mcRows = Object.entries(mc.data || {}).map(([key, value]) => <p key={key}>{`${key}: ${value}`}</p>);\r\n    const students = mc.students ? mc.students.map(\r\n        student => (\r\n          <Table.Row key={student.username}>\r\n            <Table.Cell>\r\n              <Header as='h4' image>\r\n                {student.photo && student.photo !== '' ?\r\n                  <Image src={student.photoUrl} avatar size='mini' /> :\r\n                  <Icon name=\"user\" size=\"mini\"/>\r\n                }\r\n                <Header.Content>\r\n                  {student.name}\r\n                  <Header.Subheader>{student.group}</Header.Subheader>\r\n                </Header.Content>\r\n              </Header>\r\n            </Table.Cell>\r\n          </Table.Row>)\r\n    ) : [];\r\n\r\n\r\n    return (\r\n          <Tab.Pane>\r\n            <Modal.Description>\r\n              <p>Количество человек: {(mc.students && mc.students.length) || 0}/{mc.max_students}</p>\r\n              {mcRows}\r\n              <Table size=\"large\">\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Записавшиеся наблюдатели</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                  {students}\r\n                </Table.Body>\r\n              </Table>\r\n              {message && message.text && message.text !== '' ? messageBlock : <></>}\r\n            </Modal.Description>\r\n          </Tab.Pane>\r\n        ) \r\n} ","import React, {useState} from 'react'\r\nimport { Button, Header, Image, Modal, Table, Icon, Message, Card, List, Tab } from 'semantic-ui-react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {registerMasterclassRequest} from '../../redux/modules/masterclass'\r\nimport eye from '../../assets/img/eye.svg'\r\nimport MCTab from './MCTab'\r\n\r\nexport default function Info ({mcs, name}) {\r\n    const [open, setOpen] = useState(false)\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const dispatch = useDispatch()\r\n\r\n    const first = mcs[0]\r\n    const firstRows = Object.entries(first.data || {}).map(([key, value]) => <p key={key}>{`${key}: ${value}`}</p>);\r\n\r\n    const panes = mcs.map(mc => {\r\n        const date = new Date(mc.date)\r\n        const time = date.toTimeString()\r\n        console.log('time :>> ', time);\r\n        return {\r\n            menuItem: time.slice(0,5),\r\n            render: () => (<MCTab mc={mc}/>)\r\n        }\r\n    })\r\n    \r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={first.photo ? `${first.photoUrl}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{first.name}</Card.Header>\r\n                <Card.Meta>{first.category}</Card.Meta>\r\n                <Card.Description>\r\n                  <List>\r\n                    <List.Item>\r\n                      <List.Icon name=\"users\"/>\r\n                      <List.Content>\r\n                          Количество занятий: {mcs.length}\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    {firstRows.filter((item, index) => index < 2)}\r\n                  </List>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n\r\n    return (\r\n        <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={card}\r\n        >\r\n            <Modal.Header>{first.name}</Modal.Header>\r\n            <Modal.Content image>\r\n                <Image size='medium' src={first.photo ? `${first.photoUrl}` : eye} wrapped />\r\n                <Tab  \r\n                  menu={{ fluid: true, vertical: true, tabular: 'right' }}\r\n                  panes={panes}\r\n                  onTabChange={(e,d,index) => {\r\n                      console.log('e :>> ', e);\r\n                      console.log('d :>> ', d);\r\n                      console.log('index :>> ', index);\r\n                      setActiveTab(d.activeIndex)\r\n                  }}\r\n                />\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n                <Button \r\n                    content=\"Записаться\" \r\n                    labelPosition='right'\r\n                    icon='checkmark'\r\n                    positive\r\n                    onClick={() => dispatch(registerMasterclassRequest({_id: mcs[activeTab]._id}))}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    \r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport {fetchMasterclassRequest} from '../../redux/modules/masterclass'\r\nimport { Card, Loader } from 'semantic-ui-react'\r\nimport Info from './Info'\r\n\r\nfunction InfoPanel() {\r\n    const dispatch = useDispatch()\r\n    const masterclass = useSelector(state => state.masterclass.list) || []\r\n    const error = useSelector(state => state.masterclass.error)\r\n    \r\n    useEffect(\r\n        () => {dispatch(fetchMasterclassRequest())},\r\n        []\r\n    )\r\n    console.log('masterclass :', masterclass);\r\n    console.log('error :', error);\r\n\r\n    const cards = Object.entries(masterclass).map(([name, mcs]) => {\r\n        return (\r\n            <Info key={name} mcs={mcs} name={name}/>\r\n        )\r\n    })\r\n    // const cards = masterclass.map(info => {\r\n    //     return (\r\n    //         <Info key={info && info.id} info={info}/>\r\n    //     )\r\n    // });\r\n    return (\r\n        <>\r\n            <Loader active={masterclass.length === 0}/>\r\n            <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                {cards}\r\n            </Card.Group>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoPanel\r\n","import React from 'react'\r\nimport { Route } from \"react-router-dom\"\r\nimport { Header } from 'semantic-ui-react'\r\nimport InfoPanel from './InfoPanel'\r\nimport './Masterclass.scss'\r\n\r\nexport default function Masterclass() {\r\n    //TODO: make header dynamic (should show path using breadcrumbs)\r\n    return (\r\n        <div className=\"container\">\r\n            <Header as='h2' attached='top'>\r\n                Мастерклассы\r\n            </Header>\r\n            <Route exact path=\"/masterclass\">\r\n                <InfoPanel/>\r\n            </Route>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport eye from '../assets/img/eye.svg'\r\nimport { signOutUserRequest, fetchUserPageRequest } from '../redux/modules/users'\r\nimport { useHistory  } from 'react-router-dom';\r\nimport { \r\n    Header, Image, Button, \r\n    Progress, Grid, Segment, \r\n    Rating, Table, Label,\r\n    Icon\r\n} from 'semantic-ui-react'\r\n\r\nexport default function UserPanel() {\r\n    const dispatch = useDispatch()\r\n    let history = useHistory();\r\n    const user = useSelector(state => state.users.user)\r\n    console.log('user :>> ', user);\r\n    useEffect(\r\n        () => {dispatch(fetchUserPageRequest(user.id))},\r\n        [user]\r\n    )\r\n    const {exams = [], operations = []} = useSelector(state => state.users.page) || {}\r\n    console.log('exams :>> ', exams);\r\n    const examsRows = exams.map(ex => {\r\n        const success = ex.students && ex.students.indexOf(user.id) !== -1\r\n        return (\r\n            <Table.Row key={ex._id} negative={!success} positive={success}>\r\n                <Table.Cell>\r\n                    <Label >{ex.name}</Label>\r\n                </Table.Cell>\r\n                <Table.Cell>{success ? (<Icon name='checkmark'/>) : (<Icon name='close'/>)}</Table.Cell>\r\n            </Table.Row>\r\n        )\r\n    })\r\n    console.log('operations :>> ', operations);\r\n    const operationsRows = operations.map(op => (\r\n        <Table.Row key={op._id} negative={!op.success} positive={op.success}>\r\n            <Table.Cell>\r\n                <Label >{op.name}</Label>\r\n            </Table.Cell>\r\n            <Table.Cell>{op.success ? (<Icon name='checkmark'/>) : (<Icon name='close'/>)}</Table.Cell>\r\n            <Table.Cell>{op.all_points}</Table.Cell>\r\n            <Table.Cell>\r\n                {op.points && op.points[user.id] ? op.points[user.id] : 0}\r\n            </Table.Cell>\r\n        </Table.Row>\r\n    ))\r\n    return (\r\n        <Grid>\r\n            <Grid.Row columns={2}>\r\n                <Grid.Column computer={6} mobile={16}>\r\n                    <Image\r\n                        rounded={true}\r\n                        size=\"medium\"\r\n                        floated=\"left\"\r\n                        src={user.photo && user.photo !== '' ? user.photoUrl : eye}\r\n                    />\r\n                </Grid.Column>\r\n                <Grid.Column computer={10} mobile={16}>\r\n                    <Segment size=\"massive\">\r\n                        <Header>Имя : {user.name}</Header>\r\n                        <p>Боевая группа: {user.group}</p>\r\n                        <p>Жизни: <Rating icon='heart' rating={user.lives || 0} maxRating={10} disabled={true}/></p>\r\n                        <p>Уровень: <Rating icon='star' rating={user.level} maxRating={3} disabled={true}/></p>\r\n                        <Progress \r\n                            value={user.experience} \r\n                            total={user.level * 50} \r\n                            progress='ratio' \r\n                            indicating\r\n                        />\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <Segment >\r\n                        <Header>Высадки</Header>\r\n                        <Table celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Успех</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Всего баллов</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Получено баллов</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>\r\n                                {operationsRows}\r\n                            </Table.Body>\r\n                        </Table>\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <Segment>\r\n                    <Header>Экзамены</Header>\r\n                        <Table celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Успех</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>\r\n                                {examsRows}\r\n                            </Table.Body>\r\n                        </Table>\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column floated=\"right\" stretched={false} width={2}>\r\n                    <Button\r\n                        content=\"Выйти\"\r\n                        color='black'\r\n                        onClick={(e) => {\r\n                            e.preventDefault()\r\n                            dispatch(signOutUserRequest())\r\n                            history.push('/')\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>)\r\n}","import {ActionTypesUsers} from '../users'\r\n\r\nexport const ActionTypesOperation = {\r\n    FETCH_OPERATION_REQUEST: 'operation/FETCH_OPERATION_REQUEST',\r\n    FETCH_OPERATION_SUCCESS: 'operation/FETCH_OPERATION_SUCCESS',\r\n    FETCH_OPERATION_FAILURE: 'operation/FETCH_OPERATION_FAILURE',\r\n    FETCH_INFO_REQUEST: 'operation/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'operation/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'operation/FETCH_INFO_FAILURE',\r\n    REGISTER_OPERATION_REQUEST: 'operation/REGISTER_OPERATION_REQUEST',\r\n    REGISTER_OPERATION_SUCCESS: 'operation/REGISTER_OPERATION_SUCCESS',\r\n    REGISTER_OPERATION_FAILURE: 'operation/REGISTER_OPERATION_FAILURE',\r\n    FETCH_OPERATION_VIEW_REQUEST: 'operation/FETCH_OPERATION_VIEW_REQUEST',\r\n    FETCH_OPERATION_VIEW_SUCCESS: 'operation/FETCH_OPERATION_VIEW_SUCCESS',\r\n    FETCH_OPERATION_VIEW_FAILURE: 'operation/FETCH_OPERATION_VIEW_FAILURE',\r\n    ACTIVATE_USER_REQUEST: 'operation/ACTIVATE_USER_REQUEST',\r\n    ACTIVATE_USER_SUCCESS: 'operation/ACTIVATE_USER_SUCCESS',\r\n    ACTIVATE_USER_FAILURE: 'operation/ACTIVATE_USER_FAILURE',\r\n  };\r\n  \r\n  export const initialOperationState = {\r\n    list: [],\r\n    info: {},\r\n    message: {},\r\n    view: []\r\n  };\r\n  \r\n  export default function reducer(\r\n    state = initialOperationState,\r\n    action\r\n  ) {\r\n    console.log('action :>> ', action);\r\n    switch (action.type) {\r\n  \r\n      case ActionTypesOperation.FETCH_OPERATION_SUCCESS:\r\n        return {\r\n          ...state,\r\n          list: action.payload,\r\n          message: {}\r\n        }\r\n      case ActionTypesOperation.FETCH_OPERATION_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n\r\n      case ActionTypesOperation.FETCH_INFO_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload,\r\n          message: {}\r\n        }\r\n      case ActionTypesOperation.FETCH_INFO_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n\r\n      case ActionTypesOperation.REGISTER_OPERATION_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload,\r\n          message: { failure: false, text: 'Вы успешно записисались на высадку!' }\r\n        }\r\n      case ActionTypesOperation.REGISTER_OPERATION_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n  \r\n      case ActionTypesOperation.FETCH_OPERATION_VIEW_SUCCESS:\r\n        return {\r\n          ...state,\r\n          view: action.payload,\r\n          message: {}\r\n        }\r\n      case ActionTypesOperation.FETCH_OPERATION_VIEW_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n\r\n      case ActionTypesOperation.ACTIVATE_USER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          message: { failure: false, text: 'Вы успешно активировались!' }\r\n        }\r\n      case ActionTypesOperation.ACTIVATE_USER_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n      \r\n      case ActionTypesUsers.SIGN_OUT_USER_REQUEST:\r\n        return {\r\n          ...initialOperationState\r\n        }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  // Action Creators\r\n  export const fetchOperationRequest = () => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_REQUEST\r\n  });\r\n  \r\n  export const fetchOperationSuccess = (payload) => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchOperationFailure = (error) => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_FAILURE,\r\n    error\r\n  });\r\n\r\n  export const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesOperation.FETCH_INFO_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesOperation.FETCH_INFO_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesOperation.FETCH_INFO_FAILURE,\r\n    error\r\n  });\r\n  \r\n  export const registerOperationRequest = (params) => ({\r\n    type: ActionTypesOperation.REGISTER_OPERATION_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const registerOperationSuccess = (payload) => ({\r\n    type: ActionTypesOperation.REGISTER_OPERATION_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const registerOperationFailure = (error) => ({\r\n    type: ActionTypesOperation.REGISTER_OPERATION_FAILURE,\r\n    error\r\n  });\r\n\r\n  \r\n  export const fetchOperationViewRequest = () => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_VIEW_REQUEST\r\n  });\r\n  \r\n  export const fetchOperationViewSuccess = (payload) => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_VIEW_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchOperationViewFailure = (error) => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_VIEW_FAILURE,\r\n    error\r\n  });\r\n  \r\n  export const activateUserRequest = (params) => ({\r\n    type: ActionTypesOperation.ACTIVATE_USER_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const activateUserSuccess = () => ({\r\n    type: ActionTypesOperation.ACTIVATE_USER_SUCCESS\r\n  });\r\n  \r\n  export const activateUserFailure = (error) => ({\r\n    type: ActionTypesOperation.ACTIVATE_USER_FAILURE,\r\n    error\r\n  });","import React, {useState} from 'react'\r\nimport { Button, Header, Image, Modal, Container, Table, Icon, Message, Card, List } from 'semantic-ui-react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {registerOperationRequest, activateUserRequest} from '../../redux/modules/operation'\r\nimport eye from '../../assets/img/eye.svg'\r\nimport moment from 'moment'\r\n\r\nexport default function Info ({info}) {\r\n    const [open, setOpen] = useState(false)\r\n    const message = useSelector(state => state.operation.message)\r\n    const user = useSelector(state => state.users.user)\r\n    console.log('user :>> ', user);\r\n    const dispatch = useDispatch()\r\n\r\n    const isUserRegistred = info.users && info.users.findIndex(usr => usr._id === user.id) !== -1\r\n    const isButtonRegisterDisabled = isUserRegistred;\r\n    const isButtonActivateDisabled = !(moment().isBetween(moment(info.date).subtract(15, 'minutes'), moment(info.date)))\r\n    const messageBlock = <Message positive={!message.failure} negative={message.failure}><Message.Header>{message.text}</Message.Header></Message>\r\n    const infoRows = Object.entries(info.data || {}).map(([key, value]) => <p key={key}>{`${key}: ${value}`}</p>);\r\n    const users = info.users ? info.users.map(\r\n        user => (\r\n          <Table.Row key={user.username}>\r\n            <Table.Cell>\r\n              <Header as='h4' image>\r\n                {user.photo && user.photo !== '' ?\r\n                  <Image src={user.photoUrl} avatar size='mini' /> :\r\n                  <Icon name=\"user\" size=\"mini\"/>\r\n                }\r\n                <Header.Content>\r\n                  {user.name}\r\n                  <Header.Subheader>{user.group}</Header.Subheader>\r\n                </Header.Content>\r\n              </Header>\r\n            </Table.Cell>\r\n          </Table.Row>)\r\n    ) : [];\r\n    \r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={info.photo ? `${info.photoUrl}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{info.name}</Card.Header>\r\n                <Card.Meta>{info.category}</Card.Meta>\r\n                <Card.Description>\r\n                  <List>\r\n                    <List.Item>\r\n                      <List.Icon name=\"users\"/>\r\n                      <List.Content>\r\n                          Количество заявок: {info.users.length}/{info.max_users}\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    {infoRows.filter((item, index) => index < 2)}\r\n                  </List>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n\r\n    return (\r\n        <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={card}\r\n        >\r\n            <Modal.Header>\r\n              {info.name}\r\n              { user.roles && user.roles.indexOf('ROLE_ADMIN') !== -1 ? (\r\n                <Button\r\n                  floated=\"right\"\r\n                  content=\"Активировать всех\"\r\n                  labelPosition='right'\r\n                  icon='crosshairs'\r\n                  color='red'\r\n                  onClick={() => dispatch(activateUserRequest({opId: info._id }))}\r\n                />\r\n              ): <></>}\r\n            </Modal.Header>\r\n            <Modal.Content image>\r\n                <Image size='medium' src={info.photo ? `${info.photoUrl}` : eye} wrapped />\r\n                <Modal.Description>\r\n                  <Table size=\"large\">\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Старший наблюдатель</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                      <Header as='h4' image>\r\n                        {info.manager.photo && info.manager.photo !== '' ?\r\n                          <Image src={info.manager.photoUrl} avatar size='mini' /> :\r\n                          <Icon name=\"user\" size=\"mini\"/>\r\n                        }\r\n                        <Header.Content>\r\n                          {info.manager.name}\r\n                          <Header.Subheader>{info.manager.group}</Header.Subheader>\r\n                        </Header.Content>\r\n                      </Header>\r\n                    </Table.Body>\r\n                  </Table>\r\n                  <p>Количество заявок: {(info.users && info.users.length) || 0}/{info.max_users}</p>\r\n                  {infoRows}\r\n                  <Table size=\"large\">\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Записавшиеся наблюдатели</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {users}\r\n                    </Table.Body>\r\n                  </Table>\r\n                  {message && message.text && message.text !== '' ? messageBlock : <></>}\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n                { isUserRegistred ? (\r\n                  <Button\r\n                      content=\"Активировать\"\r\n                      labelPosition='right'\r\n                      icon='crosshairs'\r\n                      color='blue'\r\n                      disabled={isButtonActivateDisabled}\r\n                      onClick={() => dispatch(activateUserRequest({_id: info._id}))}\r\n                />) : (\r\n                  <Button \r\n                    content=\"Записаться\" \r\n                    labelPosition='right'\r\n                    icon='checkmark'\r\n                    positive\r\n                    disabled={isButtonRegisterDisabled}\r\n                    onClick={() => dispatch(registerOperationRequest({_id: info._id}))}\r\n                />\r\n                  )\r\n                }\r\n                \r\n            </Modal.Actions>\r\n        </Modal>\r\n    \r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport {fetchOperationRequest} from '../../redux/modules/operation'\r\nimport { Card, Loader, Header } from 'semantic-ui-react'\r\nimport Info from './Info'\r\n\r\nfunction InfoPanel() {\r\n    const dispatch = useDispatch()\r\n    const operation = useSelector(state => state.operation.list) || []\r\n    const error = useSelector(state => state.operation.error)\r\n    \r\n    useEffect(\r\n        () => {dispatch(fetchOperationRequest())},\r\n        []\r\n    )\r\n    console.log('operation :', operation);\r\n    console.log('error :', error);\r\n\r\n    const cards = operation.map(info => {\r\n        return (\r\n            <Info info={info}/>\r\n        )\r\n    });\r\n    return (\r\n        <>\r\n            <Header as='h2' attached='top'>\r\n                Высадки\r\n            </Header>\r\n            <Loader active={operation.length === 0}/>\r\n            <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                {cards}\r\n            </Card.Group>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoPanel\r\n","import React from 'react'\r\nimport { Card, Header, Image, Modal, Button } from 'semantic-ui-react'\r\n\r\nexport default function ViewCard ({operation, open, setOpen}) {\r\n    const userCards = operation.users.filter(user => user.active).map(user => (\r\n        <Card\r\n          key={user._id}\r\n          className={`watcherCard ${user.alive ? 'alive' : 'dead'}`}\r\n        >\r\n            <Image src={user.gifUrl} wrapped ui={false} />\r\n            <Card.Content>\r\n                <Header as='h5'>{user.name}</Header>    \r\n            </Card.Content>\r\n        </Card>\r\n    ))\r\n    return (\r\n        <Modal\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            size='fullscreen'\r\n            trigger={\r\n            <div className=\"viewCard\">\r\n                <Header as='h4'>{operation.name}</Header>\r\n                <Card.Group\r\n                  itemsPerRow={5}\r\n                  centered\r\n                >\r\n                    {userCards}\r\n                </Card.Group>\r\n            </div>}\r\n        >\r\n        <Modal.Header>{operation.name}</Modal.Header>\r\n        <Modal.Content image>\r\n          <Card.Group\r\n            centered\r\n            itemsPerRow={6}\r\n          >\r\n            {userCards}\r\n          </Card.Group>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color='black' onClick={() => setOpen(false)}>\r\n            Закрыть\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n        \r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport {fetchOperationViewRequest} from '../../redux/modules/operation'\r\nimport { Grid, Loader} from 'semantic-ui-react'\r\nimport ViewCard from './ViewCard'\r\n\r\nexport default function View () {\r\n    const dispatch = useDispatch();\r\n    const view = useSelector(state => state.operation.view, shallowEqual) || []\r\n    const [openedOperation, setOpenedOperation] = useState()\r\n\r\n    useEffect(\r\n        () => {\r\n            dispatch(fetchOperationViewRequest())\r\n            const interval = setInterval(\r\n              () => dispatch(fetchOperationViewRequest()),\r\n              10000\r\n            );\r\n            return () => clearInterval(interval);\r\n        },\r\n        []\r\n    )\r\n    \r\n    const columns = view.map((operation, index) => (\r\n        \r\n        <Grid.Column key={operation._id} className=\"viewColumn\">\r\n            <ViewCard \r\n              operation={operation}\r\n              open={openedOperation === index}\r\n              setOpen={(open) => {setOpenedOperation(open ? index : undefined)}}\r\n            />\r\n        </Grid.Column>\r\n    ))\r\n    // const rows = [];\r\n    // for (let i = 0; i < columns.length / 2; i++) {\r\n    //     rows.push(<Grid.Row>\r\n    //         {columns[i*2]}\r\n    //         {columns[i*2+1]}\r\n    //     </Grid.Row>)\r\n    // }\r\n    return (\r\n        <>\r\n            <Loader active={view.length === 0}/>\r\n            <Grid columns={2} stackable>\r\n                {columns}\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Route } from \"react-router-dom\"\r\nimport { Header } from 'semantic-ui-react'\r\nimport InfoPanel from './InfoPanel'\r\nimport View from './View'\r\nimport './Operation.scss'\r\n\r\nexport default function Operation() {\r\n    //TODO: make header dynamic (should show path using breadcrumbs)\r\n    return (\r\n        <div className=\"container\">\r\n            <Route exact path=\"/operation/view\">\r\n                <View/>\r\n            </Route>\r\n            <Route exact path=\"/operation\">\r\n                <InfoPanel/>\r\n            </Route>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\r\nimport { Segment, Sidebar } from 'semantic-ui-react'\r\nimport SidebarMenu from './SidebarMenu'\r\nimport Library from './library/Library'\r\nimport Scouting from './scoutingInfo/ScoutingInfo'\r\nimport Masterclass from './masterclass/Masterclass'\r\nimport UserPanel from './UserPanel'\r\nimport Operation from './operation/Operation'\r\nimport '../assets/styles/App.scss'\r\nimport {autoupdateUserRequest} from '../redux/modules/users'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n\r\nexport default function App() {\r\n    const dispatch = useDispatch();\r\n    const token = localStorage.getItem('token');\r\n    const user = useSelector(state => state.users.user)\r\n    console.log('user :>> ', user);\r\n    useEffect(() => {\r\n      dispatch(autoupdateUserRequest())\r\n    }, [token, user.id])\r\n    return (\r\n      <Router>\r\n        <Sidebar.Pushable>\r\n          <SidebarMenu/>\r\n          <Sidebar.Pusher>\r\n            <Segment style={({minHeight: '100%'})}>\r\n              <Switch>\r\n                <Route path=\"/library\">\r\n                  <Library />\r\n                </Route>\r\n                  <Route path=\"/scouting\">\r\n                      <Scouting/>\r\n                  </Route>\r\n                <Route path=\"/user\">\r\n                  <UserPanel />\r\n                </Route>\r\n                <Route path=\"/masterclass\">\r\n                  <Masterclass />\r\n                </Route>\r\n                <Route path=\"/operation\">\r\n                   <Operation />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Redirect to=\"/library\" />\r\n                </Route>\r\n              </Switch>\r\n            </Segment>\r\n          </Sidebar.Pusher>\r\n        </Sidebar.Pushable>\r\n      </Router>\r\n    )\r\n}","export const API_HTTP = process.env.REACT_APP_API_HTTP || \"http://localhost:5000\"","import axios from 'axios';\r\n\r\nclass Api {\r\n  instance;\r\n\r\n  constructor(options = {}) {\r\n    this.instance = axios.create({\r\n      headers: {'X-Auth-Header': ''},\r\n      ...options,\r\n    });\r\n\r\n    this.instance.interceptors.response.use((response) => {\r\n      return response.data;\r\n    });\r\n  }\r\n\r\n  getInstance() {\r\n    return this.instance;\r\n  }\r\n}\r\n\r\nexport const api = new Api().getInstance();\r\n\r\nexport const createRequest = (payload) => {\r\n  const token = localStorage.getItem('token');\r\n  console.log('token :>> ', token);\r\n  return api({\r\n    ...payload,\r\n    headers: {\r\n      ...payload.headers,\r\n      'x-access-token': token || ''\r\n    }\r\n  });\r\n//   return Promise.resolve({\r\n//     data: [\r\n//     {\r\n//         \"infoId\": 1,\r\n//         \"name\": \"1\",\r\n//         \"data\": {\r\n//           'name': 'Коммандор',\r\n//           'description': '[ДАННЫЕ УДАЛЕНЫ]'\r\n//         },\r\n//         \"category\": \"PERSON\",\r\n//         \"photo\": null,\r\n//         \"status\": \"AVAILABLE\"\r\n//     },\r\n//     {\r\n//         \"infoId\": 2,\r\n//         \"name\": \"2\",\r\n//         \"data\": {'test': 'test'},\r\n//         \"category\": \"PERSON\",\r\n//         \"photo\": null,\r\n//         \"status\": \"AVAILABLE\"\r\n//     }\r\n// ]})\r\n};","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n  ActionTypesLibrary,\r\n  fetchLibraryFailure,\r\n  fetchLibrarySuccess, \r\n  fetchInfoFailure, \r\n  fetchInfoSuccess\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\nexport function* fetchLibraryWorker({type, params = {}}) { //first arg = action\r\n  const { _id } = params \r\n  let url = _id ? `${API_HTTP}/library/${_id}` : `${API_HTTP}/library`\r\n  if (params.type) {\r\n    url = url.concat(`?type=${params.type}`)\r\n  }\r\n  const request = {\r\n    method: 'get',\r\n    url\r\n  };\r\n\r\n  try {\r\n    const response = yield call(createRequest, request);\r\n    console.log('response :', response);\r\n    if (type === ActionTypesLibrary.FETCH_LIBRARY_REQUEST) {\r\n      yield put(fetchLibrarySuccess(response.map(info => ({...info, photoUrl: `${API_HTTP}/images/${info.photo}`}))));\r\n    } else {\r\n      yield put(fetchInfoSuccess({...response, photoUrl: `${API_HTTP}/images/${response.photo}`}));\r\n    }\r\n  } catch (e) {\r\n    if (type === ActionTypesLibrary.FETCH_LIBRARY_REQUEST) {\r\n      yield put(fetchLibraryFailure((e.response && e.response.data) || e));\r\n    } else {\r\n      yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* watchLibraryActionsSaga() {\r\n  yield all([\r\n    takeEvery(ActionTypesLibrary.FETCH_LIBRARY_REQUEST, fetchLibraryWorker),\r\n    takeEvery(ActionTypesLibrary.FETCH_INFO_REQUEST, fetchLibraryWorker)\r\n  ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n  ActionTypesUsers,\r\n  signUpUserSuccess,\r\n  signUpUserFailure, \r\n  signInUserSuccess, \r\n  signInUserFailure,\r\n  autoupdateUserSuccess,\r\n  autoupdateUserFailure,\r\n  fetchUserPageSuccess,\r\n  fetchUserPageFailure\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\nexport function* singUpUserWorker({type, userInfo = {}}) {\r\n    const url = `${API_HTTP}/auth/signup`;\r\n    const request = {\r\n        method: 'post',\r\n        url,\r\n        data: {...userInfo}\r\n    };\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :>> ', response);\r\n        yield put(signUpUserSuccess(response))\r\n    } catch (e) {;\r\n        yield put(signUpUserFailure((e.response && e.response.data) || e));\r\n    }\r\n}\r\n\r\nexport function* singInUserWorker({type, userInfo = {}}) {\r\n  const url = `${API_HTTP}/auth/signin`;\r\n  const request = {\r\n      method: 'post',\r\n      url,\r\n      data: {...userInfo}\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(signInUserSuccess({...response, photoUrl: `${API_HTTP}/images/${response.photo}`}))\r\n  } catch (e) {;\r\n      yield put(signInUserFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* autoupdateUserWorker({type}) {\r\n  const url = `${API_HTTP}/auth/autoupdate`;\r\n  const request = {\r\n      method: 'post',\r\n      url\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(autoupdateUserSuccess({...response, photoUrl: `${API_HTTP}/images/${response.photo}`}))\r\n  } catch (e) {;\r\n      yield put(autoupdateUserFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* fetchUserPageWorker({type, userId}) {\r\n  try {\r\n    const examRequest = {\r\n        method: 'get',\r\n        url: `${API_HTTP}/exam/user/${userId}`\r\n    };\r\n    const exams = yield call(createRequest, examRequest);\r\n    console.log('exams :>> ', exams);\r\n    const operationsRequest = {\r\n        method: 'get',\r\n        url: `${API_HTTP}/operation/user/${userId}`\r\n    };\r\n    const operations = yield call(createRequest, operationsRequest);\r\n    console.log('operations :>> ', operations);\r\n    yield put(fetchUserPageSuccess({exams, operations}))\r\n  } catch (e) {\r\n    yield put(fetchUserPageFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* watchUsersActionsSaga() {\r\n  yield all([\r\n    takeEvery(ActionTypesUsers.SIGN_UP_USER_REQUEST, singUpUserWorker),\r\n    takeEvery(ActionTypesUsers.SIGN_IN_USER_REQUEST, singInUserWorker),\r\n    takeEvery(ActionTypesUsers.AUTOUPDATE_USER_REQUEST, autoupdateUserWorker),\r\n    takeEvery(ActionTypesUsers.FETCH_USER_PAGE_REQUEST, fetchUserPageWorker)\r\n  ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n  ActionTypesMasterclass,\r\n  fetchMasterclassFailure,\r\n  fetchMasterclassSuccess, \r\n  fetchInfoFailure, \r\n  fetchInfoSuccess,\r\n  registerMasterclassSuccess,\r\n  registerMasterclassFailure\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\nexport function* fetchMasterclassWorker({type, params = {}}) { //first arg = action\r\n  const { _id } = params \r\n  let url = _id ? `${API_HTTP}/masterclass/${_id}` : `${API_HTTP}/masterclass/mapped`\r\n  if (params.type) {\r\n    url = url.concat(`?type=${params.type}`)\r\n  }\r\n  const request = {\r\n    method: 'get',\r\n    url\r\n  };\r\n\r\n  try {\r\n    const response = yield call(createRequest, request);\r\n    console.log('response :', response);\r\n    if (type === ActionTypesMasterclass.FETCH_MASTERCLASS_REQUEST) {\r\n      yield put(fetchMasterclassSuccess(\r\n        Object.fromEntries(Object.entries(response).map(([key, infos]) => {\r\n          return [key, infos.map(info => (\r\n            {\r\n              ...info,\r\n              photoUrl: `${API_HTTP}/images/${info.photo}`,\r\n              students: info.students.map( student => ({...student, photoUrl: `${API_HTTP}/images/${student.photo}`}))\r\n            }\r\n            )\r\n          )]\r\n        })\r\n      )));\r\n    } else {\r\n      yield put(fetchInfoSuccess(\r\n        {\r\n          ...response,\r\n          photoUrl: `${API_HTTP}/images/${response.photo}`,\r\n          students: response.students.map( student => ({...student, photoUrl: `${API_HTTP}/images/${student.photo}`}))\r\n        }\r\n      ));\r\n    }\r\n  } catch (e) {\r\n    if (type === ActionTypesMasterclass.FETCH_MASTERCLASS_REQUEST) {\r\n      yield put(fetchMasterclassFailure((e.response && e.response.data) || e));\r\n    } else {\r\n      yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* registerMasterclassWorker({type, params = {}}) {\r\n  const { _id } = params \r\n  const url = `${API_HTTP}/masterclass/${_id}/register`;\r\n  const request = {\r\n      method: 'post',\r\n      url\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(registerMasterclassSuccess(\r\n        {\r\n          ...response,\r\n          photoUrl: `${API_HTTP}/images/${response.photo}`,\r\n          students: response.students.map( student => ({...student, photoUrl: `${API_HTTP}/images/${student.photo}`}))\r\n        }\r\n      ))\r\n  } catch (e) {\r\n    yield put(registerMasterclassFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* watchMasterclassActionsSaga() {\r\n  yield all([\r\n    takeEvery(ActionTypesMasterclass.FETCH_MASTERCLASS_REQUEST, fetchMasterclassWorker),\r\n    takeEvery(ActionTypesMasterclass.FETCH_INFO_REQUEST, fetchMasterclassWorker),\r\n    takeEvery(ActionTypesMasterclass.REGISTER_MASTERCLASS_REQUEST, registerMasterclassWorker)\r\n  ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n  ActionTypesOperation,\r\n  fetchOperationFailure,\r\n  fetchOperationSuccess, \r\n  fetchInfoFailure, \r\n  fetchInfoSuccess,\r\n  registerOperationSuccess,\r\n  registerOperationFailure,\r\n  fetchOperationViewFailure,\r\n  fetchOperationViewSuccess, \r\n  activateUserSuccess,\r\n  activateUserFailure\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\nexport function* fetchOperationWorker({type, params = {}}) { //first arg = action\r\n  const { _id } = params \r\n  let url = _id ? `${API_HTTP}/operation/${_id}` : `${API_HTTP}/operation`\r\n  if (params.type) {\r\n    url = url.concat(`?type=${params.type}`)\r\n  }\r\n  const request = {\r\n    method: 'get',\r\n    url\r\n  };\r\n\r\n  try {\r\n    const response = yield call(createRequest, request);\r\n    console.log('response :', response);\r\n    if (type === ActionTypesOperation.FETCH_OPERATION_REQUEST) {\r\n      yield put(fetchOperationSuccess(response.map(info => (\r\n        {\r\n          ...info,\r\n          photoUrl: `${API_HTTP}/images/${info.photo}`,\r\n          manager: {...info.manager, photoUrl: `${API_HTTP}/images/${info.manager.photo}`},\r\n          users: info.users.map( user => ({...user, photoUrl: `${API_HTTP}/images/${user.photo}`}))\r\n        }\r\n        )\r\n      )));\r\n    } else {\r\n      yield put(fetchInfoSuccess(\r\n        {\r\n          ...response,\r\n          photoUrl: `${API_HTTP}/images/${response.photo}`,\r\n          users: response.users.map( user => ({...user, photoUrl: `${API_HTTP}/images/${user.photo}`}))\r\n        }\r\n      ));\r\n    }\r\n  } catch (e) {\r\n    if (type === ActionTypesOperation.FETCH_OPERATION_REQUEST) {\r\n      yield put(fetchOperationFailure((e.response && e.response.data) || e));\r\n    } else {\r\n      yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* registerOperationWorker({type, params = {}}) {\r\n  const { _id } = params \r\n  const url = `${API_HTTP}/operation/${_id}/register`;\r\n  const request = {\r\n      method: 'post',\r\n      url\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(registerOperationSuccess(\r\n        {\r\n          ...response,\r\n          photoUrl: `${API_HTTP}/images/${response.photo}`,\r\n          users: response.users.map( user => ({...user, photoUrl: `${API_HTTP}/images/${user.photo}`}))\r\n        }\r\n      ))\r\n  } catch (e) {\r\n    yield put(registerOperationFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* fetchOperationViewWorker({type, params = {}}) {\r\n  const url = `${API_HTTP}/operation/view`;\r\n  const request = {\r\n      method: 'get',\r\n      url\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(fetchOperationViewSuccess(\r\n        response.map(\r\n          operation => ({\r\n            ...operation,\r\n            users: operation.users.map( user => ({...user, gifUrl: `${API_HTTP}/gifs/${user.gif}`}))\r\n          })\r\n        )\r\n      ))\r\n  } catch (e) {\r\n    yield put(fetchOperationViewFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* activateUserWorker({type, params = {}}) {\r\n  const { _id, opId } = params \r\n  if ( _id) {\r\n    yield put(activateUserSuccess())\r\n  } else {\r\n    const url = `${API_HTTP}/user/activateOperation/${opId}`\r\n    const request = {\r\n      method: 'get',\r\n      url\r\n    };\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :>> ', response);\r\n        yield put(activateUserSuccess())\r\n    } catch (e) {\r\n      yield put(registerOperationFailure((e.response && e.response.data) || e));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* watchOperationActionsSaga() {\r\n  yield all([\r\n    takeEvery(ActionTypesOperation.FETCH_OPERATION_REQUEST, fetchOperationWorker),\r\n    takeEvery(ActionTypesOperation.FETCH_INFO_REQUEST, fetchOperationWorker),\r\n    takeEvery(ActionTypesOperation.REGISTER_OPERATION_REQUEST, registerOperationWorker),\r\n    takeEvery(ActionTypesOperation.FETCH_OPERATION_VIEW_REQUEST, fetchOperationViewWorker),\r\n    takeEvery(ActionTypesOperation.ACTIVATE_USER_REQUEST, activateUserWorker)\r\n  ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n    ActionTypesScoutingInfo,\r\n    fetchScoutingInfoFailure,\r\n    fetchScoutingInfoSuccess,\r\n    fetchInfoFailure,\r\n    fetchInfoSuccess\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\n\r\nexport function* fetchScoutingInfoWorker({type, params = {}}) { //first arg = action\r\n    const { _id } = params\r\n    let url = _id ? `${API_HTTP}/scoutingInfo/${_id}` : `${API_HTTP}/scoutingInfo`\r\n    if (params.type) {\r\n        url = url.concat(`?type=${params.type}`)\r\n    }\r\n    const request = {\r\n        method: 'get',\r\n        url\r\n    };\r\n\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :', response);\r\n        if (type === ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_REQUEST) {\r\n            yield put(fetchScoutingInfoSuccess(response.map(info => ({...info, photoUrl: `${API_HTTP}/images/${info.photo}`}))));\r\n        } else {\r\n            yield put(fetchInfoSuccess({...response, photoUrl: `${API_HTTP}/images/${response.photo}`}));\r\n        }\r\n    } catch (e) {\r\n        if (type === ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_REQUEST) {\r\n            yield put(fetchScoutingInfoFailure((e.response && e.response.data) || e));\r\n        } else {\r\n            yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n        }\r\n    }\r\n}\r\n\r\nexport function* watchScoutingInfoActionsSaga() {\r\n    yield all([\r\n        takeEvery(ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_REQUEST, fetchScoutingInfoWorker),\r\n        takeEvery(ActionTypesScoutingInfo.FETCH_INFO_REQUEST, fetchScoutingInfoWorker)\r\n    ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n    ActionTypesScoutingRequest,\r\n    fetchScoutingRequestFailure,\r\n    fetchScoutingRequestSuccess,\r\n    fetchInfoFailure,\r\n    fetchInfoSuccess,\r\n    registerScoutingRequestSuccess,\r\n    registerScoutingRequestFailure\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\nimport {ActionTypesMasterclass, registerMasterclassFailure, registerMasterclassSuccess} from \"../masterclass\";\r\nimport {registerMasterclassWorker} from \"../masterclass/saga\";\r\n\r\n\r\nexport function* fetchScoutingRequestWorker({type, params = {}}) { //first arg = action\r\n    const { _id } = params\r\n    let url = _id ? `${API_HTTP}/scoutingRequest/${_id}` : `${API_HTTP}/scoutingRequest`\r\n    if (params.type) {\r\n        url = url.concat(`?type=${params.type}`)\r\n    }\r\n    const request = {\r\n        method: 'get',\r\n        url\r\n    };\r\n\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :', response);\r\n        if (type === ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_REQUEST) {\r\n            yield put(fetchScoutingRequestSuccess(response.map(info => ({...info, photoUrl: `${API_HTTP}/images/${info.photo}`}))));\r\n        } else {\r\n            yield put(fetchInfoSuccess({...response, photoUrl: `${API_HTTP}/images/${response.photo}`}));\r\n        }\r\n    } catch (e) {\r\n        if (type === ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_REQUEST) {\r\n            yield put(fetchScoutingRequestFailure((e.response && e.response.data) || e));\r\n        } else {\r\n            yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n        }\r\n    }\r\n}\r\n\r\nexport function* registerScoutingRequestWorker({type, params = {}}) {\r\n    const { requestObject, place, task } = params\r\n    const url = `${API_HTTP}/scoutingRequest`;\r\n    const data = {requestObject, place, task}\r\n    const request = {\r\n        method: 'post',\r\n        url,\r\n        data\r\n    };\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :>> ', response);\r\n        yield put(registerScoutingRequestSuccess(response))\r\n    } catch (e) {\r\n        yield put(registerScoutingRequestFailure((e.response && e.response.data) || e));\r\n    }\r\n}\r\n\r\nexport function* watchScoutingRequestActionsSaga() {\r\n    yield all([\r\n        takeEvery(ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_REQUEST, fetchScoutingRequestWorker),\r\n        takeEvery(ActionTypesScoutingRequest.FETCH_INFO_REQUEST, fetchScoutingRequestWorker),\r\n        takeEvery(ActionTypesScoutingRequest.REGISTER_SCOUTINGREQUEST_REQUEST, registerScoutingRequestWorker)\r\n    ]);\r\n}","import * as sagas from \"./sagas\";\r\n\r\nexport const initSagas = sagaMiddleware => {\r\n  return Object.values(sagas).forEach(sagaMiddleware.run.bind(sagaMiddleware));\r\n};","import {createStore, applyMiddleware, compose, combineReducers} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport library from './modules/library';\r\nimport scoutingInfo from './modules/scoutingInfo'\r\nimport scoutingRequest from './modules/scoutingRequest'\r\nimport users from './modules/users';\r\nimport masterclass from './modules/masterclass';\r\nimport operation from './modules/operation';\r\nimport {initSagas} from './initSagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleWares = [sagaMiddleware];\r\nconst enhancer = composeWithDevTools(applyMiddleware(...middleWares));\r\n\r\nexport default function configureStore() {\r\n  const rootReducer = combineReducers({\r\n    library,\r\n    scoutingInfo,\r\n    scoutingRequest,\r\n    masterclass,\r\n    operation,\r\n    users\r\n  });\r\n  const store = compose(\r\n    enhancer\r\n  )(createStore)(rootReducer);\r\n  initSagas(sagaMiddleware);\r\n\r\n  return store;\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport {Provider} from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport 'semantic-ui-less/semantic.less'\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nconst store = configureStore()\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}