{"version":3,"sources":["assets/img/plus.svg","assets/img/eye.svg","redux/modules/users/index.js","components/Login.js","components/SidebarMenu.js","redux/modules/library/index.js","components/library/Info.js","components/library/InfoPanel.js","components/library/Library.js","redux/modules/scoutingInfo/index.js","components/scoutingInfo/Info.js","components/scoutingInfo/Request.js","redux/modules/masterclass/index.js","redux/modules/scoutingRequest/index.js","components/scoutingInfo/RequestPopUp.js","components/scoutingInfo/InfoPanel.js","components/scoutingInfo/ScoutingInfo.js","components/masterclass/MCTab.js","components/masterclass/Info.js","components/masterclass/InfoPanel.js","components/masterclass/Masterclass.js","components/UserPanel.js","redux/modules/operation/index.js","components/operation/Info.js","components/operation/InfoPanel.js","components/operation/ViewCard.js","components/operation/View.js","components/operation/Operation.js","components/App.js","configs/environment.js","redux/rootSagas.js","redux/modules/library/saga.js","redux/modules/users/saga.js","redux/modules/masterclass/saga.js","redux/modules/operation/saga.js","redux/modules/scoutingInfo/saga.js","redux/modules/scoutingRequest/saga.js","redux/initSagas.js","redux/configureStore.js","index.js"],"names":["module","exports","ActionTypesUsers","initialUserState","loggedIn","user","message","reducer","state","action","type","payload","accessToken","localStorage","setItem","JSON","stringify","failure","text","error","clear","page","Login","isOpen","setOpen","useState","username","setUsername","password","setPassword","dispatch","useDispatch","useSelector","users","messageBlock","Message","positive","negative","Header","login","userInfo","Modal","open","onClose","onOpen","trigger","Menu","Item","Icon","name","Content","Form","size","Field","placeholder","onChange","e","target","value","Actions","Button","content","color","onClick","preventDefault","labelPosition","icon","SidebarMenu","isOpenLogin","setOpenLogin","console","log","Sidebar","as","animation","direction","inverted","vertical","visible","width","className","id","Link","to","photo","Image","src","photoUrl","avatar","ActionTypesLibrary","initialLibraryState","list","info","fetchInfoSuccess","fetchInfoFailure","Info","cardRows","Object","entries","data","filter","item","index","map","key","slice","length","infoRows","card","Card","eye","style","marginBottom","Meta","category","Description","List","image","scrolling","spaced","attachmentUrls","attach","indexOf","controls","height","InfoPanel","library","useEffect","cards","Loader","active","Group","stackable","Library","attached","exact","path","ActionTypesScoutingInfo","initialScoutingInfoState","wrapped","Request","requestObject","place","task","Progress","percent","indicating","ActionTypesMasterclass","initialMasterclassState","ActionTypesScoutingRequest","initialScoutingRequestState","RequestPopUp","setRequestObject","setPlace","setTask","isButtonDisabled","plus","textAlign","disabled","params","scoutingInfo","scoutingRequest","isNewRequestOpen","setNewRequestOpen","cardsInfo","cardsRequest","panes","menuItem","render","Tab","Pane","loading","ScoutingInfo","MCTab","mc","masterclass","students","max_students","findIndex","stud","mcRows","student","Table","Row","Cell","Subheader","group","HeaderCell","Body","mcs","activeTab","setActiveTab","first","time","Date","date","toTimeString","menu","fluid","tabular","onTabChange","d","activeIndex","_id","Masterclass","UserPanel","history","useHistory","userId","exams","operations","examsRows","ex","success","Label","operationsRows","op","all_points","points","Grid","columns","Column","computer","mobile","rounded","floated","Segment","Rating","rating","lives","maxRating","level","experience","total","progress","celled","stretched","push","ActionTypesOperation","initialOperationState","view","fetchOperationViewRequest","activateUserRequest","activateUserSuccess","killUserRequest","operation","isAdmin","roles","isModerator","isUserRegistred","usr","isButtonRegisterDisabled","isButtonActivateDisabled","moment","isBetween","subtract","max_users","opId","manager","ViewCard","userCards","alive","gif","gifUrl","ui","itemsPerRow","doubling","centered","View","shallowEqual","openedOperation","setOpenedOperation","interval","setInterval","clearInterval","undefined","Operation","App","token","getItem","Pushable","Pusher","minHeight","API_HTTP","process","api","options","this","instance","axios","create","headers","interceptors","response","use","getInstance","createRequest","fetchLibraryWorker","watchLibraryActionsSaga","url","concat","request","method","call","put","attachments","all","takeEvery","singUpUserWorker","singInUserWorker","autoupdateUserWorker","fetchUserPageWorker","watchUsersActionsSaga","examRequest","operationsRequest","fetchMasterclassWorker","registerMasterclassWorker","watchMasterclassActionsSaga","fromEntries","fetchOperationWorker","registerOperationWorker","fetchOperationViewWorker","activateUserWorker","killUserWorker","watchOperationActionsSaga","fetchScoutingInfoWorker","watchScoutingInfoActionsSaga","fetchScoutingRequestWorker","registerScoutingRequestWorker","watchScoutingRequestActionsSaga","sagaMiddleware","createSagaMiddleware","middleWares","enhancer","composeWithDevTools","applyMiddleware","store","rootReducer","combineReducers","compose","createStore","values","sagas","forEach","run","bind","configureStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.07a75836.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus.8a0de07c.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye.fe2c1e75.svg\";","export const ActionTypesUsers = {\r\n    SIGN_UP_USER_REQUEST: 'users/SIGN_UP_USER_REQUEST',\r\n    SIGN_UP_USER_SUCCESS: 'users/SIGN_UP_USER_SUCCESS',\r\n    SIGN_UP_USER_FAILURE: 'users/SIGN_UP_USER_FAILURE',\r\n\r\n    SIGN_IN_USER_REQUEST: 'users/SIGN_IN_USER_REQUEST',\r\n    SIGN_IN_USER_SUCCESS: 'users/SIGN_IN_USER_SUCCESS',\r\n    SIGN_IN_USER_FAILURE: 'users/SIGN_IN_USER_FAILURE',\r\n//autoupdate\r\n    AUTOUPDATE_USER_REQUEST: 'users/AUTOUPDATE_USER_REQUEST',\r\n    AUTOUPDATE_USER_SUCCESS: 'users/AUTOUPDATE_USER_SUCCESS',\r\n    AUTOUPDATE_USER_FAILURE: 'users/AUTOUPDATE_USER_FAILURE',\r\n\r\n    SIGN_OUT_USER_REQUEST: 'users/SIGN_OUT_USER_REQUEST',\r\n\r\n    FETCH_USER_PAGE_REQUEST: 'users/FETCH_USER_PAGE_REQUEST',\r\n    FETCH_USER_PAGE_SUCCESS: 'users/FETCH_USER_PAGE_SUCCESS',\r\n    FETCH_USER_PAGE_FAILURE: 'users/FETCH_USER_PAGE_FAILURE',\r\n};\r\n\r\nexport const initialUserState = {\r\n    loggedIn: false,\r\n    user: {},\r\n    message: {}\r\n};\r\n\r\nexport default function reducer(\r\n    state = initialUserState,\r\n    action\r\n) {\r\n    switch (action.type) {\r\n        //TODO: add sign_up with msg or err\r\n        case ActionTypesUsers.SIGN_IN_USER_SUCCESS:\r\n          const {accessToken, ...user} = action.payload;\r\n          localStorage.setItem(\"user\", JSON.stringify(user))\r\n          localStorage.setItem(\"token\", accessToken)\r\n          return {\r\n            loggedIn: true,\r\n            user,\r\n            message: {}\r\n          }\r\n        case ActionTypesUsers.SIGN_IN_USER_FAILURE: \r\n          return {\r\n            loggedIn: false,\r\n            user: {},\r\n            message: { failure: true, text: action.error.message}\r\n        }\r\n        case ActionTypesUsers.SIGN_OUT_USER_REQUEST:\r\n          localStorage.clear()\r\n          return {\r\n            loggedIn: false,\r\n            user: {},\r\n            message: {}\r\n        }\r\n        case ActionTypesUsers.AUTOUPDATE_USER_SUCCESS:\r\n          return {\r\n            loggedIn: false,\r\n            user: action.payload,\r\n            message: {}\r\n          }\r\n        case ActionTypesUsers.AUTOUPDATE_USER_FAILURE:\r\n          return {\r\n            loggedIn: false,\r\n            user: {},\r\n            message: { failure: true, text: action.error.message}\r\n          }\r\n\r\n        case ActionTypesUsers.FETCH_USER_PAGE_SUCCESS:\r\n          return {\r\n            ...state,\r\n            page: action.payload,\r\n            message: {}\r\n          }\r\n        case ActionTypesUsers.FETCH_USER_PAGE_FAILURE:\r\n          return {\r\n            ...state,\r\n            error: action.error,\r\n            message: { failure: true, text: action.error.message}\r\n          }\r\n        \r\n        default: \r\n          return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const signUpUserRequest = (userInfo) => ({\r\n  type: ActionTypesUsers.SIGN_UP_USER_REQUEST,\r\n  userInfo\r\n})\r\nexport const signUpUserSuccess = (payload) => ({\r\n  type: ActionTypesUsers.SIGN_UP_USER_SUCCESS,\r\n  payload\r\n})\r\nexport const signUpUserFailure = (error) => ({\r\n  type: ActionTypesUsers.SIGN_UP_USER_FAILURE,\r\n  error\r\n})\r\n\r\nexport const signInUserRequest = (userInfo) => ({\r\n  type: ActionTypesUsers.SIGN_IN_USER_REQUEST,\r\n  userInfo\r\n})\r\nexport const signInUserSuccess = (payload) => ({\r\n  type: ActionTypesUsers.SIGN_IN_USER_SUCCESS,\r\n  payload\r\n})\r\nexport const signInUserFailure = (error) => ({\r\n  type: ActionTypesUsers.SIGN_IN_USER_FAILURE,\r\n  error\r\n})\r\n\r\nexport const autoupdateUserRequest = () => ({\r\n  type: ActionTypesUsers.AUTOUPDATE_USER_REQUEST\r\n})\r\nexport const autoupdateUserSuccess = (payload) => ({\r\n  type: ActionTypesUsers.AUTOUPDATE_USER_SUCCESS,\r\n  payload\r\n})\r\nexport const autoupdateUserFailure = (error) => ({\r\n  type: ActionTypesUsers.AUTOUPDATE_USER_FAILURE,\r\n  error\r\n})\r\n\r\nexport const signOutUserRequest = () => ({\r\n  type: ActionTypesUsers.SIGN_OUT_USER_REQUEST\r\n})\r\n\r\nexport const fetchUserPageRequest = (userId) => ({\r\n  type: ActionTypesUsers.FETCH_USER_PAGE_REQUEST,\r\n  userId\r\n})\r\nexport const fetchUserPageSuccess = (payload) => ({\r\n  type: ActionTypesUsers.FETCH_USER_PAGE_SUCCESS,\r\n  payload\r\n})\r\nexport const fetchUserPageFailure = (error) => ({\r\n  type: ActionTypesUsers.FETCH_USER_PAGE_FAILURE,\r\n  error\r\n})","import React, {useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {signInUserRequest} from '../redux/modules/users';\r\nimport { Message, Button, Form, Modal, Menu, Icon } from 'semantic-ui-react'\r\n\r\nexport default function Login({isOpen, setOpen}) {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n    const message = useSelector(state => state.users.message)\r\n    const messageBlock = <Message positive={!message.failure} negative={message.failure}><Message.Header>{message.text}</Message.Header></Message>\r\n\r\n    const login = () => {\r\n      dispatch(signInUserRequest({ username, password }));\r\n    }\r\n\r\n    return (\r\n        <Modal \r\n          open={isOpen}\r\n          onClose={() => setOpen(false)}\r\n          onOpen={() => setOpen(true)}\r\n          trigger={\r\n            <Menu.Item>\r\n              <Icon name='user circle' />\r\n              Войти в базу\r\n            </Menu.Item>\r\n          }\r\n        >\r\n            <Modal.Header>\r\n                Вход в Базу\r\n            </Modal.Header>\r\n            <Modal.Content>\r\n                <Form\r\n                  size=\"small\"\r\n                >\r\n                    <Form.Field>\r\n                        <label>Имя пользователя</label>\r\n                        <input \r\n                        placeholder='username'\r\n                        onChange={(e) => {setUsername(e.target.value)}}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Пароль</label>\r\n                        <input \r\n                        placeholder='password'\r\n                        type=\"password\"\r\n                        onChange={(e) => {setPassword(e.target.value)}}/>\r\n                    </Form.Field>\r\n                </Form>\r\n                {message && message.text && message.text !== '' ? messageBlock : <></>}\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                  content=\"Отмена\"\r\n                  color='black'\r\n                  onClick={(e) => {e.preventDefault(); setOpen(false)}}\r\n                />\r\n                <Button \r\n                  content=\"Войти\"\r\n                  labelPosition='right'\r\n                  icon='checkmark'\r\n                  onClick={(e) => {e.preventDefault(); login(); }}\r\n                  positive\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Sidebar, Menu, Icon, Image } from 'semantic-ui-react'\r\nimport Login from './Login'\r\n\r\nexport default function SidebarMenu () {\r\n  const [isOpenLogin, setOpenLogin] = useState(false);\r\n  //const user = JSON.parse(localStorage.getItem('user'));\r\n  const user = useSelector(state => state.users.user)\r\n  console.log('user :>> ', user);\r\n    return ( \r\n      <Sidebar\r\n          as={Menu}\r\n          animation='push'\r\n          direction='left'\r\n          icon='labeled'\r\n          inverted\r\n          vertical\r\n          visible={true}\r\n          width='thin'\r\n          className=\"leftSidebar\"\r\n      >\r\n        { user.id ? <Menu.Item as={Link} to=\"/user\">\r\n            {user.photo !== '' ? <Image src={user.photoUrl} avatar size=\"mini\"/> : <Icon name=\"user\"/>}\r\n            <p> {user.name}</p>\r\n          </Menu.Item> : <Login\r\n          isOpen={isOpenLogin}\r\n          setOpen={setOpenLogin}\r\n        />}\r\n          <Menu.Item as={Link} to=\"/library\">\r\n              <Icon name='book' />\r\n              База знаний\r\n          </Menu.Item>\r\n          { user.id ? (\r\n            <>\r\n              <Menu.Item as={Link} to=\"/scouting\">\r\n                  <Icon name='user secret'/>\r\n                  Разведка\r\n              </Menu.Item>\r\n              <Menu.Item as={Link} to=\"/masterclass\">\r\n                  <Icon name='graduation cap' /> \r\n                  Мастерклассы\r\n              </Menu.Item> \r\n              <Menu.Item as={Link} to=\"/operation\">\r\n                  <Icon name='crosshairs' />\r\n                  Высадки\r\n              </Menu.Item>\r\n            </>\r\n          ) : <></>}\r\n          <Menu.Item as={Link} to=\"/operation/view\">\r\n              <Icon name='shield alternate' />\r\n              Боевой интерфейс\r\n          </Menu.Item>\r\n      </Sidebar>\r\n    )\r\n}","import {ActionTypesUsers} from '../users'\r\n\r\nexport const ActionTypesLibrary = {\r\n    FETCH_LIBRARY_REQUEST: 'library/FETCH_LIBRARY_REQUEST',\r\n    FETCH_LIBRARY_SUCCESS: 'library/FETCH_LIBRARY_SUCCESS',\r\n    FETCH_LIBRARY_FAILURE: 'library/FETCH_LIBRARY_FAILURE',\r\n    FETCH_INFO_REQUEST: 'library/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'library/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'library/FETCH_INFO_FAILURE'\r\n  };\r\n  \r\n  export const initialLibraryState = {\r\n    list: [],\r\n    info: {}\r\n  };\r\n  \r\n  export default function reducer(\r\n    state = initialLibraryState,\r\n    action\r\n  ) {\r\n    switch (action.type) {\r\n  \r\n      case ActionTypesLibrary.FETCH_LIBRARY_SUCCESS:\r\n        return {\r\n          ...state,\r\n          list: action.payload\r\n        };\r\n  \r\n      case ActionTypesLibrary.FETCH_LIBRARY_FAILURE:\r\n        return {\r\n          ...state,\r\n          error: action.error\r\n        };\r\n\r\n      case ActionTypesLibrary.FETCH_INFO_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload\r\n        };\r\n\r\n      case ActionTypesLibrary.FETCH_INFO_FAILURE:\r\n        return {\r\n          ...state,\r\n          error: action.error\r\n        };\r\n\r\n      case ActionTypesUsers.SIGN_OUT_USER_REQUEST:\r\n        return {\r\n          ...initialLibraryState\r\n        }\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  // Action Creators\r\n  export const fetchLibraryRequest = () => ({\r\n    type: ActionTypesLibrary.FETCH_LIBRARY_REQUEST\r\n  });\r\n  \r\n  export const fetchLibrarySuccess = (payload) => ({\r\n    type: ActionTypesLibrary.FETCH_LIBRARY_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchLibraryFailure = (error) => ({\r\n    type: ActionTypesLibrary.FETCH_LIBRARY_FAILURE,\r\n    error\r\n  });\r\n\r\n  export const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesLibrary.FETCH_INFO_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesLibrary.FETCH_INFO_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesLibrary.FETCH_INFO_FAILURE,\r\n    error\r\n  });","import React, {useState} from 'react'\r\nimport { Button, Image, Modal, Card, List } from 'semantic-ui-react'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function Info ({info}) {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const cardRows = Object.entries(info.data || {}).filter((item, index) => index < 3).map(([key, value]) => <p key={key}>{`${key}: ${value.slice(0,70)}${value.length > 70 ? '...' : ''}`}</p>);\r\n    const infoRows = Object.entries(info.data || {}).map(([key, value]) => <p key={key}>{`${key}: ${value}`}</p>);\r\n    \r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={info.photo ? `${info.photoUrl}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{info.name}</Card.Header>\r\n                <Card.Meta>{info.category}</Card.Meta>\r\n                <Card.Description>\r\n                  <List>\r\n                    {cardRows}\r\n                  </List>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n\r\n    return (\r\n        <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={card}\r\n        >\r\n            <Modal.Header>{info.name}</Modal.Header>\r\n            <Modal.Content image scrolling>\r\n                <Image size='medium' src={info.photo ? `${info.photoUrl}` : eye} spaced=\"right\"/>\r\n                <Modal.Description>\r\n                    {infoRows}\r\n                    {info.attachmentUrls && info.attachmentUrls.map(attach => (<>{attach.indexOf('video') !== -1 ? <video controls=\"controls\" width=\"400\" height=\"300\" src={attach}> </video> : <Image src={attach}/> }</>))}\r\n                </Modal.Description>\r\n\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    \r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport {fetchLibraryRequest} from '../../redux/modules/library'\r\nimport {Card, Loader} from 'semantic-ui-react'\r\nimport Info from './Info'\r\n\r\nexport default function InfoPanel () {\r\n    const dispatch = useDispatch()\r\n    const library = useSelector(state => state.library.list) || []\r\n    const error = useSelector(state => state.library.error)\r\n    \r\n    useEffect(\r\n        () => {dispatch(fetchLibraryRequest())},\r\n        []\r\n    )\r\n    console.log('library :', library);\r\n    console.log('error :', error);\r\n\r\n    const cards = library.map(info => {\r\n        return (\r\n            <Info info={info}/>\r\n        )\r\n    });\r\n    return (\r\n        <>\r\n            <Loader active={library.length === 0}/>\r\n            <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                {cards}\r\n            </Card.Group>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Route } from \"react-router-dom\";\r\nimport { Header } from 'semantic-ui-react'\r\nimport InfoPanel from './InfoPanel'\r\nimport './Library.scss'\r\n\r\nexport default function Library() {\r\n    //TODO: make header dynamic (should show path using breadcrumbs)\r\n    return (\r\n        <div className=\"container\">\r\n            <Header as='h2' attached='top'>\r\n                База знаний\r\n            </Header>\r\n            <Route exact path=\"/library\">\r\n                <InfoPanel/>\r\n            </Route>\r\n        </div>\r\n    )\r\n}","export const ActionTypesScoutingInfo = {\r\n    FETCH_SCOUTINGINFO_REQUEST: 'scoutingInfo/FETCH_scoutingInfo_REQUEST',\r\n    FETCH_SCOUTINGINFO_SUCCESS: 'scoutingInfo/FETCH_scoutingInfo_SUCCESS',\r\n    FETCH_SCOUTINGINFO_FAILURE: 'scoutingInfo/FETCH_scoutingInfo_FAILURE',\r\n    FETCH_INFO_REQUEST: 'scoutingInfo/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'scoutingInfo/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'scoutingInfo/FETCH_INFO_FAILURE'\r\n};\r\n\r\nexport const initialScoutingInfoState = {\r\n    list: [],\r\n    info: {}\r\n};\r\n\r\nexport default function reducer(\r\n    state = initialScoutingInfoState,\r\n    action\r\n) {\r\n    switch (action.type) {\r\n\r\n        case ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list: action.payload\r\n            };\r\n\r\n        case ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n\r\n        case ActionTypesScoutingInfo.FETCH_INFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                info: action.payload\r\n            };\r\n\r\n        case ActionTypesScoutingInfo.FETCH_INFO_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const fetchScoutingInfoRequest = () => ({\r\n    type: ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_REQUEST\r\n});\r\n\r\nexport const fetchScoutingInfoSuccess = (payload) => ({\r\n    type: ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const fetchScoutingInfoFailure = (error) => ({\r\n    type: ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_FAILURE,\r\n    error\r\n});\r\n\r\nexport const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesScoutingInfo.FETCH_INFO_REQUEST,\r\n    params\r\n});\r\n\r\nexport const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesScoutingInfo.FETCH_INFO_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesScoutingInfo.FETCH_INFO_FAILURE,\r\n    error\r\n});","import React, {useState} from 'react'\r\nimport { Button, Image, Modal, Card, List } from 'semantic-ui-react'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function Info ({info}) {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const infoRows = Object.entries(info.data || {}).map(([key, value]) => <p key={key}>{`${key}: ${value}`}</p>);\r\n    \r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={info.photo ? `${info.photoUrl}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{info.name}</Card.Header>\r\n                <Card.Meta>{info.category}</Card.Meta>\r\n                <Card.Description>\r\n                  <List>\r\n                    {infoRows.filter((item, index) => index < 3)}\r\n                  </List>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n\r\n    return (\r\n        <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={card}\r\n        >\r\n            <Modal.Header>{info.name}</Modal.Header>\r\n            <Modal.Content image>\r\n                <Image size='medium' src={info.photo ? `${info.photoUrl}` : eye} wrapped />\r\n                <Modal.Description>\r\n                    {infoRows}\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    \r\n    )\r\n}","import React, {useState} from 'react'\r\nimport { Button, Image, Modal, Card, List, Progress } from 'semantic-ui-react'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function Request ({info}) {\r\n    const [open, setOpen] = useState(false)\r\n    //const startMill = (info.startDate && info.startDate.getMilliseconds()) || 0\r\n    //const nowMill = (info.dueDate && Date.now().getMilliseconds() - startMill) || 10\r\n    //const endMill = (info.dueDate && info.bueDate.getMilliseconds() - startMill) || 100\r\n    //const percent = nowMill/endMill*100\r\n    const percent = 10\r\n/*\r\n* name: String,\r\n    level: Number,\r\n    requestBy: {\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'User'\r\n    },\r\n    requestObject: String,\r\n    place: String,\r\n    task: String\r\n* */\r\n\r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={info.photo ? `${info.photoUrl}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{info.name}</Card.Header>\r\n                <Card.Meta>{info.category}</Card.Meta>\r\n                <Card.Description>\r\n                    <List>\r\n                        <p>Обект: {info.requestObject}</p>\r\n                        <p>Место: {info.place}</p>\r\n                        <p>Задача: {info.task}</p>\r\n                    </List>\r\n                </Card.Description>\r\n                <Progress percent={percent} indicating />\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n\r\n    return (\r\n        <Modal\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={card}\r\n        >\r\n            <Modal.Header>{info.name}</Modal.Header>\r\n            <Modal.Content image>\r\n                <Image size='medium' src={info.photo ? `${info.photoUrl}` : eye} wrapped />\r\n                <Modal.Description>\r\n                    <p>Обект: {info.requestObject}</p>\r\n                    <p>Место: {info.place}</p>\r\n                    <p>Задача: {info.task}</p>\r\n                    <Progress percent={percent} indicating />\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n\r\n    )\r\n}","import {ActionTypesUsers} from '../users'\r\n\r\nexport const ActionTypesMasterclass = {\r\n    FETCH_MASTERCLASS_REQUEST: 'masterclass/FETCH_MASTERCLASS_REQUEST',\r\n    FETCH_MASTERCLASS_SUCCESS: 'masterclass/FETCH_MASTERCLASS_SUCCESS',\r\n    FETCH_MASTERCLASS_FAILURE: 'masterclass/FETCH_MASTERCLASS_FAILURE',\r\n    FETCH_INFO_REQUEST: 'masterclass/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'masterclass/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'masterclass/FETCH_INFO_FAILURE',\r\n    REGISTER_MASTERCLASS_REQUEST: 'masterclass/REGISTER_MASTERCLASS_REQUEST',\r\n    REGISTER_MASTERCLASS_SUCCESS: 'masterclass/REGISTER_MASTERCLASS_SUCCESS',\r\n    REGISTER_MASTERCLASS_FAILURE: 'masterclass/REGISTER_MASTERCLASS_FAILURE'\r\n\r\n  };\r\n  \r\n  export const initialMasterclassState = {\r\n    list: {},\r\n    info: {},\r\n    message: {}\r\n  };\r\n  \r\n  export default function reducer(\r\n    state = initialMasterclassState,\r\n    action\r\n  ) {\r\n    switch (action.type) {\r\n  \r\n      case ActionTypesMasterclass.FETCH_MASTERCLASS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          list: action.payload,\r\n          message: {}\r\n        };\r\n      case ActionTypesMasterclass.FETCH_MASTERCLASS_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        };\r\n\r\n      case ActionTypesMasterclass.FETCH_INFO_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload,\r\n          message: {}\r\n        };\r\n      case ActionTypesMasterclass.FETCH_INFO_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        };\r\n\r\n      case ActionTypesMasterclass.REGISTER_MASTERCLASS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload,\r\n          message: { failure: false, text: 'Вы успешно записисались на мастеркласс!' }\r\n        }\r\n      case ActionTypesMasterclass.REGISTER_MASTERCLASS_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n\r\n      case ActionTypesUsers.SIGN_OUT_USER_REQUEST:\r\n        return {\r\n          ...initialMasterclassState\r\n        }\r\n    \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  // Action Creators\r\n  export const fetchMasterclassRequest = () => ({\r\n    type: ActionTypesMasterclass.FETCH_MASTERCLASS_REQUEST\r\n  });\r\n  \r\n  export const fetchMasterclassSuccess = (payload) => ({\r\n    type: ActionTypesMasterclass.FETCH_MASTERCLASS_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchMasterclassFailure = (error) => ({\r\n    type: ActionTypesMasterclass.FETCH_MASTERCLASS_FAILURE,\r\n    error\r\n  });\r\n\r\n  export const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesMasterclass.FETCH_INFO_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesMasterclass.FETCH_INFO_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesMasterclass.FETCH_INFO_FAILURE,\r\n    error\r\n  });\r\n  \r\n  export const registerMasterclassRequest = (params) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const registerMasterclassSuccess = (payload) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const registerMasterclassFailure = (error) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_FAILURE,\r\n    error\r\n  });","import {ActionTypesMasterclass} from \"../masterclass\";\r\n\r\nexport const ActionTypesScoutingRequest = {\r\n    FETCH_SCOUTINGREQUEST_REQUEST: 'scoutingRequest/FETCH_scoutingRequest_REQUEST',\r\n    FETCH_SCOUTINGREQUEST_SUCCESS: 'scoutingRequest/FETCH_scoutingRequest_SUCCESS',\r\n    FETCH_SCOUTINGREQUEST_FAILURE: 'scoutingRequest/FETCH_scoutingRequest_FAILURE',\r\n    FETCH_INFO_REQUEST: 'scoutingRequest/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'scoutingRequest/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'scoutingRequest/FETCH_INFO_FAILURE',\r\n    REGISTER_SCOUTINGREQUEST_REQUEST: 'scoutingRequest/REGISTER_SCOUTINGREQUEST_REQUEST',\r\n    REGISTER_SCOUTINGREQUEST_SUCCESS: 'scoutingRequest/REGISTER_SCOUTINGREQUEST_SUCCESS',\r\n    REGISTER_SCOUTINGREQUEST_FAILURE: 'scoutingRequest/REGISTER_SCOUTINGREQUEST_FAILURE'\r\n};\r\n\r\nexport const initialScoutingRequestState = {\r\n    list: [],\r\n    info: {}\r\n};\r\n\r\nexport default function reducer(\r\n    state = initialScoutingRequestState,\r\n    action\r\n) {\r\n    switch (action.type) {\r\n\r\n        case ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list: action.payload\r\n            };\r\n\r\n        case ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n\r\n        case ActionTypesScoutingRequest.FETCH_INFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                info: action.payload\r\n            };\r\n\r\n        case ActionTypesScoutingRequest.FETCH_INFO_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const fetchScoutingRequestRequest = () => ({\r\n    type: ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_REQUEST\r\n});\r\n\r\nexport const fetchScoutingRequestSuccess = (payload) => ({\r\n    type: ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const fetchScoutingRequestFailure = (error) => ({\r\n    type: ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_FAILURE,\r\n    error\r\n});\r\n\r\nexport const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesScoutingRequest.FETCH_INFO_REQUEST,\r\n    params\r\n});\r\n\r\nexport const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesScoutingRequest.FETCH_INFO_SUCCESS,\r\n    payload\r\n});\r\nexport const registerScoutingRequestRequest = (params) => ({\r\n    type: ActionTypesScoutingRequest.REGISTER_SCOUTINGREQUEST_REQUEST,\r\n    params\r\n});\r\nexport const registerScoutingRequestSuccess = (payload) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const registerScoutingRequestFailure = (error) => ({\r\n    type: ActionTypesMasterclass.REGISTER_MASTERCLASS_FAILURE,\r\n    error\r\n});\r\n\r\nexport const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesScoutingRequest.FETCH_INFO_FAILURE,\r\n    error\r\n});","import React, {useState} from 'react'\r\nimport {Header, Button, Form, Modal, Card, Image} from 'semantic-ui-react'\r\nimport plus from \"../../assets/img/plus.svg\";\r\nimport {registerScoutingRequestRequest} from '../../redux/modules/scoutingRequest';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport default function RequestPopUp({ isOpen, setOpen, info}) {\r\n    const [requestObject, setRequestObject] = useState('');\r\n    const [place, setPlace] = useState('');\r\n    const [task, setTask] = useState('');\r\n    const dispatch = useDispatch()\r\n    const isButtonDisabled = requestObject === '' || place === '' || task === ''\r\n\r\n    return (\r\n        <Modal\r\n            open={isOpen}\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            trigger={\r\n                <Card>\r\n                    <Card.Content>\r\n                        <Image\r\n                            src={plus}\r\n                            style={{marginBottom: '1rem'}}\r\n                        />\r\n                        <Header textAlign='center'>Сделать запрос</Header>\r\n                    </Card.Content>\r\n                </Card>\r\n            }\r\n        >\r\n            <Modal.Header>\r\n                Новый запрос\r\n            </Modal.Header>\r\n            <Modal.Content>\r\n                <Form\r\n                    size=\"small\"\r\n                >\r\n                    <Form.Field>\r\n                        <label>Объект запроса</label>\r\n                        <input\r\n                            placeholder='requestObject'\r\n                            onChange={(e) => {setRequestObject(e.target.value)}}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Место</label>\r\n                        <input\r\n                            placeholder='place'\r\n                            onChange={(e) => {setPlace(e.target.value)}}/>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Задача</label>\r\n                        <input\r\n                            placeholder='task'\r\n                            onChange={(e) => {setTask(e.target.value)}}/>\r\n                    </Form.Field>\r\n                </Form>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    content=\"Отмена\"\r\n                    color='black'\r\n                    onClick={(e) => {e.preventDefault(); setOpen(false)}}\r\n                />\r\n                <Button\r\n                    content=\"Отправить запрос\"\r\n                    labelPosition='right'\r\n                    icon='checkmark'\r\n                    positive\r\n                    disabled={isButtonDisabled}\r\n                    onClick={() => dispatch(registerScoutingRequestRequest({\r\n                        requestObject,\r\n                        place,\r\n                        task\r\n                    }))}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n//onClick={() => dispatch(registerMasterclassRequest({_id: info._id}))}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport {fetchScoutingInfoRequest} from '../../redux/modules/scoutingInfo'\r\nimport {Card, Image, Loader, Tab, Header, Form} from 'semantic-ui-react'\r\nimport Info from './Info'\r\nimport Request from './Request'\r\nimport {fetchScoutingRequestRequest} from \"../../redux/modules/scoutingRequest\";\r\nimport RequestPopUp from \"./RequestPopUp\";\r\n\r\nexport default function InfoPanel () {\r\n    const dispatch = useDispatch()\r\n    const scoutingInfo = useSelector(state => state.scoutingInfo.list) || []\r\n    const scoutingRequest = useSelector(state => state.scoutingRequest.list) || []\r\n    const error = useSelector(state => state.scoutingInfo.error)\r\n    const [isNewRequestOpen, setNewRequestOpen] = useState(false)\r\n    \r\n    useEffect(\r\n        () => {\r\n            dispatch(fetchScoutingInfoRequest())\r\n            dispatch(fetchScoutingRequestRequest())\r\n            console.log('FETCH, MOTHRTFUCKER!')\r\n        },\r\n        []\r\n    )\r\n    console.log('scoutingInfo :', scoutingInfo);\r\n    console.log('scoutingRequest :', scoutingRequest);\r\n    console.log('error :', error);\r\n\r\n    const cardsInfo = scoutingInfo.map(info => {\r\n        return (\r\n            <Info info={info}/>\r\n        )\r\n    });\r\n\r\n    const newRequestCard = (\r\n        <RequestPopUp\r\n        isOpen={isNewRequestOpen}\r\n        setOpen={setNewRequestOpen}\r\n        />\r\n    )\r\n    const cardsRequest = [\r\n        newRequestCard,\r\n        ...scoutingRequest.map(info => {\r\n            return (\r\n              <Request info={info}/>\r\n            )\r\n        })\r\n    ]\r\n\r\n    const panes = [\r\n        {\r\n            menuItem: { key: 'Доступная информация', icon: 'users', content: 'Доступная информация' },\r\n            render: () => <Tab.Pane>\r\n                    <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                        {cardsInfo}\r\n                    </Card.Group>\r\n            </Tab.Pane>,\r\n\r\n        },\r\n        {\r\n            menuItem: { key: 'Запросы на разведку', icon: 'users', content: 'Запросы на разведку' },\r\n            render: () => <Tab.Pane>\r\n                <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                    {cardsRequest}\r\n                </Card.Group>\r\n            </Tab.Pane>,\r\n        }\r\n]\r\n    return  <Tab loading={scoutingInfo.length === 0} panes={panes} />\r\n}","import React from 'react'\r\nimport { Route } from \"react-router-dom\";\r\nimport { Header } from 'semantic-ui-react'\r\nimport InfoPanel from './InfoPanel'\r\nimport './Scouting.scss'\r\n\r\nexport default function ScoutingInfo() {\r\n    //TODO: make header dynamic (should show path using breadcrumbs)\r\n    return (\r\n        <div className=\"container\">\r\n            <Header as='h2' attached='top'>\r\n                Информация\r\n            </Header>\r\n            <Route exact path=\"/scouting\">\r\n                <InfoPanel/>\r\n            </Route>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport { Button, Header, Image, Modal, Table, Icon, Message, Card, List, Tab } from 'semantic-ui-react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {registerMasterclassRequest} from '../../redux/modules/masterclass'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function MCTab ({mc}) {\r\n    const message = useSelector(state => state.masterclass.message)\r\n    const user = useSelector(state => state.users.user)\r\n    const isButtonDisabled = mc.students && ((mc.students.length >= mc.max_students) || (mc.students.findIndex(stud => stud.id === user.id) !== -1));\r\n    const messageBlock = <Message positive={!message.failure} negative={message.failure}><Message.Header>{message.text}</Message.Header></Message>\r\n    const mcRows = Object.entries(mc.data || {}).map(([key, value]) => <p key={key}>{`${key}: ${value}`}</p>);\r\n    const students = mc.students ? mc.students.map(\r\n        student => (\r\n          <Table.Row key={student.username}>\r\n            <Table.Cell>\r\n              <Header as='h4' image>\r\n                {student.photo && student.photo !== '' ?\r\n                  <Image src={student.photoUrl} avatar size='mini' /> :\r\n                  <Icon name=\"user\" size=\"mini\"/>\r\n                }\r\n                <Header.Content>\r\n                  {student.name}\r\n                  <Header.Subheader>{student.group}</Header.Subheader>\r\n                </Header.Content>\r\n              </Header>\r\n            </Table.Cell>\r\n          </Table.Row>)\r\n    ) : [];\r\n\r\n\r\n    return (\r\n          <Tab.Pane>\r\n            <Modal.Description>\r\n              <p>Количество человек: {(mc.students && mc.students.length) || 0}/{mc.max_students}</p>\r\n              {mcRows}\r\n              <Table size=\"large\">\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Записавшиеся наблюдатели</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                  {students}\r\n                </Table.Body>\r\n              </Table>\r\n              {message && message.text && message.text !== '' ? messageBlock : <></>}\r\n            </Modal.Description>\r\n          </Tab.Pane>\r\n        ) \r\n} ","import React, {useState} from 'react'\r\nimport { Button, Header, Image, Modal, Table, Icon, Message, Card, List, Tab } from 'semantic-ui-react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {registerMasterclassRequest} from '../../redux/modules/masterclass'\r\nimport eye from '../../assets/img/eye.svg'\r\nimport MCTab from './MCTab'\r\n\r\nexport default function Info ({mcs, name}) {\r\n    const [open, setOpen] = useState(false)\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const dispatch = useDispatch()\r\n\r\n    const first = mcs[0]\r\n    const cardRows = Object.entries(first.data || {}).filter((item, index) => index < 2).map(([key, value]) => <p key={key}>{`${key}: ${value.slice(0,70)}${value.length > 70 ? '...' : ''}`}</p>);\r\n\r\n    const panes = mcs.map(mc => {\r\n        const date = new Date(mc.date)\r\n        const time = date.toTimeString()\r\n        console.log('time :>> ', time);\r\n        return {\r\n            menuItem: time.slice(0,5),\r\n            render: () => (<MCTab mc={mc}/>)\r\n        }\r\n    })\r\n    \r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={first.photo ? `${first.photoUrl}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{first.name}</Card.Header>\r\n                <Card.Meta>{first.category}</Card.Meta>\r\n                <Card.Description>\r\n                  <List>\r\n                    <List.Item>\r\n                      <List.Icon name=\"users\"/>\r\n                      <List.Content>\r\n                          Количество занятий: {mcs.length}\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    {cardRows}\r\n                  </List>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n\r\n    return (\r\n        <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={card}\r\n        >\r\n            <Modal.Header>{first.name}</Modal.Header>\r\n            <Modal.Content image scrolling>\r\n                <Image size='medium' src={first.photo ? `${first.photoUrl}` : eye} spaced=\"right\" />\r\n                <Tab  \r\n                  menu={{ fluid: true, vertical: true, tabular: 'right' }}\r\n                  panes={panes}\r\n                  onTabChange={(e,d,index) => {\r\n                      console.log('e :>> ', e);\r\n                      console.log('d :>> ', d);\r\n                      console.log('index :>> ', index);\r\n                      setActiveTab(d.activeIndex)\r\n                  }}\r\n                />\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n                <Button \r\n                    content=\"Записаться\" \r\n                    labelPosition='right'\r\n                    icon='checkmark'\r\n                    positive\r\n                    onClick={() => dispatch(registerMasterclassRequest({_id: mcs[activeTab]._id}))}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    \r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport {fetchMasterclassRequest} from '../../redux/modules/masterclass'\r\nimport { Card, Loader } from 'semantic-ui-react'\r\nimport Info from './Info'\r\n\r\nfunction InfoPanel() {\r\n    const dispatch = useDispatch()\r\n    const masterclass = useSelector(state => state.masterclass.list) || []\r\n    const error = useSelector(state => state.masterclass.error)\r\n    \r\n    useEffect(\r\n        () => {dispatch(fetchMasterclassRequest())},\r\n        []\r\n    )\r\n    console.log('masterclass :', masterclass);\r\n    console.log('error :', error);\r\n\r\n    const cards = Object.entries(masterclass).map(([name, mcs]) => {\r\n        return (\r\n            <Info key={name} mcs={mcs} name={name}/>\r\n        )\r\n    })\r\n    // const cards = masterclass.map(info => {\r\n    //     return (\r\n    //         <Info key={info && info.id} info={info}/>\r\n    //     )\r\n    // });\r\n    return (\r\n        <>\r\n            <Loader active={masterclass.length === 0}/>\r\n            <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                {cards}\r\n            </Card.Group>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoPanel\r\n","import React from 'react'\r\nimport { Route } from \"react-router-dom\"\r\nimport { Header } from 'semantic-ui-react'\r\nimport InfoPanel from './InfoPanel'\r\nimport './Masterclass.scss'\r\n\r\nexport default function Masterclass() {\r\n    //TODO: make header dynamic (should show path using breadcrumbs)\r\n    return (\r\n        <div className=\"container\">\r\n            <Header as='h2' attached='top'>\r\n                Мастерклассы\r\n            </Header>\r\n            <Route exact path=\"/masterclass\">\r\n                <InfoPanel/>\r\n            </Route>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport eye from '../assets/img/eye.svg'\r\nimport { signOutUserRequest, fetchUserPageRequest } from '../redux/modules/users'\r\nimport { useHistory  } from 'react-router-dom';\r\nimport { \r\n    Header, Image, Button, \r\n    Progress, Grid, Segment, \r\n    Rating, Table, Label,\r\n    Icon\r\n} from 'semantic-ui-react'\r\n\r\nexport default function UserPanel() {\r\n    const dispatch = useDispatch()\r\n    let history = useHistory();\r\n    const user = useSelector(state => state.users.user)\r\n    console.log('user :>> ', user);\r\n    useEffect(\r\n        () => {dispatch(fetchUserPageRequest(user.id))},\r\n        [user]\r\n    )\r\n    const {exams = [], operations = []} = useSelector(state => state.users.page) || {}\r\n    console.log('exams :>> ', exams);\r\n    const examsRows = exams.map(ex => {\r\n        const success = ex.students && ex.students.indexOf(user.id) !== -1\r\n        return (\r\n            <Table.Row key={ex._id} negative={!success} positive={success}>\r\n                <Table.Cell>\r\n                    <Label >{ex.name}</Label>\r\n                </Table.Cell>\r\n                <Table.Cell>{success ? (<Icon name='checkmark'/>) : (<Icon name='close'/>)}</Table.Cell>\r\n            </Table.Row>\r\n        )\r\n    })\r\n    console.log('operations :>> ', operations);\r\n    const operationsRows = operations.map(op => (\r\n        <Table.Row key={op._id} negative={!op.success} positive={op.success}>\r\n            <Table.Cell>\r\n                <Label >{op.name}</Label>\r\n            </Table.Cell>\r\n            <Table.Cell>{op.success ? (<Icon name='checkmark'/>) : (<Icon name='close'/>)}</Table.Cell>\r\n            <Table.Cell>{op.all_points}</Table.Cell>\r\n            <Table.Cell>\r\n                {op.points && op.points[user.id] ? op.points[user.id] : 0}\r\n            </Table.Cell>\r\n        </Table.Row>\r\n    ))\r\n    return (\r\n        <Grid>\r\n            <Grid.Row columns={2}>\r\n                <Grid.Column computer={6} mobile={16}>\r\n                    <Image\r\n                        rounded={true}\r\n                        size=\"medium\"\r\n                        floated=\"left\"\r\n                        src={user.photo && user.photo !== '' ? user.photoUrl : eye}\r\n                    />\r\n                </Grid.Column>\r\n                <Grid.Column computer={10} mobile={16}>\r\n                    <Segment size=\"massive\">\r\n                        <Header>Имя : {user.name}</Header>\r\n                        <p>Боевая группа: {user.group}</p>\r\n                        <p>Жизни: <Rating icon='heart' rating={user.lives || 0} maxRating={10} disabled={true}/></p>\r\n                        <p>Уровень: <Rating icon='star' rating={user.level} maxRating={3} disabled={true}/></p>\r\n                        <Progress \r\n                            value={user.experience} \r\n                            total={user.level * 50} \r\n                            progress='ratio' \r\n                            indicating\r\n                        />\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <Segment >\r\n                        <Header>Высадки</Header>\r\n                        <Table celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Успех</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Всего баллов</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Получено баллов</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>\r\n                                {operationsRows}\r\n                            </Table.Body>\r\n                        </Table>\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <Segment>\r\n                    <Header>Экзамены</Header>\r\n                        <Table celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Успех</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>\r\n                                {examsRows}\r\n                            </Table.Body>\r\n                        </Table>\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column floated=\"right\" stretched={false} width={2}>\r\n                    <Button\r\n                        content=\"Выйти\"\r\n                        color='black'\r\n                        onClick={(e) => {\r\n                            e.preventDefault()\r\n                            dispatch(signOutUserRequest())\r\n                            history.push('/')\r\n                            }}\r\n                    />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>)\r\n}","import {ActionTypesUsers} from '../users'\r\n\r\nexport const ActionTypesOperation = {\r\n    FETCH_OPERATION_REQUEST: 'operation/FETCH_OPERATION_REQUEST',\r\n    FETCH_OPERATION_SUCCESS: 'operation/FETCH_OPERATION_SUCCESS',\r\n    FETCH_OPERATION_FAILURE: 'operation/FETCH_OPERATION_FAILURE',\r\n    FETCH_INFO_REQUEST: 'operation/FETCH_INFO_REQUEST',\r\n    FETCH_INFO_SUCCESS: 'operation/FETCH_INFO_SUCCESS',\r\n    FETCH_INFO_FAILURE: 'operation/FETCH_INFO_FAILURE',\r\n    REGISTER_OPERATION_REQUEST: 'operation/REGISTER_OPERATION_REQUEST',\r\n    REGISTER_OPERATION_SUCCESS: 'operation/REGISTER_OPERATION_SUCCESS',\r\n    REGISTER_OPERATION_FAILURE: 'operation/REGISTER_OPERATION_FAILURE',\r\n    FETCH_OPERATION_VIEW_REQUEST: 'operation/FETCH_OPERATION_VIEW_REQUEST',\r\n    FETCH_OPERATION_VIEW_SUCCESS: 'operation/FETCH_OPERATION_VIEW_SUCCESS',\r\n    FETCH_OPERATION_VIEW_FAILURE: 'operation/FETCH_OPERATION_VIEW_FAILURE',\r\n    ACTIVATE_USER_REQUEST: 'operation/ACTIVATE_USER_REQUEST',\r\n    ACTIVATE_USER_SUCCESS: 'operation/ACTIVATE_USER_SUCCESS',\r\n    ACTIVATE_USER_FAILURE: 'operation/ACTIVATE_USER_FAILURE',\r\n    KILL_USER_REQUEST: 'operation/ACTIVATE_USER_REQUEST',\r\n    KILL_USER_SUCCESS: 'operation/ACTIVATE_USER_SUCCESS',\r\n    KILL_USER_FAILURE: 'operation/ACTIVATE_USER_FAILURE',\r\n  };\r\n  \r\n  export const initialOperationState = {\r\n    list: [],\r\n    info: {},\r\n    message: {},\r\n    view: []\r\n  };\r\n  \r\n  export default function reducer(\r\n    state = initialOperationState,\r\n    action\r\n  ) {\r\n    console.log('action :>> ', action);\r\n    switch (action.type) {\r\n  \r\n      case ActionTypesOperation.FETCH_OPERATION_SUCCESS:\r\n        return {\r\n          ...state,\r\n          list: action.payload,\r\n          message: {}\r\n        }\r\n      case ActionTypesOperation.FETCH_OPERATION_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n\r\n      case ActionTypesOperation.FETCH_INFO_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload,\r\n          message: {}\r\n        }\r\n      case ActionTypesOperation.FETCH_INFO_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n\r\n      case ActionTypesOperation.REGISTER_OPERATION_SUCCESS:\r\n        return {\r\n          ...state,\r\n          info: action.payload,\r\n          message: { failure: false, text: 'Вы успешно записисались на высадку!' }\r\n        }\r\n      case ActionTypesOperation.REGISTER_OPERATION_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n  \r\n      case ActionTypesOperation.FETCH_OPERATION_VIEW_SUCCESS:\r\n        return {\r\n          ...state,\r\n          view: action.payload,\r\n          message: {}\r\n        }\r\n      case ActionTypesOperation.FETCH_OPERATION_VIEW_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n\r\n      case ActionTypesOperation.ACTIVATE_USER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          message: { failure: false, text: 'Вы успешно активировались!' }\r\n        }\r\n      case ActionTypesOperation.ACTIVATE_USER_FAILURE:\r\n        return {\r\n          ...state,\r\n          message: { failure: true, text: action.error.message}\r\n        }\r\n      \r\n        case ActionTypesOperation.KILL_USER_SUCCESS:\r\n          return {\r\n            ...state,\r\n            message: { failure: false, text: 'Смерть подтверждена!' }\r\n          }\r\n        case ActionTypesOperation.KILL_USER_FAILURE:\r\n          return {\r\n            ...state,\r\n            message: { failure: true, text: action.error.message}\r\n          }\r\n\r\n      case ActionTypesUsers.SIGN_OUT_USER_REQUEST:\r\n        return {\r\n          ...initialOperationState\r\n        }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  // Action Creators\r\n  export const fetchOperationRequest = () => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_REQUEST\r\n  });\r\n  \r\n  export const fetchOperationSuccess = (payload) => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchOperationFailure = (error) => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_FAILURE,\r\n    error\r\n  });\r\n\r\n  export const fetchInfoRequest = (params) => ({\r\n    type: ActionTypesOperation.FETCH_INFO_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const fetchInfoSuccess = (payload) => ({\r\n    type: ActionTypesOperation.FETCH_INFO_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchInfoFailure = (error) => ({\r\n    type: ActionTypesOperation.FETCH_INFO_FAILURE,\r\n    error\r\n  });\r\n  \r\n  export const registerOperationRequest = (params) => ({\r\n    type: ActionTypesOperation.REGISTER_OPERATION_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const registerOperationSuccess = (payload) => ({\r\n    type: ActionTypesOperation.REGISTER_OPERATION_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const registerOperationFailure = (error) => ({\r\n    type: ActionTypesOperation.REGISTER_OPERATION_FAILURE,\r\n    error\r\n  });\r\n\r\n  \r\n  export const fetchOperationViewRequest = () => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_VIEW_REQUEST\r\n  });\r\n  \r\n  export const fetchOperationViewSuccess = (payload) => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_VIEW_SUCCESS,\r\n    payload\r\n  });\r\n  \r\n  export const fetchOperationViewFailure = (error) => ({\r\n    type: ActionTypesOperation.FETCH_OPERATION_VIEW_FAILURE,\r\n    error\r\n  });\r\n  \r\n  export const activateUserRequest = (params) => ({\r\n    type: ActionTypesOperation.ACTIVATE_USER_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const activateUserSuccess = () => ({\r\n    type: ActionTypesOperation.ACTIVATE_USER_SUCCESS\r\n  });\r\n  \r\n  export const activateUserFailure = (error) => ({\r\n    type: ActionTypesOperation.ACTIVATE_USER_FAILURE,\r\n    error\r\n  });\r\n\r\n  export const killUserRequest = (params) => ({\r\n    type: ActionTypesOperation.KILL_USER_REQUEST,\r\n    params\r\n  });\r\n  \r\n  export const killUserSuccess = () => ({\r\n    type: ActionTypesOperation.KILL_USER_SUCCESS\r\n  });\r\n  \r\n  export const killUserFailure = (error) => ({\r\n    type: ActionTypesOperation.KILL_USER_FAILURE,\r\n    error\r\n  });","import React, {useState} from 'react'\r\nimport { Button, Header, Image, Modal, Container, Table, Icon, Message, Card, List } from 'semantic-ui-react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {registerOperationRequest, activateUserRequest, killUserRequest} from '../../redux/modules/operation'\r\nimport eye from '../../assets/img/eye.svg'\r\nimport moment from 'moment'\r\n\r\nexport default function Info ({info}) {\r\n    const [open, setOpen] = useState(false)\r\n    const message = useSelector(state => state.operation.message)\r\n    const user = useSelector(state => state.users.user)\r\n    console.log('user :>> ', user);\r\n    const dispatch = useDispatch()\r\n    const isAdmin = user.roles && user.roles.indexOf('ROLE_ADMIN') !== -1;\r\n    const isModerator = user.roles && user.roles.indexOf('ROLE_MODERATOR') !== -1\r\n\r\n    const isUserRegistred = info.users && info.users.findIndex(usr => usr._id === user.id) !== -1\r\n    const isButtonRegisterDisabled = isUserRegistred;\r\n    const isButtonActivateDisabled = !(moment().isBetween(moment(info.date).subtract(15, 'minutes'), moment(info.date)))\r\n    const messageBlock = <Message positive={!message.failure} negative={message.failure}><Message.Header>{message.text}</Message.Header></Message>\r\n    const cardRows = Object.entries(info.data || {}).filter((item, index) => index < 2).map(([key, value]) => <p key={key}>{`${key}: ${value.slice(0,70)}${value.length > 70 ? '...' : ''}`}</p>);\r\n    const infoRows = Object.entries(info.data || {}).map(([key, value]) => <p key={key}>{`${key}: ${value}`}</p>);\r\n    const users = info.users ? info.users.map(\r\n        usr => (\r\n          <Table.Row key={usr.username}>\r\n            <Table.Cell>\r\n              <Header as='h4' image>\r\n                {usr.photo && usr.photo !== '' ?\r\n                  <Image src={usr.photoUrl} avatar size='mini' /> :\r\n                  <Icon name=\"user\" size=\"mini\"/>\r\n                }\r\n                <Header.Content>\r\n                  {usr.name}\r\n                  <Header.Subheader>{usr.group}</Header.Subheader>\r\n                </Header.Content>\r\n                {isModerator &&\r\n                 <Button\r\n                          icon='user times'\r\n                          color='red'\r\n                          onClick={() => dispatch(killUserRequest({_id: usr._id}))}\r\n                    />\r\n                }\r\n              </Header>\r\n            </Table.Cell>\r\n          </Table.Row>)\r\n    ) : [];\r\n    \r\n    const card = (\r\n        <Card >\r\n            <Card.Content>\r\n                <Image\r\n                    src={info.photo ? `${info.photoUrl}` : eye}\r\n                    style={{marginBottom: '1rem'}}\r\n                />\r\n                <Card.Header>{info.name}</Card.Header>\r\n                <Card.Meta>{info.category}</Card.Meta>\r\n                <Card.Description>\r\n                  <List>\r\n                    <List.Item>\r\n                      <List.Icon name=\"users\"/>\r\n                      <List.Content>\r\n                          Количество заявок: {info.users.length}/{info.max_users}\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    {cardRows}\r\n                  </List>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n\r\n    return (\r\n        <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={card}\r\n        >\r\n            <Modal.Header>\r\n              {info.name}\r\n              { isAdmin ? (\r\n                <Button\r\n                  floated=\"right\"\r\n                  content=\"Активировать всех\"\r\n                  labelPosition='right'\r\n                  icon='crosshairs'\r\n                  color='red'\r\n                  onClick={() => dispatch(activateUserRequest({opId: info._id }))}\r\n                />\r\n              ): <></>}\r\n            </Modal.Header>\r\n            <Modal.Content image scrolling>\r\n                <Image size='medium' src={info.photo ? `${info.photoUrl}` : eye} spaced=\"right\"/>\r\n                <Modal.Description>\r\n                  <Table size=\"large\">\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Старший наблюдатель</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                      {info.manager ? (\r\n                        <Header as='h4' image>\r\n                        {info.manager.photo && info.manager.photo !== '' ?\r\n                          <Image src={info.manager.photoUrl} avatar size='mini' /> :\r\n                          <Icon name=\"user\" size=\"mini\"/>\r\n                        }\r\n                        <Header.Content>\r\n                          {info.manager.name}\r\n                          <Header.Subheader>{info.manager.group}</Header.Subheader>\r\n                        </Header.Content>\r\n                      </Header>\r\n                      ) : (<Header as='h4' image>\r\n                             <Icon name=\"user\" size=\"mini\"/>\r\n                          <Header.Content>\r\n                            Отсутствует\r\n                          </Header.Content>\r\n                        </Header>)}\r\n                      \r\n                    </Table.Body>\r\n                  </Table>\r\n                  <p>Количество заявок: {(info.users && info.users.length) || 0}/{info.max_users}</p>\r\n                  {infoRows}\r\n                  <Table size=\"large\">\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Записавшиеся наблюдатели</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {users}\r\n                    </Table.Body>\r\n                  </Table>\r\n                  {message && message.text && message.text !== '' ? messageBlock : <></>}\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    color='black'\r\n                    content=\"Закрыть\"\r\n                    icon='angle left'\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n                { isUserRegistred ? (\r\n                  <>\r\n                    <Button\r\n                          content=\"Активировать\"\r\n                          labelPosition='right'\r\n                          icon='crosshairs'\r\n                          color='blue'\r\n                          disabled={isButtonActivateDisabled}\r\n                          onClick={() => dispatch(activateUserRequest({_id: info._id}))}\r\n                    />\r\n                    <Button\r\n                          content=\"Смерть\"\r\n                          labelPosition='right'\r\n                          icon='user times'\r\n                          color='red'\r\n                          disabled={!isButtonActivateDisabled}\r\n                          onClick={() => dispatch(killUserRequest({_id: user.id}))}\r\n                    />\r\n                </>\r\n                ) : (\r\n                  <Button \r\n                    content=\"Записаться\" \r\n                    labelPosition='right'\r\n                    icon='checkmark'\r\n                    positive\r\n                    disabled={isButtonRegisterDisabled}\r\n                    onClick={() => dispatch(registerOperationRequest({_id: info._id}))}\r\n                />\r\n                  )\r\n                }\r\n                \r\n            </Modal.Actions>\r\n        </Modal>\r\n    \r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport {fetchOperationRequest} from '../../redux/modules/operation'\r\nimport { Card, Loader, Header } from 'semantic-ui-react'\r\nimport Info from './Info'\r\n\r\nfunction InfoPanel() {\r\n    const dispatch = useDispatch()\r\n    const operation = useSelector(state => state.operation.list) || []\r\n    const error = useSelector(state => state.operation.error)\r\n    \r\n    useEffect(\r\n        () => {dispatch(fetchOperationRequest())},\r\n        []\r\n    )\r\n    console.log('operation :', operation);\r\n    console.log('error :', error);\r\n\r\n    const cards = operation.map(info => {\r\n        return (\r\n            <Info info={info}/>\r\n        )\r\n    });\r\n    return (\r\n        <>\r\n            <Header as='h2' attached='top'>\r\n                Высадки\r\n            </Header>\r\n            <Loader active={operation.length === 0}/>\r\n            <Card.Group stackable={true} className={\"cardGroup\"}>\r\n                {cards}\r\n            </Card.Group>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoPanel\r\n","import React from 'react'\r\nimport { Card, Header, Image, Modal, Button } from 'semantic-ui-react'\r\nimport eye from '../../assets/img/eye.svg'\r\n\r\nexport default function ViewCard ({operation, open, setOpen}) {\r\n    const userCards = operation.users.filter(user => user.active).map(user => (\r\n        <Card\r\n          key={user._id}\r\n          className={`watcherCard ${user.alive ? 'alive' : 'dead'}`}\r\n        >\r\n           {user.gif ? <Image src={user.gifUrl} wrapped ui={false}/> : <></>}\r\n            <Card.Content>\r\n                <Header as='h6'>{user.name}</Header>    \r\n            </Card.Content>\r\n        </Card>\r\n    ))\r\n    return (\r\n        <Modal\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            size='fullscreen'\r\n            trigger={\r\n            <div className=\"viewCard\">\r\n                <Header as='h4'>{operation.name}</Header>\r\n                <Card.Group\r\n                  itemsPerRow={5}\r\n                  doubling\r\n                  centered\r\n                >\r\n                    {userCards}\r\n                </Card.Group>\r\n            </div>}\r\n        >\r\n        <Modal.Header>{operation.name}</Modal.Header>\r\n        <Modal.Content image scrolling>\r\n          <Card.Group\r\n            centered\r\n            doubling\r\n            itemsPerRow={6}\r\n          >\r\n            {userCards}\r\n          </Card.Group>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color='black' onClick={() => setOpen(false)}>\r\n            Закрыть\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n        \r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport {fetchOperationViewRequest} from '../../redux/modules/operation'\r\nimport { Grid, Loader} from 'semantic-ui-react'\r\nimport ViewCard from './ViewCard'\r\n\r\nexport default function View () {\r\n    const dispatch = useDispatch();\r\n    const view = useSelector(state => state.operation.view, shallowEqual) || []\r\n    const [openedOperation, setOpenedOperation] = useState()\r\n\r\n    useEffect(\r\n        () => {\r\n            dispatch(fetchOperationViewRequest())\r\n            const interval = setInterval(\r\n              () => dispatch(fetchOperationViewRequest()),\r\n              10000\r\n            );\r\n            return () => clearInterval(interval);\r\n        },\r\n        []\r\n    )\r\n    \r\n    const columns = view.map((operation, index) => (\r\n        \r\n        <Grid.Column key={operation._id} className=\"viewColumn\">\r\n            <ViewCard \r\n              operation={operation}\r\n              open={openedOperation === index}\r\n              setOpen={(open) => {setOpenedOperation(open ? index : undefined)}}\r\n            />\r\n        </Grid.Column>\r\n    ))\r\n    // const rows = [];\r\n    // for (let i = 0; i < columns.length / 2; i++) {\r\n    //     rows.push(<Grid.Row>\r\n    //         {columns[i*2]}\r\n    //         {columns[i*2+1]}\r\n    //     </Grid.Row>)\r\n    // }\r\n    return (\r\n        <>\r\n            <Loader active={view.length === 0}/>\r\n            <Grid columns={2} stackable>\r\n                {columns}\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Route } from \"react-router-dom\"\r\nimport { Header } from 'semantic-ui-react'\r\nimport InfoPanel from './InfoPanel'\r\nimport View from './View'\r\nimport './Operation.scss'\r\n\r\nexport default function Operation() {\r\n    //TODO: make header dynamic (should show path using breadcrumbs)\r\n    return (\r\n        <div className=\"container\">\r\n            <Route exact path=\"/operation/view\">\r\n                <View/>\r\n            </Route>\r\n            <Route exact path=\"/operation\">\r\n                <InfoPanel/>\r\n            </Route>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\r\nimport { Segment, Sidebar } from 'semantic-ui-react'\r\nimport SidebarMenu from './SidebarMenu'\r\nimport Library from './library/Library'\r\nimport Scouting from './scoutingInfo/ScoutingInfo'\r\nimport Masterclass from './masterclass/Masterclass'\r\nimport UserPanel from './UserPanel'\r\nimport Operation from './operation/Operation'\r\nimport '../assets/styles/App.scss'\r\nimport {autoupdateUserRequest} from '../redux/modules/users'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n\r\nexport default function App() {\r\n    const dispatch = useDispatch();\r\n    const token = localStorage.getItem('token');\r\n    const user = useSelector(state => state.users.user)\r\n    console.log('user :>> ', user);\r\n    useEffect(() => {\r\n      dispatch(autoupdateUserRequest())\r\n    }, [token, user.id])\r\n    return (\r\n      <Router>\r\n        <Sidebar.Pushable>\r\n          <SidebarMenu/>\r\n          <Sidebar.Pusher>\r\n            <Segment style={({minHeight: '100%'})}>\r\n              <Switch>\r\n                <Route path=\"/library\">\r\n                  <Library />\r\n                </Route>\r\n                  <Route path=\"/scouting\">\r\n                      <Scouting/>\r\n                  </Route>\r\n                <Route path=\"/user\">\r\n                  <UserPanel />\r\n                </Route>\r\n                <Route path=\"/masterclass\">\r\n                  <Masterclass />\r\n                </Route>\r\n                <Route path=\"/operation\">\r\n                   <Operation />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Redirect to=\"/library\" />\r\n                </Route>\r\n              </Switch>\r\n            </Segment>\r\n          </Sidebar.Pusher>\r\n        </Sidebar.Pushable>\r\n      </Router>\r\n    )\r\n}","export const API_HTTP = process.env.REACT_APP_API_HTTP || \"http://localhost:5000\"","import axios from 'axios';\r\n\r\nclass Api {\r\n  instance;\r\n\r\n  constructor(options = {}) {\r\n    this.instance = axios.create({\r\n      headers: {'X-Auth-Header': ''},\r\n      ...options,\r\n    });\r\n\r\n    this.instance.interceptors.response.use((response) => {\r\n      return response.data;\r\n    });\r\n  }\r\n\r\n  getInstance() {\r\n    return this.instance;\r\n  }\r\n}\r\n\r\nexport const api = new Api().getInstance();\r\n\r\nexport const createRequest = (payload) => {\r\n  const token = localStorage.getItem('token');\r\n  console.log('token :>> ', token);\r\n  return api({\r\n    ...payload,\r\n    headers: {\r\n      ...payload.headers,\r\n      'x-access-token': token || ''\r\n    }\r\n  });\r\n//   return Promise.resolve({\r\n//     data: [\r\n//     {\r\n//         \"infoId\": 1,\r\n//         \"name\": \"1\",\r\n//         \"data\": {\r\n//           'name': 'Коммандор',\r\n//           'description': '[ДАННЫЕ УДАЛЕНЫ]'\r\n//         },\r\n//         \"category\": \"PERSON\",\r\n//         \"photo\": null,\r\n//         \"status\": \"AVAILABLE\"\r\n//     },\r\n//     {\r\n//         \"infoId\": 2,\r\n//         \"name\": \"2\",\r\n//         \"data\": {'test': 'test'},\r\n//         \"category\": \"PERSON\",\r\n//         \"photo\": null,\r\n//         \"status\": \"AVAILABLE\"\r\n//     }\r\n// ]})\r\n};","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\n\r\nimport {\r\n  ActionTypesLibrary,\r\n  fetchLibraryFailure,\r\n  fetchLibrarySuccess, \r\n  fetchInfoFailure, \r\n  fetchInfoSuccess\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\nexport function* fetchLibraryWorker({type, params = {}}) { //first arg = action\r\n  const { _id } = params \r\n  let url = _id ? `${API_HTTP}/library/${_id}` : `${API_HTTP}/library`\r\n  if (params.type) {\r\n    url = url.concat(`?type=${params.type}`)\r\n  }\r\n  const request = {\r\n    method: 'get',\r\n    url\r\n  };\r\n\r\n  try {\r\n    const response = yield call(createRequest, request);\r\n    console.log('response :', response);\r\n    if (type === ActionTypesLibrary.FETCH_LIBRARY_REQUEST) {\r\n      yield put(fetchLibrarySuccess(response.map(info => ({...info, photoUrl: `${API_HTTP}/images/${info.photo}`, attachmentUrls: info.attachments && info.attachments.map( attach => `${API_HTTP}/${attach}`)}))));\r\n    } else {\r\n      yield put(fetchInfoSuccess({...response, photoUrl: `${API_HTTP}/images/${response.photo}`, attachmentUrls: response.attachments && response.attachments.map( attach => `${API_HTTP}/${attach}`)}));\r\n    }\r\n  } catch (e) {\r\n    if (type === ActionTypesLibrary.FETCH_LIBRARY_REQUEST) {\r\n      yield put(fetchLibraryFailure((e.response && e.response.data) || e));\r\n    } else {\r\n      yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* watchLibraryActionsSaga() {\r\n  yield all([\r\n    takeEvery(ActionTypesLibrary.FETCH_LIBRARY_REQUEST, fetchLibraryWorker),\r\n    takeEvery(ActionTypesLibrary.FETCH_INFO_REQUEST, fetchLibraryWorker)\r\n  ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n  ActionTypesUsers,\r\n  signUpUserSuccess,\r\n  signUpUserFailure, \r\n  signInUserSuccess, \r\n  signInUserFailure,\r\n  autoupdateUserSuccess,\r\n  autoupdateUserFailure,\r\n  fetchUserPageSuccess,\r\n  fetchUserPageFailure\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\nexport function* singUpUserWorker({type, userInfo = {}}) {\r\n    const url = `${API_HTTP}/auth/signup`;\r\n    const request = {\r\n        method: 'post',\r\n        url,\r\n        data: {...userInfo}\r\n    };\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :>> ', response);\r\n        yield put(signUpUserSuccess(response))\r\n    } catch (e) {;\r\n        yield put(signUpUserFailure((e.response && e.response.data) || e));\r\n    }\r\n}\r\n\r\nexport function* singInUserWorker({type, userInfo = {}}) {\r\n  const url = `${API_HTTP}/auth/signin`;\r\n  const request = {\r\n      method: 'post',\r\n      url,\r\n      data: {...userInfo}\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(signInUserSuccess({...response, photoUrl: `${API_HTTP}/images/${response.photo}`}))\r\n  } catch (e) {;\r\n      yield put(signInUserFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* autoupdateUserWorker({type}) {\r\n  const url = `${API_HTTP}/auth/autoupdate`;\r\n  const request = {\r\n      method: 'post',\r\n      url\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(autoupdateUserSuccess({...response, photoUrl: `${API_HTTP}/images/${response.photo}`}))\r\n  } catch (e) {;\r\n      yield put(autoupdateUserFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* fetchUserPageWorker({type, userId}) {\r\n  try {\r\n    const examRequest = {\r\n        method: 'get',\r\n        url: `${API_HTTP}/exam/user/${userId}`\r\n    };\r\n    const exams = yield call(createRequest, examRequest);\r\n    console.log('exams :>> ', exams);\r\n    const operationsRequest = {\r\n        method: 'get',\r\n        url: `${API_HTTP}/operation/user/${userId}`\r\n    };\r\n    const operations = yield call(createRequest, operationsRequest);\r\n    console.log('operations :>> ', operations);\r\n    yield put(fetchUserPageSuccess({exams, operations}))\r\n  } catch (e) {\r\n    yield put(fetchUserPageFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* watchUsersActionsSaga() {\r\n  yield all([\r\n    takeEvery(ActionTypesUsers.SIGN_UP_USER_REQUEST, singUpUserWorker),\r\n    takeEvery(ActionTypesUsers.SIGN_IN_USER_REQUEST, singInUserWorker),\r\n    takeEvery(ActionTypesUsers.AUTOUPDATE_USER_REQUEST, autoupdateUserWorker),\r\n    takeEvery(ActionTypesUsers.FETCH_USER_PAGE_REQUEST, fetchUserPageWorker)\r\n  ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n  ActionTypesMasterclass,\r\n  fetchMasterclassFailure,\r\n  fetchMasterclassSuccess, \r\n  fetchInfoFailure, \r\n  fetchInfoSuccess,\r\n  registerMasterclassSuccess,\r\n  registerMasterclassFailure\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\nexport function* fetchMasterclassWorker({type, params = {}}) { //first arg = action\r\n  const { _id } = params \r\n  let url = _id ? `${API_HTTP}/masterclass/${_id}` : `${API_HTTP}/masterclass/mapped`\r\n  if (params.type) {\r\n    url = url.concat(`?type=${params.type}`)\r\n  }\r\n  const request = {\r\n    method: 'get',\r\n    url\r\n  };\r\n\r\n  try {\r\n    const response = yield call(createRequest, request);\r\n    console.log('response :', response);\r\n    if (type === ActionTypesMasterclass.FETCH_MASTERCLASS_REQUEST) {\r\n      yield put(fetchMasterclassSuccess(\r\n        Object.fromEntries(Object.entries(response).map(([key, infos]) => {\r\n          return [key, infos.map(info => (\r\n            {\r\n              ...info,\r\n              photoUrl: `${API_HTTP}/images/${info.photo}`,\r\n              students: info.students.map( student => ({...student, photoUrl: `${API_HTTP}/images/${student.photo}`}))\r\n            }\r\n            )\r\n          )]\r\n        })\r\n      )));\r\n    } else {\r\n      yield put(fetchInfoSuccess(\r\n        {\r\n          ...response,\r\n          photoUrl: `${API_HTTP}/images/${response.photo}`,\r\n          students: response.students.map( student => ({...student, photoUrl: `${API_HTTP}/images/${student.photo}`}))\r\n        }\r\n      ));\r\n    }\r\n  } catch (e) {\r\n    if (type === ActionTypesMasterclass.FETCH_MASTERCLASS_REQUEST) {\r\n      yield put(fetchMasterclassFailure((e.response && e.response.data) || e));\r\n    } else {\r\n      yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* registerMasterclassWorker({type, params = {}}) {\r\n  const { _id } = params \r\n  const url = `${API_HTTP}/masterclass/${_id}/register`;\r\n  const request = {\r\n      method: 'post',\r\n      url\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(registerMasterclassSuccess(\r\n        {\r\n          ...response,\r\n          photoUrl: `${API_HTTP}/images/${response.photo}`,\r\n          students: response.students.map( student => ({...student, photoUrl: `${API_HTTP}/images/${student.photo}`}))\r\n        }\r\n      ))\r\n  } catch (e) {\r\n    yield put(registerMasterclassFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* watchMasterclassActionsSaga() {\r\n  yield all([\r\n    takeEvery(ActionTypesMasterclass.FETCH_MASTERCLASS_REQUEST, fetchMasterclassWorker),\r\n    takeEvery(ActionTypesMasterclass.FETCH_INFO_REQUEST, fetchMasterclassWorker),\r\n    takeEvery(ActionTypesMasterclass.REGISTER_MASTERCLASS_REQUEST, registerMasterclassWorker)\r\n  ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n  ActionTypesOperation,\r\n  fetchOperationFailure,\r\n  fetchOperationSuccess, \r\n  fetchInfoFailure, \r\n  fetchInfoSuccess,\r\n  registerOperationSuccess,\r\n  registerOperationFailure,\r\n  fetchOperationViewFailure,\r\n  fetchOperationViewSuccess, \r\n  activateUserSuccess,\r\n  activateUserFailure,\r\n  killUserSuccess,\r\n  killUserFailure\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\nexport function* fetchOperationWorker({type, params = {}}) { //first arg = action\r\n  const { _id } = params \r\n  let url = _id ? `${API_HTTP}/operation/${_id}` : `${API_HTTP}/operation`\r\n  if (params.type) {\r\n    url = url.concat(`?type=${params.type}`)\r\n  }\r\n  const request = {\r\n    method: 'get',\r\n    url\r\n  };\r\n\r\n  try {\r\n    const response = yield call(createRequest, request);\r\n    console.log('response :', response);\r\n    if (type === ActionTypesOperation.FETCH_OPERATION_REQUEST) {\r\n      yield put(fetchOperationSuccess(response.map(info => (\r\n        {\r\n          ...info,\r\n          photoUrl: `${API_HTTP}/images/${info.photo}`,\r\n          manager: info.manager && {...info.manager, photoUrl: `${API_HTTP}/images/${info.manager.photo}`},\r\n          users: info.users.map( user => ({...user, photoUrl: `${API_HTTP}/images/${user.photo}`}))\r\n        }\r\n        )\r\n      )));\r\n    } else {\r\n      yield put(fetchInfoSuccess(\r\n        {\r\n          ...response,\r\n          photoUrl: `${API_HTTP}/images/${response.photo}`,\r\n          users: response.users.map( user => ({...user, photoUrl: `${API_HTTP}/images/${user.photo}`}))\r\n        }\r\n      ));\r\n    }\r\n  } catch (e) {\r\n    if (type === ActionTypesOperation.FETCH_OPERATION_REQUEST) {\r\n      yield put(fetchOperationFailure((e.response && e.response.data) || e));\r\n    } else {\r\n      yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* registerOperationWorker({type, params = {}}) {\r\n  const { _id } = params \r\n  const url = `${API_HTTP}/operation/${_id}/register`;\r\n  const request = {\r\n      method: 'post',\r\n      url\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(registerOperationSuccess(\r\n        {\r\n          ...response,\r\n          photoUrl: `${API_HTTP}/images/${response.photo}`,\r\n          users: response.users.map( user => ({...user, photoUrl: `${API_HTTP}/images/${user.photo}`}))\r\n        }\r\n      ))\r\n  } catch (e) {\r\n    yield put(registerOperationFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* fetchOperationViewWorker({type, params = {}}) {\r\n  const url = `${API_HTTP}/operation/view`;\r\n  const request = {\r\n      method: 'get',\r\n      url\r\n  };\r\n  try {\r\n      const response = yield call(createRequest, request);\r\n      console.log('response :>> ', response);\r\n      yield put(fetchOperationViewSuccess(\r\n        response.map(\r\n          operation => ({\r\n            ...operation,\r\n            users: operation.users.map( user => ({...user, gifUrl: `${API_HTTP}/gifs/${user.gif}`}))\r\n          })\r\n        )\r\n      ))\r\n  } catch (e) {\r\n    yield put(fetchOperationViewFailure((e.response && e.response.data) || e));\r\n  }\r\n}\r\n\r\nexport function* activateUserWorker({type, params = {}}) {\r\n  const { _id, opId } = params \r\n  if ( _id) {\r\n    yield put(activateUserSuccess())\r\n  } else {\r\n    const url = `${API_HTTP}/user/activateOperation/${opId}`\r\n    const request = {\r\n      method: 'get',\r\n      url\r\n    };\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :>> ', response);\r\n        yield put(activateUserSuccess())\r\n    } catch (e) {\r\n      yield put(activateUserFailure((e.response && e.response.data) || e));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* killUserWorker({type, params = {}}) {\r\n  const { _id } = params \r\n  if ( _id) {\r\n    const url = `${API_HTTP}/user/${_id}/kill`\r\n    const request = {\r\n      method: 'get',\r\n      url\r\n    };\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :>> ', response);\r\n        yield put(killUserSuccess())\r\n    } catch (e) {\r\n      yield put(killUserFailure((e.response && e.response.data) || e));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* watchOperationActionsSaga() {\r\n  yield all([\r\n    takeEvery(ActionTypesOperation.FETCH_OPERATION_REQUEST, fetchOperationWorker),\r\n    takeEvery(ActionTypesOperation.FETCH_INFO_REQUEST, fetchOperationWorker),\r\n    takeEvery(ActionTypesOperation.REGISTER_OPERATION_REQUEST, registerOperationWorker),\r\n    takeEvery(ActionTypesOperation.FETCH_OPERATION_VIEW_REQUEST, fetchOperationViewWorker),\r\n    takeEvery(ActionTypesOperation.ACTIVATE_USER_REQUEST, activateUserWorker),\r\n    takeEvery(ActionTypesOperation.KILL_USER_REQUEST, killUserWorker)\r\n  ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n    ActionTypesScoutingInfo,\r\n    fetchScoutingInfoFailure,\r\n    fetchScoutingInfoSuccess,\r\n    fetchInfoFailure,\r\n    fetchInfoSuccess\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\n\r\n\r\nexport function* fetchScoutingInfoWorker({type, params = {}}) { //first arg = action\r\n    const { _id } = params\r\n    let url = _id ? `${API_HTTP}/scoutingInfo/${_id}` : `${API_HTTP}/scoutingInfo`\r\n    if (params.type) {\r\n        url = url.concat(`?type=${params.type}`)\r\n    }\r\n    const request = {\r\n        method: 'get',\r\n        url\r\n    };\r\n\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :', response);\r\n        if (type === ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_REQUEST) {\r\n            yield put(fetchScoutingInfoSuccess(response.map(info => ({...info, photoUrl: `${API_HTTP}/images/${info.photo}`}))));\r\n        } else {\r\n            yield put(fetchInfoSuccess({...response, photoUrl: `${API_HTTP}/images/${response.photo}`}));\r\n        }\r\n    } catch (e) {\r\n        if (type === ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_REQUEST) {\r\n            yield put(fetchScoutingInfoFailure((e.response && e.response.data) || e));\r\n        } else {\r\n            yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n        }\r\n    }\r\n}\r\n\r\nexport function* watchScoutingInfoActionsSaga() {\r\n    yield all([\r\n        takeEvery(ActionTypesScoutingInfo.FETCH_SCOUTINGINFO_REQUEST, fetchScoutingInfoWorker),\r\n        takeEvery(ActionTypesScoutingInfo.FETCH_INFO_REQUEST, fetchScoutingInfoWorker)\r\n    ]);\r\n}","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { API_HTTP } from '../../../configs/environment';\r\nimport {\r\n    ActionTypesScoutingRequest,\r\n    fetchScoutingRequestFailure,\r\n    fetchScoutingRequestSuccess,\r\n    fetchInfoFailure,\r\n    fetchInfoSuccess,\r\n    registerScoutingRequestSuccess,\r\n    registerScoutingRequestFailure\r\n} from './index';\r\nimport {createRequest} from '../../rootSagas';\r\nimport {ActionTypesMasterclass, registerMasterclassFailure, registerMasterclassSuccess} from \"../masterclass\";\r\nimport {registerMasterclassWorker} from \"../masterclass/saga\";\r\n\r\n\r\nexport function* fetchScoutingRequestWorker({type, params = {}}) { //first arg = action\r\n    const { _id } = params\r\n    let url = _id ? `${API_HTTP}/scoutingRequest/${_id}` : `${API_HTTP}/scoutingRequest`\r\n    if (params.type) {\r\n        url = url.concat(`?type=${params.type}`)\r\n    }\r\n    const request = {\r\n        method: 'get',\r\n        url\r\n    };\r\n\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :', response);\r\n        if (type === ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_REQUEST) {\r\n            yield put(fetchScoutingRequestSuccess(response.map(info => ({...info, photoUrl: `${API_HTTP}/images/${info.photo}`}))));\r\n        } else {\r\n            yield put(fetchInfoSuccess({...response, photoUrl: `${API_HTTP}/images/${response.photo}`}));\r\n        }\r\n    } catch (e) {\r\n        if (type === ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_REQUEST) {\r\n            yield put(fetchScoutingRequestFailure((e.response && e.response.data) || e));\r\n        } else {\r\n            yield put(fetchInfoFailure((e.response && e.response.data) || e));\r\n        }\r\n    }\r\n}\r\n\r\nexport function* registerScoutingRequestWorker({type, params = {}}) {\r\n    const { requestObject, place, task } = params\r\n    const url = `${API_HTTP}/scoutingRequest`;\r\n    const data = {requestObject, place, task}\r\n    const request = {\r\n        method: 'post',\r\n        url,\r\n        data\r\n    };\r\n    try {\r\n        const response = yield call(createRequest, request);\r\n        console.log('response :>> ', response);\r\n        yield put(registerScoutingRequestSuccess(response))\r\n    } catch (e) {\r\n        yield put(registerScoutingRequestFailure((e.response && e.response.data) || e));\r\n    }\r\n}\r\n\r\nexport function* watchScoutingRequestActionsSaga() {\r\n    yield all([\r\n        takeEvery(ActionTypesScoutingRequest.FETCH_SCOUTINGREQUEST_REQUEST, fetchScoutingRequestWorker),\r\n        takeEvery(ActionTypesScoutingRequest.FETCH_INFO_REQUEST, fetchScoutingRequestWorker),\r\n        takeEvery(ActionTypesScoutingRequest.REGISTER_SCOUTINGREQUEST_REQUEST, registerScoutingRequestWorker)\r\n    ]);\r\n}","import * as sagas from \"./sagas\";\r\n\r\nexport const initSagas = sagaMiddleware => {\r\n  return Object.values(sagas).forEach(sagaMiddleware.run.bind(sagaMiddleware));\r\n};","import {createStore, applyMiddleware, compose, combineReducers} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport library from './modules/library';\r\nimport scoutingInfo from './modules/scoutingInfo'\r\nimport scoutingRequest from './modules/scoutingRequest'\r\nimport users from './modules/users';\r\nimport masterclass from './modules/masterclass';\r\nimport operation from './modules/operation';\r\nimport {initSagas} from './initSagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleWares = [sagaMiddleware];\r\nconst enhancer = composeWithDevTools(applyMiddleware(...middleWares));\r\n\r\nexport default function configureStore() {\r\n  const rootReducer = combineReducers({\r\n    library,\r\n    scoutingInfo,\r\n    scoutingRequest,\r\n    masterclass,\r\n    operation,\r\n    users\r\n  });\r\n  const store = compose(\r\n    enhancer\r\n  )(createStore)(rootReducer);\r\n  initSagas(sagaMiddleware);\r\n\r\n  return store;\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport {Provider} from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport 'semantic-ui-less/semantic.less'\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nconst store = configureStore()\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}